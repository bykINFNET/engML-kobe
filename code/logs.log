2024-04-23 17:53:58,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 17:53:58,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 17:53:58,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 17:53:58,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 17:56:30,745:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2467924404.py:41: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 17:56:30,757:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2467924404.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.drop_duplicates(inplace=True)

2024-04-23 17:57:41,931:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\872634991.py:41: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 17:57:41,933:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\872634991.py:43: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.drop_duplicates(inplace=True)

2024-04-23 17:58:58,112:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\1354607109.py:41: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 17:59:47,737:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2703019146.py:41: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 22:02:31,297:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2489149898.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 22:02:44,567:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2489149898.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[object_data] = df_dev[object_data].astype('object')

2024-04-23 22:02:44,569:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2489149898.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:02:44,571:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2489149898.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:03:27,175:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2070267811.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 22:03:39,931:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2070267811.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[object_data] = df_dev[object_data].astype('object')

2024-04-23 22:03:39,932:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2070267811.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:03:39,934:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2070267811.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:09:26,570:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\1430897368.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 22:09:39,305:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\1430897368.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[object_data] = df_dev[object_data].astype('object')

2024-04-23 22:09:39,307:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\1430897368.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:09:39,309:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\1430897368.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:12:50,408:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2512581840.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-23 22:13:02,720:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2512581840.py:75: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[object_data] = df_dev[object_data].astype('object')

2024-04-23 22:13:02,721:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2512581840.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-23 22:13:02,723:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\2512581840.py:80: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 07:42:51,447:INFO:PyCaret ClassificationExperiment
2024-04-24 07:42:51,447:INFO:Logging name: clf-default-name
2024-04-24 07:42:51,447:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 07:42:51,448:INFO:version 3.2.0
2024-04-24 07:42:51,448:INFO:Initializing setup()
2024-04-24 07:42:51,448:INFO:self.USI: 2ac8
2024-04-24 07:42:51,448:INFO:self._variable_keys: {'pipeline', 'fold_generator', 'n_jobs_param', 'y_test', 'X', 'is_multiclass', 'memory', 'X_train', 'y', 'exp_id', '_ml_usecase', 'idx', 'exp_name_log', 'gpu_n_jobs_param', 'target_param', 'fold_groups_param', 'logging_param', 'X_test', 'seed', 'data', 'USI', 'gpu_param', 'fold_shuffle_param', 'y_train', 'fix_imbalance', '_available_plots', 'log_plots_param', 'html_param'}
2024-04-24 07:42:51,448:INFO:Checking environment
2024-04-24 07:42:51,448:INFO:python_version: 3.9.19
2024-04-24 07:42:51,448:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 07:42:51,448:INFO:machine: AMD64
2024-04-24 07:42:51,448:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 07:42:51,449:INFO:Memory: svmem(total=33897811968, available=10421870592, percent=69.3, used=23475941376, free=10421870592)
2024-04-24 07:42:51,449:INFO:Physical Core: 14
2024-04-24 07:42:51,449:INFO:Logical Core: 20
2024-04-24 07:42:51,449:INFO:Checking libraries
2024-04-24 07:42:51,450:INFO:System:
2024-04-24 07:42:51,450:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 07:42:51,450:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 07:42:51,450:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 07:42:51,450:INFO:PyCaret required dependencies:
2024-04-24 07:42:51,557:INFO:                 pip: 23.3.1
2024-04-24 07:42:51,557:INFO:          setuptools: 68.2.2
2024-04-24 07:42:51,557:INFO:             pycaret: 3.2.0
2024-04-24 07:42:51,557:INFO:             IPython: 8.15.0
2024-04-24 07:42:51,557:INFO:          ipywidgets: 8.1.2
2024-04-24 07:42:51,557:INFO:                tqdm: 4.65.0
2024-04-24 07:42:51,557:INFO:               numpy: 1.25.2
2024-04-24 07:42:51,557:INFO:              pandas: 1.5.3
2024-04-24 07:42:51,557:INFO:              jinja2: 3.1.3
2024-04-24 07:42:51,557:INFO:               scipy: 1.11.4
2024-04-24 07:42:51,557:INFO:              joblib: 1.2.0
2024-04-24 07:42:51,557:INFO:             sklearn: 1.2.2
2024-04-24 07:42:51,557:INFO:                pyod: 1.0.9
2024-04-24 07:42:51,557:INFO:            imblearn: 0.11.0
2024-04-24 07:42:51,557:INFO:   category_encoders: 2.6.3
2024-04-24 07:42:51,557:INFO:            lightgbm: 4.1.0
2024-04-24 07:42:51,557:INFO:               numba: 0.59.1
2024-04-24 07:42:51,557:INFO:            requests: 2.31.0
2024-04-24 07:42:51,557:INFO:          matplotlib: 3.8.4
2024-04-24 07:42:51,557:INFO:          scikitplot: 0.3.7
2024-04-24 07:42:51,557:INFO:         yellowbrick: 1.5
2024-04-24 07:42:51,558:INFO:              plotly: 5.19.0
2024-04-24 07:42:51,558:INFO:    plotly-resampler: Not installed
2024-04-24 07:42:51,558:INFO:             kaleido: 0.2.1
2024-04-24 07:42:51,558:INFO:           schemdraw: 0.15
2024-04-24 07:42:51,558:INFO:         statsmodels: 0.14.0
2024-04-24 07:42:51,558:INFO:              sktime: 0.21.1
2024-04-24 07:42:51,558:INFO:               tbats: 1.1.3
2024-04-24 07:42:51,558:INFO:            pmdarima: 2.0.4
2024-04-24 07:42:51,558:INFO:              psutil: 5.9.0
2024-04-24 07:42:51,558:INFO:          markupsafe: 2.1.3
2024-04-24 07:42:51,558:INFO:             pickle5: Not installed
2024-04-24 07:42:51,558:INFO:         cloudpickle: 2.2.1
2024-04-24 07:42:51,558:INFO:         deprecation: 2.1.0
2024-04-24 07:42:51,558:INFO:              xxhash: 2.0.2
2024-04-24 07:42:51,558:INFO:           wurlitzer: 3.0.3
2024-04-24 07:42:51,558:INFO:PyCaret optional dependencies:
2024-04-24 07:42:51,567:INFO:                shap: Not installed
2024-04-24 07:42:51,567:INFO:           interpret: Not installed
2024-04-24 07:42:51,567:INFO:                umap: 0.5.3
2024-04-24 07:42:51,567:INFO:     ydata_profiling: Not installed
2024-04-24 07:42:51,567:INFO:  explainerdashboard: Not installed
2024-04-24 07:42:51,567:INFO:             autoviz: Not installed
2024-04-24 07:42:51,567:INFO:           fairlearn: Not installed
2024-04-24 07:42:51,567:INFO:          deepchecks: Not installed
2024-04-24 07:42:51,567:INFO:             xgboost: 1.7.6
2024-04-24 07:42:51,567:INFO:            catboost: 1.2.3
2024-04-24 07:42:51,567:INFO:              kmodes: 0.12.2
2024-04-24 07:42:51,567:INFO:             mlxtend: 0.23.1
2024-04-24 07:42:51,567:INFO:       statsforecast: Not installed
2024-04-24 07:42:51,567:INFO:        tune_sklearn: Not installed
2024-04-24 07:42:51,567:INFO:                 ray: Not installed
2024-04-24 07:42:51,567:INFO:            hyperopt: Not installed
2024-04-24 07:42:51,567:INFO:              optuna: Not installed
2024-04-24 07:42:51,567:INFO:               skopt: Not installed
2024-04-24 07:42:51,567:INFO:              mlflow: 2.9.2
2024-04-24 07:42:51,567:INFO:              gradio: Not installed
2024-04-24 07:42:51,567:INFO:             fastapi: Not installed
2024-04-24 07:42:51,567:INFO:             uvicorn: Not installed
2024-04-24 07:42:51,567:INFO:              m2cgen: Not installed
2024-04-24 07:42:51,567:INFO:           evidently: Not installed
2024-04-24 07:42:51,567:INFO:               fugue: Not installed
2024-04-24 07:42:51,567:INFO:           streamlit: 1.32.0
2024-04-24 07:42:51,567:INFO:             prophet: Not installed
2024-04-24 07:42:51,567:INFO:None
2024-04-24 07:42:51,567:INFO:Set up data.
2024-04-24 07:42:51,584:INFO:Set up folding strategy.
2024-04-24 07:42:51,584:INFO:Set up train/test split.
2024-04-24 07:42:51,584:INFO:Set up data.
2024-04-24 07:42:51,589:INFO:Set up index.
2024-04-24 07:42:51,589:INFO:Assigning column types.
2024-04-24 07:42:51,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 07:42:51,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 07:42:51,627:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:42:51,674:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:51,724:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:51,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 07:42:51,787:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:42:51,805:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:51,807:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:51,807:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 07:42:51,841:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:42:51,875:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:51,877:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:51,932:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:42:51,955:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:51,957:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:51,957:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 07:42:52,010:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:52,011:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:52,089:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:52,091:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:52,095:INFO:Preparing preprocessing pipeline...
2024-04-24 07:42:52,097:INFO:Set up simple imputation.
2024-04-24 07:42:52,101:INFO:Set up encoding of ordinal features.
2024-04-24 07:42:52,102:INFO:Set up encoding of categorical features.
2024-04-24 07:42:52,102:INFO:Set up feature normalization.
2024-04-24 07:42:52,243:INFO:Finished creating preprocessing pipeline.
2024-04-24 07:42:52,261:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 07:42:52,261:INFO:Creating final display dataframe.
2024-04-24 07:42:52,503:INFO:Setup _display_container:                     Description             Value
0                    Session id              4186
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape       (20285, 13)
5   Transformed train set shape       (16228, 13)
6    Transformed test set shape        (4057, 13)
7              Ordinal features                 1
8              Numeric features                 4
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              2ac8
2024-04-24 07:42:52,565:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:52,567:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:52,648:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:42:52,651:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:42:52,652:INFO:setup() successfully completed in 1.22s...............
2024-04-24 07:42:52,652:INFO:Initializing compare_models()
2024-04-24 07:42:52,653:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 07:42:52,653:INFO:Checking exceptions
2024-04-24 07:42:52,658:INFO:Preparing display monitor
2024-04-24 07:42:52,686:INFO:Initializing Logistic Regression
2024-04-24 07:42:52,687:INFO:Total runtime is 1.66932741800944e-05 minutes
2024-04-24 07:42:52,690:INFO:SubProcess create_model() called ==================================
2024-04-24 07:42:52,690:INFO:Initializing create_model()
2024-04-24 07:42:52,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD50366940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:42:52,691:INFO:Checking exceptions
2024-04-24 07:42:52,691:INFO:Importing libraries
2024-04-24 07:42:52,691:INFO:Copying training dataset
2024-04-24 07:42:52,698:INFO:Defining folds
2024-04-24 07:42:52,698:INFO:Declaring metric variables
2024-04-24 07:42:52,702:INFO:Importing untrained model
2024-04-24 07:42:52,705:INFO:Logistic Regression Imported successfully
2024-04-24 07:42:52,712:INFO:Starting cross validation
2024-04-24 07:42:52,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:42:57,989:INFO:Calculating mean and std
2024-04-24 07:42:57,992:INFO:Creating metrics dataframe
2024-04-24 07:42:57,999:INFO:Uploading results into container
2024-04-24 07:42:58,001:INFO:Uploading model into container now
2024-04-24 07:42:58,001:INFO:_master_model_container: 1
2024-04-24 07:42:58,002:INFO:_display_container: 2
2024-04-24 07:42:58,002:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4186, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 07:42:58,003:INFO:create_model() successfully completed......................................
2024-04-24 07:42:58,770:INFO:SubProcess create_model() end ==================================
2024-04-24 07:42:58,770:INFO:Creating metrics dataframe
2024-04-24 07:42:58,781:INFO:Initializing Decision Tree Classifier
2024-04-24 07:42:58,781:INFO:Total runtime is 0.1015841801961263 minutes
2024-04-24 07:42:58,785:INFO:SubProcess create_model() called ==================================
2024-04-24 07:42:58,786:INFO:Initializing create_model()
2024-04-24 07:42:58,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD50366940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:42:58,786:INFO:Checking exceptions
2024-04-24 07:42:58,786:INFO:Importing libraries
2024-04-24 07:42:58,786:INFO:Copying training dataset
2024-04-24 07:42:58,794:INFO:Defining folds
2024-04-24 07:42:58,795:INFO:Declaring metric variables
2024-04-24 07:42:58,800:INFO:Importing untrained model
2024-04-24 07:42:58,804:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:42:58,812:INFO:Starting cross validation
2024-04-24 07:42:58,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:43:02,785:INFO:Calculating mean and std
2024-04-24 07:43:02,787:INFO:Creating metrics dataframe
2024-04-24 07:43:02,791:INFO:Uploading results into container
2024-04-24 07:43:02,792:INFO:Uploading model into container now
2024-04-24 07:43:02,792:INFO:_master_model_container: 2
2024-04-24 07:43:02,792:INFO:_display_container: 2
2024-04-24 07:43:02,793:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4186, splitter='best')
2024-04-24 07:43:02,793:INFO:create_model() successfully completed......................................
2024-04-24 07:43:03,146:INFO:SubProcess create_model() end ==================================
2024-04-24 07:43:03,146:INFO:Creating metrics dataframe
2024-04-24 07:43:03,165:INFO:Initializing create_model()
2024-04-24 07:43:03,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4186, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:03,166:INFO:Checking exceptions
2024-04-24 07:43:03,169:INFO:Importing libraries
2024-04-24 07:43:03,169:INFO:Copying training dataset
2024-04-24 07:43:03,174:INFO:Defining folds
2024-04-24 07:43:03,174:INFO:Declaring metric variables
2024-04-24 07:43:03,175:INFO:Importing untrained model
2024-04-24 07:43:03,175:INFO:Declaring custom model
2024-04-24 07:43:03,175:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:43:03,178:INFO:Cross validation set to False
2024-04-24 07:43:03,178:INFO:Fitting Model
2024-04-24 07:43:03,340:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4186, splitter='best')
2024-04-24 07:43:03,340:INFO:create_model() successfully completed......................................
2024-04-24 07:43:03,484:INFO:Initializing create_model()
2024-04-24 07:43:03,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4186, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:03,484:INFO:Checking exceptions
2024-04-24 07:43:03,486:INFO:Importing libraries
2024-04-24 07:43:03,486:INFO:Copying training dataset
2024-04-24 07:43:03,494:INFO:Defining folds
2024-04-24 07:43:03,494:INFO:Declaring metric variables
2024-04-24 07:43:03,494:INFO:Importing untrained model
2024-04-24 07:43:03,494:INFO:Declaring custom model
2024-04-24 07:43:03,495:INFO:Logistic Regression Imported successfully
2024-04-24 07:43:03,496:INFO:Cross validation set to False
2024-04-24 07:43:03,496:INFO:Fitting Model
2024-04-24 07:43:03,629:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4186, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 07:43:03,629:INFO:create_model() successfully completed......................................
2024-04-24 07:43:03,756:INFO:_master_model_container: 2
2024-04-24 07:43:03,756:INFO:_display_container: 2
2024-04-24 07:43:03,757:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4186, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4186, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 07:43:03,757:INFO:compare_models() successfully completed......................................
2024-04-24 07:43:03,757:INFO:Initializing predict_model()
2024-04-24 07:43:03,757:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD54745460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4186, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD525A7430>)
2024-04-24 07:43:03,758:INFO:Checking exceptions
2024-04-24 07:43:03,758:INFO:Preloading libraries
2024-04-24 07:43:41,752:INFO:PyCaret ClassificationExperiment
2024-04-24 07:43:41,752:INFO:Logging name: clf-default-name
2024-04-24 07:43:41,752:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 07:43:41,752:INFO:version 3.2.0
2024-04-24 07:43:41,752:INFO:Initializing setup()
2024-04-24 07:43:41,753:INFO:self.USI: 1b9f
2024-04-24 07:43:41,753:INFO:self._variable_keys: {'pipeline', 'fold_generator', 'n_jobs_param', 'y_test', 'X', 'is_multiclass', 'memory', 'X_train', 'y', 'exp_id', '_ml_usecase', 'idx', 'exp_name_log', 'gpu_n_jobs_param', 'target_param', 'fold_groups_param', 'logging_param', 'X_test', 'seed', 'data', 'USI', 'gpu_param', 'fold_shuffle_param', 'y_train', 'fix_imbalance', '_available_plots', 'log_plots_param', 'html_param'}
2024-04-24 07:43:41,753:INFO:Checking environment
2024-04-24 07:43:41,753:INFO:python_version: 3.9.19
2024-04-24 07:43:41,753:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 07:43:41,753:INFO:machine: AMD64
2024-04-24 07:43:41,753:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 07:43:41,753:INFO:Memory: svmem(total=33897811968, available=7871700992, percent=76.8, used=26026110976, free=7871700992)
2024-04-24 07:43:41,753:INFO:Physical Core: 14
2024-04-24 07:43:41,753:INFO:Logical Core: 20
2024-04-24 07:43:41,753:INFO:Checking libraries
2024-04-24 07:43:41,753:INFO:System:
2024-04-24 07:43:41,753:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 07:43:41,753:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 07:43:41,753:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 07:43:41,753:INFO:PyCaret required dependencies:
2024-04-24 07:43:41,753:INFO:                 pip: 23.3.1
2024-04-24 07:43:41,753:INFO:          setuptools: 68.2.2
2024-04-24 07:43:41,754:INFO:             pycaret: 3.2.0
2024-04-24 07:43:41,754:INFO:             IPython: 8.15.0
2024-04-24 07:43:41,754:INFO:          ipywidgets: 8.1.2
2024-04-24 07:43:41,754:INFO:                tqdm: 4.65.0
2024-04-24 07:43:41,754:INFO:               numpy: 1.25.2
2024-04-24 07:43:41,754:INFO:              pandas: 1.5.3
2024-04-24 07:43:41,754:INFO:              jinja2: 3.1.3
2024-04-24 07:43:41,754:INFO:               scipy: 1.11.4
2024-04-24 07:43:41,754:INFO:              joblib: 1.2.0
2024-04-24 07:43:41,754:INFO:             sklearn: 1.2.2
2024-04-24 07:43:41,754:INFO:                pyod: 1.0.9
2024-04-24 07:43:41,754:INFO:            imblearn: 0.11.0
2024-04-24 07:43:41,754:INFO:   category_encoders: 2.6.3
2024-04-24 07:43:41,754:INFO:            lightgbm: 4.1.0
2024-04-24 07:43:41,754:INFO:               numba: 0.59.1
2024-04-24 07:43:41,754:INFO:            requests: 2.31.0
2024-04-24 07:43:41,754:INFO:          matplotlib: 3.8.4
2024-04-24 07:43:41,754:INFO:          scikitplot: 0.3.7
2024-04-24 07:43:41,754:INFO:         yellowbrick: 1.5
2024-04-24 07:43:41,754:INFO:              plotly: 5.19.0
2024-04-24 07:43:41,754:INFO:    plotly-resampler: Not installed
2024-04-24 07:43:41,754:INFO:             kaleido: 0.2.1
2024-04-24 07:43:41,754:INFO:           schemdraw: 0.15
2024-04-24 07:43:41,754:INFO:         statsmodels: 0.14.0
2024-04-24 07:43:41,754:INFO:              sktime: 0.21.1
2024-04-24 07:43:41,755:INFO:               tbats: 1.1.3
2024-04-24 07:43:41,755:INFO:            pmdarima: 2.0.4
2024-04-24 07:43:41,755:INFO:              psutil: 5.9.0
2024-04-24 07:43:41,755:INFO:          markupsafe: 2.1.3
2024-04-24 07:43:41,755:INFO:             pickle5: Not installed
2024-04-24 07:43:41,755:INFO:         cloudpickle: 2.2.1
2024-04-24 07:43:41,755:INFO:         deprecation: 2.1.0
2024-04-24 07:43:41,755:INFO:              xxhash: 2.0.2
2024-04-24 07:43:41,755:INFO:           wurlitzer: 3.0.3
2024-04-24 07:43:41,755:INFO:PyCaret optional dependencies:
2024-04-24 07:43:41,755:INFO:                shap: Not installed
2024-04-24 07:43:41,755:INFO:           interpret: Not installed
2024-04-24 07:43:41,755:INFO:                umap: 0.5.3
2024-04-24 07:43:41,755:INFO:     ydata_profiling: Not installed
2024-04-24 07:43:41,755:INFO:  explainerdashboard: Not installed
2024-04-24 07:43:41,755:INFO:             autoviz: Not installed
2024-04-24 07:43:41,755:INFO:           fairlearn: Not installed
2024-04-24 07:43:41,755:INFO:          deepchecks: Not installed
2024-04-24 07:43:41,755:INFO:             xgboost: 1.7.6
2024-04-24 07:43:41,755:INFO:            catboost: 1.2.3
2024-04-24 07:43:41,755:INFO:              kmodes: 0.12.2
2024-04-24 07:43:41,755:INFO:             mlxtend: 0.23.1
2024-04-24 07:43:41,756:INFO:       statsforecast: Not installed
2024-04-24 07:43:41,756:INFO:        tune_sklearn: Not installed
2024-04-24 07:43:41,756:INFO:                 ray: Not installed
2024-04-24 07:43:41,756:INFO:            hyperopt: Not installed
2024-04-24 07:43:41,756:INFO:              optuna: Not installed
2024-04-24 07:43:41,756:INFO:               skopt: Not installed
2024-04-24 07:43:41,756:INFO:              mlflow: 2.9.2
2024-04-24 07:43:41,756:INFO:              gradio: Not installed
2024-04-24 07:43:41,756:INFO:             fastapi: Not installed
2024-04-24 07:43:41,756:INFO:             uvicorn: Not installed
2024-04-24 07:43:41,756:INFO:              m2cgen: Not installed
2024-04-24 07:43:41,756:INFO:           evidently: Not installed
2024-04-24 07:43:41,756:INFO:               fugue: Not installed
2024-04-24 07:43:41,756:INFO:           streamlit: 1.32.0
2024-04-24 07:43:41,756:INFO:             prophet: Not installed
2024-04-24 07:43:41,756:INFO:None
2024-04-24 07:43:41,756:INFO:Set up data.
2024-04-24 07:43:41,765:INFO:Set up folding strategy.
2024-04-24 07:43:41,765:INFO:Set up train/test split.
2024-04-24 07:43:41,765:INFO:Set up data.
2024-04-24 07:43:41,773:INFO:Set up index.
2024-04-24 07:43:41,773:INFO:Assigning column types.
2024-04-24 07:43:41,778:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 07:43:41,812:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 07:43:41,813:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:43:41,846:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:41,849:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:41,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 07:43:41,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:43:41,928:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:41,930:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:41,931:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 07:43:41,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:43:42,002:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:42,004:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:42,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:43:42,093:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:42,098:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:42,098:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 07:43:42,206:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:42,208:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:42,260:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:42,262:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:42,264:INFO:Preparing preprocessing pipeline...
2024-04-24 07:43:42,265:INFO:Set up simple imputation.
2024-04-24 07:43:42,272:INFO:Set up encoding of ordinal features.
2024-04-24 07:43:42,275:INFO:Set up encoding of categorical features.
2024-04-24 07:43:42,275:INFO:Set up feature normalization.
2024-04-24 07:43:42,389:INFO:Finished creating preprocessing pipeline.
2024-04-24 07:43:42,406:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 07:43:42,406:INFO:Creating final display dataframe.
2024-04-24 07:43:42,701:INFO:Setup _display_container:                     Description             Value
0                    Session id              1489
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape       (20285, 13)
5   Transformed train set shape       (16228, 13)
6    Transformed test set shape        (4057, 13)
7              Ordinal features                 1
8              Numeric features                 4
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              1b9f
2024-04-24 07:43:42,759:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:42,761:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:42,842:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:43:42,845:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:43:42,846:INFO:setup() successfully completed in 1.09s...............
2024-04-24 07:43:42,848:INFO:Initializing compare_models()
2024-04-24 07:43:42,848:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 07:43:42,848:INFO:Checking exceptions
2024-04-24 07:43:42,853:INFO:Preparing display monitor
2024-04-24 07:43:42,876:INFO:Initializing Logistic Regression
2024-04-24 07:43:42,877:INFO:Total runtime is 0.0 minutes
2024-04-24 07:43:42,880:INFO:SubProcess create_model() called ==================================
2024-04-24 07:43:42,880:INFO:Initializing create_model()
2024-04-24 07:43:42,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD4CEB3B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:42,881:INFO:Checking exceptions
2024-04-24 07:43:42,881:INFO:Importing libraries
2024-04-24 07:43:42,881:INFO:Copying training dataset
2024-04-24 07:43:42,887:INFO:Defining folds
2024-04-24 07:43:42,887:INFO:Declaring metric variables
2024-04-24 07:43:42,890:INFO:Importing untrained model
2024-04-24 07:43:42,892:INFO:Logistic Regression Imported successfully
2024-04-24 07:43:42,899:INFO:Starting cross validation
2024-04-24 07:43:42,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:43:43,143:INFO:Calculating mean and std
2024-04-24 07:43:43,143:INFO:Creating metrics dataframe
2024-04-24 07:43:43,147:INFO:Uploading results into container
2024-04-24 07:43:43,147:INFO:Uploading model into container now
2024-04-24 07:43:43,148:INFO:_master_model_container: 1
2024-04-24 07:43:43,148:INFO:_display_container: 2
2024-04-24 07:43:43,148:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1489, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 07:43:43,148:INFO:create_model() successfully completed......................................
2024-04-24 07:43:43,273:INFO:SubProcess create_model() end ==================================
2024-04-24 07:43:43,273:INFO:Creating metrics dataframe
2024-04-24 07:43:43,281:INFO:Initializing Decision Tree Classifier
2024-04-24 07:43:43,281:INFO:Total runtime is 0.006749939918518066 minutes
2024-04-24 07:43:43,285:INFO:SubProcess create_model() called ==================================
2024-04-24 07:43:43,285:INFO:Initializing create_model()
2024-04-24 07:43:43,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD4CEB3B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:43,285:INFO:Checking exceptions
2024-04-24 07:43:43,285:INFO:Importing libraries
2024-04-24 07:43:43,285:INFO:Copying training dataset
2024-04-24 07:43:43,289:INFO:Defining folds
2024-04-24 07:43:43,289:INFO:Declaring metric variables
2024-04-24 07:43:43,292:INFO:Importing untrained model
2024-04-24 07:43:43,295:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:43:43,301:INFO:Starting cross validation
2024-04-24 07:43:43,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:43:43,590:INFO:Calculating mean and std
2024-04-24 07:43:43,591:INFO:Creating metrics dataframe
2024-04-24 07:43:43,594:INFO:Uploading results into container
2024-04-24 07:43:43,595:INFO:Uploading model into container now
2024-04-24 07:43:43,595:INFO:_master_model_container: 2
2024-04-24 07:43:43,595:INFO:_display_container: 2
2024-04-24 07:43:43,595:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best')
2024-04-24 07:43:43,596:INFO:create_model() successfully completed......................................
2024-04-24 07:43:43,722:INFO:SubProcess create_model() end ==================================
2024-04-24 07:43:43,722:INFO:Creating metrics dataframe
2024-04-24 07:43:43,737:INFO:Initializing create_model()
2024-04-24 07:43:43,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:43,738:INFO:Checking exceptions
2024-04-24 07:43:43,739:INFO:Importing libraries
2024-04-24 07:43:43,740:INFO:Copying training dataset
2024-04-24 07:43:43,744:INFO:Defining folds
2024-04-24 07:43:43,744:INFO:Declaring metric variables
2024-04-24 07:43:43,745:INFO:Importing untrained model
2024-04-24 07:43:43,745:INFO:Declaring custom model
2024-04-24 07:43:43,745:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:43:43,746:INFO:Cross validation set to False
2024-04-24 07:43:43,746:INFO:Fitting Model
2024-04-24 07:43:43,873:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best')
2024-04-24 07:43:43,874:INFO:create_model() successfully completed......................................
2024-04-24 07:43:43,994:INFO:Initializing create_model()
2024-04-24 07:43:43,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1489, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:43,994:INFO:Checking exceptions
2024-04-24 07:43:43,996:INFO:Importing libraries
2024-04-24 07:43:43,996:INFO:Copying training dataset
2024-04-24 07:43:44,005:INFO:Defining folds
2024-04-24 07:43:44,005:INFO:Declaring metric variables
2024-04-24 07:43:44,005:INFO:Importing untrained model
2024-04-24 07:43:44,005:INFO:Declaring custom model
2024-04-24 07:43:44,005:INFO:Logistic Regression Imported successfully
2024-04-24 07:43:44,006:INFO:Cross validation set to False
2024-04-24 07:43:44,006:INFO:Fitting Model
2024-04-24 07:43:44,112:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1489, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 07:43:44,112:INFO:create_model() successfully completed......................................
2024-04-24 07:43:44,258:INFO:_master_model_container: 2
2024-04-24 07:43:44,258:INFO:_display_container: 2
2024-04-24 07:43:44,259:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1489, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 07:43:44,259:INFO:compare_models() successfully completed......................................
2024-04-24 07:43:44,260:INFO:Initializing predict_model()
2024-04-24 07:43:44,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD58C22820>)
2024-04-24 07:43:44,260:INFO:Checking exceptions
2024-04-24 07:43:44,260:INFO:Preloading libraries
2024-04-24 07:43:45,201:INFO:Initializing predict_model()
2024-04-24 07:43:45,201:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1489, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD58AA1040>)
2024-04-24 07:43:45,201:INFO:Checking exceptions
2024-04-24 07:43:45,201:INFO:Preloading libraries
2024-04-24 07:43:46,567:INFO:Initializing tune_model()
2024-04-24 07:43:46,567:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>)
2024-04-24 07:43:46,567:INFO:Checking exceptions
2024-04-24 07:43:46,583:INFO:Copying training dataset
2024-04-24 07:43:46,588:INFO:Checking base model
2024-04-24 07:43:46,588:INFO:Base model : Decision Tree Classifier
2024-04-24 07:43:46,593:INFO:Declaring metric variables
2024-04-24 07:43:46,597:INFO:Defining Hyperparameters
2024-04-24 07:43:46,747:INFO:Tuning with n_jobs=-1
2024-04-24 07:43:46,747:INFO:Initializing RandomizedSearchCV
2024-04-24 07:43:47,366:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini'}
2024-04-24 07:43:47,366:INFO:Hyperparameter search completed
2024-04-24 07:43:47,367:INFO:SubProcess create_model() called ==================================
2024-04-24 07:43:47,367:INFO:Initializing create_model()
2024-04-24 07:43:47,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD504364F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.005, 'max_features': 'sqrt', 'max_depth': 6, 'criterion': 'gini'})
2024-04-24 07:43:47,367:INFO:Checking exceptions
2024-04-24 07:43:47,367:INFO:Importing libraries
2024-04-24 07:43:47,367:INFO:Copying training dataset
2024-04-24 07:43:47,371:INFO:Defining folds
2024-04-24 07:43:47,372:INFO:Declaring metric variables
2024-04-24 07:43:47,374:INFO:Importing untrained model
2024-04-24 07:43:47,374:INFO:Declaring custom model
2024-04-24 07:43:47,377:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:43:47,382:INFO:Starting cross validation
2024-04-24 07:43:47,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:43:47,673:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,674:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,681:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,682:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,682:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,682:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,683:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,741:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,741:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,741:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 07:43:47,749:INFO:Calculating mean and std
2024-04-24 07:43:47,750:INFO:Creating metrics dataframe
2024-04-24 07:43:47,758:INFO:Finalizing model
2024-04-24 07:43:47,858:INFO:Uploading results into container
2024-04-24 07:43:47,859:INFO:Uploading model into container now
2024-04-24 07:43:47,860:INFO:_master_model_container: 3
2024-04-24 07:43:47,860:INFO:_display_container: 5
2024-04-24 07:43:47,861:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best')
2024-04-24 07:43:47,861:INFO:create_model() successfully completed......................................
2024-04-24 07:43:47,999:INFO:SubProcess create_model() end ==================================
2024-04-24 07:43:47,999:INFO:choose_better activated
2024-04-24 07:43:48,003:INFO:SubProcess create_model() called ==================================
2024-04-24 07:43:48,004:INFO:Initializing create_model()
2024-04-24 07:43:48,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:48,004:INFO:Checking exceptions
2024-04-24 07:43:48,007:INFO:Importing libraries
2024-04-24 07:43:48,007:INFO:Copying training dataset
2024-04-24 07:43:48,013:INFO:Defining folds
2024-04-24 07:43:48,013:INFO:Declaring metric variables
2024-04-24 07:43:48,013:INFO:Importing untrained model
2024-04-24 07:43:48,013:INFO:Declaring custom model
2024-04-24 07:43:48,014:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:43:48,014:INFO:Starting cross validation
2024-04-24 07:43:48,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:43:48,335:INFO:Calculating mean and std
2024-04-24 07:43:48,336:INFO:Creating metrics dataframe
2024-04-24 07:43:48,339:INFO:Finalizing model
2024-04-24 07:43:48,478:INFO:Uploading results into container
2024-04-24 07:43:48,479:INFO:Uploading model into container now
2024-04-24 07:43:48,479:INFO:_master_model_container: 4
2024-04-24 07:43:48,479:INFO:_display_container: 6
2024-04-24 07:43:48,479:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best')
2024-04-24 07:43:48,479:INFO:create_model() successfully completed......................................
2024-04-24 07:43:48,596:INFO:SubProcess create_model() end ==================================
2024-04-24 07:43:48,597:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best') result for F1 is 0.5492
2024-04-24 07:43:48,597:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best') result for F1 is 0.0
2024-04-24 07:43:48,598:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best') is best model
2024-04-24 07:43:48,598:INFO:choose_better completed
2024-04-24 07:43:48,598:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 07:43:48,611:INFO:_master_model_container: 4
2024-04-24 07:43:48,611:INFO:_display_container: 5
2024-04-24 07:43:48,611:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best')
2024-04-24 07:43:48,611:INFO:tune_model() successfully completed......................................
2024-04-24 07:43:48,733:INFO:Initializing predict_model()
2024-04-24 07:43:48,733:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD513CC160>)
2024-04-24 07:43:48,734:INFO:Checking exceptions
2024-04-24 07:43:48,734:INFO:Preloading libraries
2024-04-24 07:43:49,039:INFO:Initializing finalize_model()
2024-04-24 07:43:49,039:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 07:43:49,039:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best')
2024-04-24 07:43:49,042:INFO:Initializing create_model()
2024-04-24 07:43:49,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD4C8ABFD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1489, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:43:49,042:INFO:Checking exceptions
2024-04-24 07:43:49,044:INFO:Importing libraries
2024-04-24 07:43:49,044:INFO:Copying training dataset
2024-04-24 07:43:49,044:INFO:Defining folds
2024-04-24 07:43:49,044:INFO:Declaring metric variables
2024-04-24 07:43:49,044:INFO:Importing untrained model
2024-04-24 07:43:49,044:INFO:Declaring custom model
2024-04-24 07:43:49,045:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:43:49,046:INFO:Cross validation set to False
2024-04-24 07:43:49,046:INFO:Fitting Model
2024-04-24 07:43:49,232:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1489, splitter='best'))],
         verbose=False)
2024-04-24 07:43:49,233:INFO:create_model() successfully completed......................................
2024-04-24 07:43:49,341:INFO:_master_model_container: 4
2024-04-24 07:43:49,341:INFO:_display_container: 6
2024-04-24 07:43:49,371:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1489, splitter='best'))],
         verbose=False)
2024-04-24 07:43:49,371:INFO:finalize_model() successfully completed......................................
2024-04-24 07:43:49,526:INFO:Initializing save_model()
2024-04-24 07:43:49,526:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1489, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 07:43:49,526:INFO:Adding model into prep_pipe
2024-04-24 07:43:49,526:WARNING:Only Model saved as it was a pipeline.
2024-04-24 07:43:49,533:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 07:43:49,560:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1489, splitter='best'))],
         verbose=False)
2024-04-24 07:43:49,560:INFO:save_model() successfully completed......................................
2024-04-24 07:43:49,681:INFO:Initializing load_model()
2024-04-24 07:43:49,681:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 07:44:50,177:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\40868184.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-24 07:45:02,875:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\40868184.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 07:45:02,876:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_30824\40868184.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 07:47:01,565:INFO:PyCaret ClassificationExperiment
2024-04-24 07:47:01,565:INFO:Logging name: clf-default-name
2024-04-24 07:47:01,565:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 07:47:01,565:INFO:version 3.2.0
2024-04-24 07:47:01,566:INFO:Initializing setup()
2024-04-24 07:47:01,566:INFO:self.USI: 6b6b
2024-04-24 07:47:01,566:INFO:self._variable_keys: {'pipeline', 'fold_generator', 'n_jobs_param', 'y_test', 'X', 'is_multiclass', 'memory', 'X_train', 'y', 'exp_id', '_ml_usecase', 'idx', 'exp_name_log', 'gpu_n_jobs_param', 'target_param', 'fold_groups_param', 'logging_param', 'X_test', 'seed', 'data', 'USI', 'gpu_param', 'fold_shuffle_param', 'y_train', 'fix_imbalance', '_available_plots', 'log_plots_param', 'html_param'}
2024-04-24 07:47:01,566:INFO:Checking environment
2024-04-24 07:47:01,566:INFO:python_version: 3.9.19
2024-04-24 07:47:01,566:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 07:47:01,566:INFO:machine: AMD64
2024-04-24 07:47:01,566:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 07:47:01,566:INFO:Memory: svmem(total=33897811968, available=7890006016, percent=76.7, used=26007805952, free=7890006016)
2024-04-24 07:47:01,566:INFO:Physical Core: 14
2024-04-24 07:47:01,566:INFO:Logical Core: 20
2024-04-24 07:47:01,566:INFO:Checking libraries
2024-04-24 07:47:01,566:INFO:System:
2024-04-24 07:47:01,566:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 07:47:01,566:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 07:47:01,566:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 07:47:01,566:INFO:PyCaret required dependencies:
2024-04-24 07:47:01,566:INFO:                 pip: 23.3.1
2024-04-24 07:47:01,566:INFO:          setuptools: 68.2.2
2024-04-24 07:47:01,566:INFO:             pycaret: 3.2.0
2024-04-24 07:47:01,566:INFO:             IPython: 8.15.0
2024-04-24 07:47:01,566:INFO:          ipywidgets: 8.1.2
2024-04-24 07:47:01,566:INFO:                tqdm: 4.65.0
2024-04-24 07:47:01,566:INFO:               numpy: 1.25.2
2024-04-24 07:47:01,566:INFO:              pandas: 1.5.3
2024-04-24 07:47:01,566:INFO:              jinja2: 3.1.3
2024-04-24 07:47:01,566:INFO:               scipy: 1.11.4
2024-04-24 07:47:01,566:INFO:              joblib: 1.2.0
2024-04-24 07:47:01,567:INFO:             sklearn: 1.2.2
2024-04-24 07:47:01,567:INFO:                pyod: 1.0.9
2024-04-24 07:47:01,567:INFO:            imblearn: 0.11.0
2024-04-24 07:47:01,567:INFO:   category_encoders: 2.6.3
2024-04-24 07:47:01,567:INFO:            lightgbm: 4.1.0
2024-04-24 07:47:01,567:INFO:               numba: 0.59.1
2024-04-24 07:47:01,567:INFO:            requests: 2.31.0
2024-04-24 07:47:01,567:INFO:          matplotlib: 3.8.4
2024-04-24 07:47:01,567:INFO:          scikitplot: 0.3.7
2024-04-24 07:47:01,567:INFO:         yellowbrick: 1.5
2024-04-24 07:47:01,567:INFO:              plotly: 5.19.0
2024-04-24 07:47:01,567:INFO:    plotly-resampler: Not installed
2024-04-24 07:47:01,567:INFO:             kaleido: 0.2.1
2024-04-24 07:47:01,567:INFO:           schemdraw: 0.15
2024-04-24 07:47:01,567:INFO:         statsmodels: 0.14.0
2024-04-24 07:47:01,567:INFO:              sktime: 0.21.1
2024-04-24 07:47:01,567:INFO:               tbats: 1.1.3
2024-04-24 07:47:01,567:INFO:            pmdarima: 2.0.4
2024-04-24 07:47:01,567:INFO:              psutil: 5.9.0
2024-04-24 07:47:01,567:INFO:          markupsafe: 2.1.3
2024-04-24 07:47:01,567:INFO:             pickle5: Not installed
2024-04-24 07:47:01,567:INFO:         cloudpickle: 2.2.1
2024-04-24 07:47:01,567:INFO:         deprecation: 2.1.0
2024-04-24 07:47:01,567:INFO:              xxhash: 2.0.2
2024-04-24 07:47:01,567:INFO:           wurlitzer: 3.0.3
2024-04-24 07:47:01,567:INFO:PyCaret optional dependencies:
2024-04-24 07:47:01,568:INFO:                shap: Not installed
2024-04-24 07:47:01,568:INFO:           interpret: Not installed
2024-04-24 07:47:01,568:INFO:                umap: 0.5.3
2024-04-24 07:47:01,568:INFO:     ydata_profiling: Not installed
2024-04-24 07:47:01,568:INFO:  explainerdashboard: Not installed
2024-04-24 07:47:01,568:INFO:             autoviz: Not installed
2024-04-24 07:47:01,568:INFO:           fairlearn: Not installed
2024-04-24 07:47:01,568:INFO:          deepchecks: Not installed
2024-04-24 07:47:01,568:INFO:             xgboost: 1.7.6
2024-04-24 07:47:01,568:INFO:            catboost: 1.2.3
2024-04-24 07:47:01,568:INFO:              kmodes: 0.12.2
2024-04-24 07:47:01,568:INFO:             mlxtend: 0.23.1
2024-04-24 07:47:01,568:INFO:       statsforecast: Not installed
2024-04-24 07:47:01,568:INFO:        tune_sklearn: Not installed
2024-04-24 07:47:01,568:INFO:                 ray: Not installed
2024-04-24 07:47:01,568:INFO:            hyperopt: Not installed
2024-04-24 07:47:01,568:INFO:              optuna: Not installed
2024-04-24 07:47:01,568:INFO:               skopt: Not installed
2024-04-24 07:47:01,568:INFO:              mlflow: 2.9.2
2024-04-24 07:47:01,568:INFO:              gradio: Not installed
2024-04-24 07:47:01,568:INFO:             fastapi: Not installed
2024-04-24 07:47:01,568:INFO:             uvicorn: Not installed
2024-04-24 07:47:01,568:INFO:              m2cgen: Not installed
2024-04-24 07:47:01,569:INFO:           evidently: Not installed
2024-04-24 07:47:01,569:INFO:               fugue: Not installed
2024-04-24 07:47:01,569:INFO:           streamlit: 1.32.0
2024-04-24 07:47:01,569:INFO:             prophet: Not installed
2024-04-24 07:47:01,569:INFO:None
2024-04-24 07:47:01,569:INFO:Set up data.
2024-04-24 07:47:01,578:INFO:Set up folding strategy.
2024-04-24 07:47:01,579:INFO:Set up train/test split.
2024-04-24 07:47:01,579:INFO:Set up data.
2024-04-24 07:47:01,585:INFO:Set up index.
2024-04-24 07:47:01,586:INFO:Assigning column types.
2024-04-24 07:47:01,591:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 07:47:01,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 07:47:01,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:47:01,676:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:01,679:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:01,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 07:47:01,731:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:47:01,752:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:01,754:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:01,754:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 07:47:01,788:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:47:01,818:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:01,821:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:01,877:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 07:47:01,904:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:01,908:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:01,908:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 07:47:01,980:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:01,983:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:02,051:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:02,053:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:02,055:INFO:Preparing preprocessing pipeline...
2024-04-24 07:47:02,056:INFO:Set up simple imputation.
2024-04-24 07:47:02,060:INFO:Set up encoding of ordinal features.
2024-04-24 07:47:02,062:INFO:Set up encoding of categorical features.
2024-04-24 07:47:02,062:INFO:Set up feature normalization.
2024-04-24 07:47:02,193:INFO:Finished creating preprocessing pipeline.
2024-04-24 07:47:02,214:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 07:47:02,215:INFO:Creating final display dataframe.
2024-04-24 07:47:02,485:INFO:Setup _display_container:                     Description             Value
0                    Session id              3495
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape       (20285, 13)
5   Transformed train set shape       (16228, 13)
6    Transformed test set shape        (4057, 13)
7              Ordinal features                 1
8              Numeric features                 4
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              6b6b
2024-04-24 07:47:02,553:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:02,557:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:02,651:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 07:47:02,654:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 07:47:02,655:INFO:setup() successfully completed in 1.09s...............
2024-04-24 07:47:02,655:INFO:Initializing compare_models()
2024-04-24 07:47:02,656:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 07:47:02,656:INFO:Checking exceptions
2024-04-24 07:47:02,661:INFO:Preparing display monitor
2024-04-24 07:47:02,686:INFO:Initializing Logistic Regression
2024-04-24 07:47:02,686:INFO:Total runtime is 0.0 minutes
2024-04-24 07:47:02,690:INFO:SubProcess create_model() called ==================================
2024-04-24 07:47:02,690:INFO:Initializing create_model()
2024-04-24 07:47:02,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD552E85B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:47:02,691:INFO:Checking exceptions
2024-04-24 07:47:02,691:INFO:Importing libraries
2024-04-24 07:47:02,691:INFO:Copying training dataset
2024-04-24 07:47:02,698:INFO:Defining folds
2024-04-24 07:47:02,698:INFO:Declaring metric variables
2024-04-24 07:47:02,702:INFO:Importing untrained model
2024-04-24 07:47:02,707:INFO:Logistic Regression Imported successfully
2024-04-24 07:47:02,714:INFO:Starting cross validation
2024-04-24 07:47:02,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:47:02,950:INFO:Calculating mean and std
2024-04-24 07:47:02,951:INFO:Creating metrics dataframe
2024-04-24 07:47:02,953:INFO:Uploading results into container
2024-04-24 07:47:02,954:INFO:Uploading model into container now
2024-04-24 07:47:02,954:INFO:_master_model_container: 1
2024-04-24 07:47:02,954:INFO:_display_container: 2
2024-04-24 07:47:02,954:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 07:47:02,954:INFO:create_model() successfully completed......................................
2024-04-24 07:47:03,183:INFO:SubProcess create_model() end ==================================
2024-04-24 07:47:03,183:INFO:Creating metrics dataframe
2024-04-24 07:47:03,194:INFO:Initializing Decision Tree Classifier
2024-04-24 07:47:03,194:INFO:Total runtime is 0.00846250057220459 minutes
2024-04-24 07:47:03,199:INFO:SubProcess create_model() called ==================================
2024-04-24 07:47:03,199:INFO:Initializing create_model()
2024-04-24 07:47:03,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD552E85B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:47:03,199:INFO:Checking exceptions
2024-04-24 07:47:03,199:INFO:Importing libraries
2024-04-24 07:47:03,199:INFO:Copying training dataset
2024-04-24 07:47:03,206:INFO:Defining folds
2024-04-24 07:47:03,206:INFO:Declaring metric variables
2024-04-24 07:47:03,210:INFO:Importing untrained model
2024-04-24 07:47:03,215:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:47:03,222:INFO:Starting cross validation
2024-04-24 07:47:03,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:47:03,499:INFO:Calculating mean and std
2024-04-24 07:47:03,499:INFO:Creating metrics dataframe
2024-04-24 07:47:03,501:INFO:Uploading results into container
2024-04-24 07:47:03,502:INFO:Uploading model into container now
2024-04-24 07:47:03,502:INFO:_master_model_container: 2
2024-04-24 07:47:03,503:INFO:_display_container: 2
2024-04-24 07:47:03,503:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best')
2024-04-24 07:47:03,503:INFO:create_model() successfully completed......................................
2024-04-24 07:47:03,775:INFO:SubProcess create_model() end ==================================
2024-04-24 07:47:03,776:INFO:Creating metrics dataframe
2024-04-24 07:47:03,801:INFO:Initializing create_model()
2024-04-24 07:47:03,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:47:03,802:INFO:Checking exceptions
2024-04-24 07:47:03,804:INFO:Importing libraries
2024-04-24 07:47:03,804:INFO:Copying training dataset
2024-04-24 07:47:03,812:INFO:Defining folds
2024-04-24 07:47:03,812:INFO:Declaring metric variables
2024-04-24 07:47:03,812:INFO:Importing untrained model
2024-04-24 07:47:03,812:INFO:Declaring custom model
2024-04-24 07:47:03,813:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:47:03,814:INFO:Cross validation set to False
2024-04-24 07:47:03,814:INFO:Fitting Model
2024-04-24 07:47:03,935:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best')
2024-04-24 07:47:03,935:INFO:create_model() successfully completed......................................
2024-04-24 07:47:04,065:INFO:Initializing create_model()
2024-04-24 07:47:04,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:47:04,065:INFO:Checking exceptions
2024-04-24 07:47:04,067:INFO:Importing libraries
2024-04-24 07:47:04,068:INFO:Copying training dataset
2024-04-24 07:47:04,076:INFO:Defining folds
2024-04-24 07:47:04,076:INFO:Declaring metric variables
2024-04-24 07:47:04,076:INFO:Importing untrained model
2024-04-24 07:47:04,076:INFO:Declaring custom model
2024-04-24 07:47:04,077:INFO:Logistic Regression Imported successfully
2024-04-24 07:47:04,078:INFO:Cross validation set to False
2024-04-24 07:47:04,078:INFO:Fitting Model
2024-04-24 07:47:04,165:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 07:47:04,165:INFO:create_model() successfully completed......................................
2024-04-24 07:47:04,300:INFO:_master_model_container: 2
2024-04-24 07:47:04,301:INFO:_display_container: 2
2024-04-24 07:47:04,301:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 07:47:04,301:INFO:compare_models() successfully completed......................................
2024-04-24 07:47:04,301:INFO:Initializing predict_model()
2024-04-24 07:47:04,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD510D5790>)
2024-04-24 07:47:04,301:INFO:Checking exceptions
2024-04-24 07:47:04,301:INFO:Preloading libraries
2024-04-24 07:47:05,193:INFO:Initializing predict_model()
2024-04-24 07:47:05,193:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3495, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD550945E0>)
2024-04-24 07:47:05,193:INFO:Checking exceptions
2024-04-24 07:47:05,193:INFO:Preloading libraries
2024-04-24 07:47:06,336:INFO:Initializing tune_model()
2024-04-24 07:47:06,336:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>)
2024-04-24 07:47:06,336:INFO:Checking exceptions
2024-04-24 07:47:06,349:INFO:Copying training dataset
2024-04-24 07:47:06,354:INFO:Checking base model
2024-04-24 07:47:06,354:INFO:Base model : Decision Tree Classifier
2024-04-24 07:47:06,359:INFO:Declaring metric variables
2024-04-24 07:47:06,363:INFO:Defining Hyperparameters
2024-04-24 07:47:06,505:INFO:Tuning with n_jobs=-1
2024-04-24 07:47:06,505:INFO:Initializing RandomizedSearchCV
2024-04-24 07:47:07,076:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 3, 'actual_estimator__criterion': 'entropy'}
2024-04-24 07:47:07,076:INFO:Hyperparameter search completed
2024-04-24 07:47:07,076:INFO:SubProcess create_model() called ==================================
2024-04-24 07:47:07,077:INFO:Initializing create_model()
2024-04-24 07:47:07,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FD5531C0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 3, 'criterion': 'entropy'})
2024-04-24 07:47:07,077:INFO:Checking exceptions
2024-04-24 07:47:07,077:INFO:Importing libraries
2024-04-24 07:47:07,077:INFO:Copying training dataset
2024-04-24 07:47:07,081:INFO:Defining folds
2024-04-24 07:47:07,081:INFO:Declaring metric variables
2024-04-24 07:47:07,084:INFO:Importing untrained model
2024-04-24 07:47:07,084:INFO:Declaring custom model
2024-04-24 07:47:07,087:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:47:07,093:INFO:Starting cross validation
2024-04-24 07:47:07,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:47:07,304:INFO:Calculating mean and std
2024-04-24 07:47:07,304:INFO:Creating metrics dataframe
2024-04-24 07:47:07,310:INFO:Finalizing model
2024-04-24 07:47:07,390:INFO:Uploading results into container
2024-04-24 07:47:07,391:INFO:Uploading model into container now
2024-04-24 07:47:07,391:INFO:_master_model_container: 3
2024-04-24 07:47:07,392:INFO:_display_container: 5
2024-04-24 07:47:07,392:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=3, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best')
2024-04-24 07:47:07,392:INFO:create_model() successfully completed......................................
2024-04-24 07:47:07,522:INFO:SubProcess create_model() end ==================================
2024-04-24 07:47:07,522:INFO:choose_better activated
2024-04-24 07:47:07,530:INFO:SubProcess create_model() called ==================================
2024-04-24 07:47:07,531:INFO:Initializing create_model()
2024-04-24 07:47:07,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:47:07,531:INFO:Checking exceptions
2024-04-24 07:47:07,532:INFO:Importing libraries
2024-04-24 07:47:07,532:INFO:Copying training dataset
2024-04-24 07:47:07,537:INFO:Defining folds
2024-04-24 07:47:07,537:INFO:Declaring metric variables
2024-04-24 07:47:07,537:INFO:Importing untrained model
2024-04-24 07:47:07,537:INFO:Declaring custom model
2024-04-24 07:47:07,539:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:47:07,539:INFO:Starting cross validation
2024-04-24 07:47:07,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 07:47:07,809:INFO:Calculating mean and std
2024-04-24 07:47:07,809:INFO:Creating metrics dataframe
2024-04-24 07:47:07,811:INFO:Finalizing model
2024-04-24 07:47:07,920:INFO:Uploading results into container
2024-04-24 07:47:07,921:INFO:Uploading model into container now
2024-04-24 07:47:07,921:INFO:_master_model_container: 4
2024-04-24 07:47:07,921:INFO:_display_container: 6
2024-04-24 07:47:07,921:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best')
2024-04-24 07:47:07,921:INFO:create_model() successfully completed......................................
2024-04-24 07:47:08,038:INFO:SubProcess create_model() end ==================================
2024-04-24 07:47:08,038:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best') result for F1 is 0.5472
2024-04-24 07:47:08,039:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=3, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best') result for F1 is 0.4483
2024-04-24 07:47:08,039:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best') is best model
2024-04-24 07:47:08,039:INFO:choose_better completed
2024-04-24 07:47:08,040:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 07:47:08,052:INFO:_master_model_container: 4
2024-04-24 07:47:08,052:INFO:_display_container: 5
2024-04-24 07:47:08,052:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best')
2024-04-24 07:47:08,052:INFO:tune_model() successfully completed......................................
2024-04-24 07:47:08,178:INFO:Initializing predict_model()
2024-04-24 07:47:08,178:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD5021F1F0>)
2024-04-24 07:47:08,178:INFO:Checking exceptions
2024-04-24 07:47:08,178:INFO:Preloading libraries
2024-04-24 07:47:08,449:INFO:Initializing finalize_model()
2024-04-24 07:47:08,449:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 07:47:08,449:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best')
2024-04-24 07:47:08,452:INFO:Initializing create_model()
2024-04-24 07:47:08,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD5532B4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3495, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 07:47:08,452:INFO:Checking exceptions
2024-04-24 07:47:08,455:INFO:Importing libraries
2024-04-24 07:47:08,455:INFO:Copying training dataset
2024-04-24 07:47:08,455:INFO:Defining folds
2024-04-24 07:47:08,455:INFO:Declaring metric variables
2024-04-24 07:47:08,455:INFO:Importing untrained model
2024-04-24 07:47:08,456:INFO:Declaring custom model
2024-04-24 07:47:08,456:INFO:Decision Tree Classifier Imported successfully
2024-04-24 07:47:08,457:INFO:Cross validation set to False
2024-04-24 07:47:08,457:INFO:Fitting Model
2024-04-24 07:47:08,654:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3495, splitter='best'))],
         verbose=False)
2024-04-24 07:47:08,654:INFO:create_model() successfully completed......................................
2024-04-24 07:47:08,787:INFO:_master_model_container: 4
2024-04-24 07:47:08,787:INFO:_display_container: 6
2024-04-24 07:47:08,807:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3495, splitter='best'))],
         verbose=False)
2024-04-24 07:47:08,807:INFO:finalize_model() successfully completed......................................
2024-04-24 07:47:08,975:INFO:Initializing save_model()
2024-04-24 07:47:08,975:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3495, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 07:47:08,975:INFO:Adding model into prep_pipe
2024-04-24 07:47:08,975:WARNING:Only Model saved as it was a pipeline.
2024-04-24 07:47:08,981:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 07:47:09,001:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3495, splitter='best'))],
         verbose=False)
2024-04-24 07:47:09,001:INFO:save_model() successfully completed......................................
2024-04-24 07:47:09,131:INFO:Initializing load_model()
2024-04-24 07:47:09,132:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 08:04:16,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 08:04:16,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 08:04:16,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 08:04:16,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 08:04:54,148:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\40868184.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-24 08:05:06,751:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\40868184.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 08:05:06,753:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\40868184.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 08:05:27,776:INFO:PyCaret ClassificationExperiment
2024-04-24 08:05:27,778:INFO:Logging name: clf-default-name
2024-04-24 08:05:27,778:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 08:05:27,778:INFO:version 3.2.0
2024-04-24 08:05:27,778:INFO:Initializing setup()
2024-04-24 08:05:27,778:INFO:self.USI: 1324
2024-04-24 08:05:27,778:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 08:05:27,778:INFO:Checking environment
2024-04-24 08:05:27,778:INFO:python_version: 3.9.19
2024-04-24 08:05:27,778:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 08:05:27,778:INFO:machine: AMD64
2024-04-24 08:05:27,779:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 08:05:27,779:INFO:Memory: svmem(total=33897811968, available=10123382784, percent=70.1, used=23774429184, free=10123382784)
2024-04-24 08:05:27,779:INFO:Physical Core: 14
2024-04-24 08:05:27,779:INFO:Logical Core: 20
2024-04-24 08:05:27,779:INFO:Checking libraries
2024-04-24 08:05:27,779:INFO:System:
2024-04-24 08:05:27,779:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 08:05:27,779:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 08:05:27,779:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 08:05:27,780:INFO:PyCaret required dependencies:
2024-04-24 08:05:27,836:INFO:                 pip: 23.3.1
2024-04-24 08:05:27,836:INFO:          setuptools: 68.2.2
2024-04-24 08:05:27,836:INFO:             pycaret: 3.2.0
2024-04-24 08:05:27,836:INFO:             IPython: 8.15.0
2024-04-24 08:05:27,836:INFO:          ipywidgets: 8.1.2
2024-04-24 08:05:27,836:INFO:                tqdm: 4.65.0
2024-04-24 08:05:27,836:INFO:               numpy: 1.25.2
2024-04-24 08:05:27,836:INFO:              pandas: 1.5.3
2024-04-24 08:05:27,837:INFO:              jinja2: 3.1.3
2024-04-24 08:05:27,837:INFO:               scipy: 1.11.4
2024-04-24 08:05:27,837:INFO:              joblib: 1.2.0
2024-04-24 08:05:27,837:INFO:             sklearn: 1.2.2
2024-04-24 08:05:27,837:INFO:                pyod: 1.0.9
2024-04-24 08:05:27,837:INFO:            imblearn: 0.11.0
2024-04-24 08:05:27,837:INFO:   category_encoders: 2.6.3
2024-04-24 08:05:27,837:INFO:            lightgbm: 4.1.0
2024-04-24 08:05:27,837:INFO:               numba: 0.59.1
2024-04-24 08:05:27,837:INFO:            requests: 2.31.0
2024-04-24 08:05:27,837:INFO:          matplotlib: 3.8.4
2024-04-24 08:05:27,837:INFO:          scikitplot: 0.3.7
2024-04-24 08:05:27,837:INFO:         yellowbrick: 1.5
2024-04-24 08:05:27,837:INFO:              plotly: 5.19.0
2024-04-24 08:05:27,837:INFO:    plotly-resampler: Not installed
2024-04-24 08:05:27,837:INFO:             kaleido: 0.2.1
2024-04-24 08:05:27,837:INFO:           schemdraw: 0.15
2024-04-24 08:05:27,837:INFO:         statsmodels: 0.14.0
2024-04-24 08:05:27,837:INFO:              sktime: 0.21.1
2024-04-24 08:05:27,837:INFO:               tbats: 1.1.3
2024-04-24 08:05:27,837:INFO:            pmdarima: 2.0.4
2024-04-24 08:05:27,837:INFO:              psutil: 5.9.0
2024-04-24 08:05:27,837:INFO:          markupsafe: 2.1.3
2024-04-24 08:05:27,837:INFO:             pickle5: Not installed
2024-04-24 08:05:27,837:INFO:         cloudpickle: 2.2.1
2024-04-24 08:05:27,837:INFO:         deprecation: 2.1.0
2024-04-24 08:05:27,837:INFO:              xxhash: 2.0.2
2024-04-24 08:05:27,837:INFO:           wurlitzer: 3.0.3
2024-04-24 08:05:27,837:INFO:PyCaret optional dependencies:
2024-04-24 08:05:27,845:INFO:                shap: Not installed
2024-04-24 08:05:27,845:INFO:           interpret: Not installed
2024-04-24 08:05:27,845:INFO:                umap: 0.5.3
2024-04-24 08:05:27,845:INFO:     ydata_profiling: Not installed
2024-04-24 08:05:27,845:INFO:  explainerdashboard: Not installed
2024-04-24 08:05:27,845:INFO:             autoviz: Not installed
2024-04-24 08:05:27,845:INFO:           fairlearn: Not installed
2024-04-24 08:05:27,845:INFO:          deepchecks: Not installed
2024-04-24 08:05:27,845:INFO:             xgboost: 1.7.6
2024-04-24 08:05:27,845:INFO:            catboost: 1.2.3
2024-04-24 08:05:27,845:INFO:              kmodes: 0.12.2
2024-04-24 08:05:27,845:INFO:             mlxtend: 0.23.1
2024-04-24 08:05:27,845:INFO:       statsforecast: Not installed
2024-04-24 08:05:27,845:INFO:        tune_sklearn: Not installed
2024-04-24 08:05:27,845:INFO:                 ray: Not installed
2024-04-24 08:05:27,846:INFO:            hyperopt: Not installed
2024-04-24 08:05:27,846:INFO:              optuna: Not installed
2024-04-24 08:05:27,846:INFO:               skopt: Not installed
2024-04-24 08:05:27,846:INFO:              mlflow: 2.9.2
2024-04-24 08:05:27,846:INFO:              gradio: Not installed
2024-04-24 08:05:27,846:INFO:             fastapi: Not installed
2024-04-24 08:05:27,846:INFO:             uvicorn: Not installed
2024-04-24 08:05:27,846:INFO:              m2cgen: Not installed
2024-04-24 08:05:27,846:INFO:           evidently: Not installed
2024-04-24 08:05:27,846:INFO:               fugue: Not installed
2024-04-24 08:05:27,846:INFO:           streamlit: 1.32.0
2024-04-24 08:05:27,846:INFO:             prophet: Not installed
2024-04-24 08:05:27,846:INFO:None
2024-04-24 08:05:27,846:INFO:Set up data.
2024-04-24 08:05:27,851:INFO:Set up folding strategy.
2024-04-24 08:05:27,851:INFO:Set up train/test split.
2024-04-24 08:05:27,851:INFO:Set up data.
2024-04-24 08:05:27,855:INFO:Set up index.
2024-04-24 08:05:27,856:INFO:Assigning column types.
2024-04-24 08:05:27,859:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 08:05:27,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 08:05:27,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:05:27,950:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:27,984:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 08:05:28,048:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:05:28,070:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,072:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,072:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 08:05:28,126:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:05:28,154:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,156:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:05:28,230:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,233:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,234:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 08:05:28,325:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,327:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,385:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,387:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,389:INFO:Preparing preprocessing pipeline...
2024-04-24 08:05:28,391:INFO:Set up simple imputation.
2024-04-24 08:05:28,394:INFO:Set up encoding of ordinal features.
2024-04-24 08:05:28,395:INFO:Set up encoding of categorical features.
2024-04-24 08:05:28,395:INFO:Set up feature normalization.
2024-04-24 08:05:28,485:INFO:Finished creating preprocessing pipeline.
2024-04-24 08:05:28,511:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                    transformer=OrdinalEncoder(cols=['playoffs'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'playoffs',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 08:05:28,511:INFO:Creating final display dataframe.
2024-04-24 08:05:28,691:INFO:Setup _display_container:                     Description             Value
0                    Session id              6338
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Ordinal features                 1
8              Numeric features                 5
9          Categorical features                 1
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              1324
2024-04-24 08:05:28,753:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,755:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,830:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:05:28,832:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:05:28,832:INFO:setup() successfully completed in 1.06s...............
2024-04-24 08:05:28,832:INFO:Initializing compare_models()
2024-04-24 08:05:28,832:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 08:05:28,833:INFO:Checking exceptions
2024-04-24 08:05:28,836:INFO:Preparing display monitor
2024-04-24 08:05:28,860:INFO:Initializing Logistic Regression
2024-04-24 08:05:28,860:INFO:Total runtime is 0.0 minutes
2024-04-24 08:05:28,865:INFO:SubProcess create_model() called ==================================
2024-04-24 08:05:28,865:INFO:Initializing create_model()
2024-04-24 08:05:28,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B95DE2B370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:05:28,866:INFO:Checking exceptions
2024-04-24 08:05:28,866:INFO:Importing libraries
2024-04-24 08:05:28,866:INFO:Copying training dataset
2024-04-24 08:05:28,874:INFO:Defining folds
2024-04-24 08:05:28,874:INFO:Declaring metric variables
2024-04-24 08:05:28,877:INFO:Importing untrained model
2024-04-24 08:05:28,881:INFO:Logistic Regression Imported successfully
2024-04-24 08:05:28,888:INFO:Starting cross validation
2024-04-24 08:05:28,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:05:33,463:INFO:Calculating mean and std
2024-04-24 08:05:33,464:INFO:Creating metrics dataframe
2024-04-24 08:05:33,468:INFO:Uploading results into container
2024-04-24 08:05:33,469:INFO:Uploading model into container now
2024-04-24 08:05:33,470:INFO:_master_model_container: 1
2024-04-24 08:05:33,470:INFO:_display_container: 2
2024-04-24 08:05:33,470:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 08:05:33,470:INFO:create_model() successfully completed......................................
2024-04-24 08:05:33,759:INFO:SubProcess create_model() end ==================================
2024-04-24 08:05:33,760:INFO:Creating metrics dataframe
2024-04-24 08:05:33,770:INFO:Initializing Decision Tree Classifier
2024-04-24 08:05:33,771:INFO:Total runtime is 0.0818575938542684 minutes
2024-04-24 08:05:33,775:INFO:SubProcess create_model() called ==================================
2024-04-24 08:05:33,776:INFO:Initializing create_model()
2024-04-24 08:05:33,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B95DE2B370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:05:33,776:INFO:Checking exceptions
2024-04-24 08:05:33,776:INFO:Importing libraries
2024-04-24 08:05:33,776:INFO:Copying training dataset
2024-04-24 08:05:33,783:INFO:Defining folds
2024-04-24 08:05:33,783:INFO:Declaring metric variables
2024-04-24 08:05:33,789:INFO:Importing untrained model
2024-04-24 08:05:33,793:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:05:33,802:INFO:Starting cross validation
2024-04-24 08:05:33,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:05:37,931:INFO:Calculating mean and std
2024-04-24 08:05:37,933:INFO:Creating metrics dataframe
2024-04-24 08:05:37,937:INFO:Uploading results into container
2024-04-24 08:05:37,938:INFO:Uploading model into container now
2024-04-24 08:05:37,938:INFO:_master_model_container: 2
2024-04-24 08:05:37,938:INFO:_display_container: 2
2024-04-24 08:05:37,939:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best')
2024-04-24 08:05:37,939:INFO:create_model() successfully completed......................................
2024-04-24 08:05:38,059:INFO:SubProcess create_model() end ==================================
2024-04-24 08:05:38,059:INFO:Creating metrics dataframe
2024-04-24 08:05:38,076:INFO:Initializing create_model()
2024-04-24 08:05:38,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:05:38,077:INFO:Checking exceptions
2024-04-24 08:05:38,078:INFO:Importing libraries
2024-04-24 08:05:38,078:INFO:Copying training dataset
2024-04-24 08:05:38,083:INFO:Defining folds
2024-04-24 08:05:38,083:INFO:Declaring metric variables
2024-04-24 08:05:38,083:INFO:Importing untrained model
2024-04-24 08:05:38,083:INFO:Declaring custom model
2024-04-24 08:05:38,083:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:05:38,084:INFO:Cross validation set to False
2024-04-24 08:05:38,084:INFO:Fitting Model
2024-04-24 08:05:38,187:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best')
2024-04-24 08:05:38,187:INFO:create_model() successfully completed......................................
2024-04-24 08:05:38,295:INFO:Initializing create_model()
2024-04-24 08:05:38,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:05:38,295:INFO:Checking exceptions
2024-04-24 08:05:38,297:INFO:Importing libraries
2024-04-24 08:05:38,297:INFO:Copying training dataset
2024-04-24 08:05:38,303:INFO:Defining folds
2024-04-24 08:05:38,303:INFO:Declaring metric variables
2024-04-24 08:05:38,303:INFO:Importing untrained model
2024-04-24 08:05:38,303:INFO:Declaring custom model
2024-04-24 08:05:38,303:INFO:Logistic Regression Imported successfully
2024-04-24 08:05:38,304:INFO:Cross validation set to False
2024-04-24 08:05:38,305:INFO:Fitting Model
2024-04-24 08:05:38,372:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 08:05:38,372:INFO:create_model() successfully completed......................................
2024-04-24 08:05:38,488:INFO:_master_model_container: 2
2024-04-24 08:05:38,488:INFO:_display_container: 2
2024-04-24 08:05:38,489:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 08:05:38,489:INFO:compare_models() successfully completed......................................
2024-04-24 08:05:38,489:INFO:Initializing predict_model()
2024-04-24 08:05:38,490:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B9615D4280>)
2024-04-24 08:05:38,490:INFO:Checking exceptions
2024-04-24 08:05:38,490:INFO:Preloading libraries
2024-04-24 08:05:39,370:INFO:Initializing predict_model()
2024-04-24 08:05:39,370:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B961245280>)
2024-04-24 08:05:39,370:INFO:Checking exceptions
2024-04-24 08:05:39,370:INFO:Preloading libraries
2024-04-24 08:05:40,437:INFO:Initializing tune_model()
2024-04-24 08:05:40,437:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>)
2024-04-24 08:05:40,437:INFO:Checking exceptions
2024-04-24 08:05:40,457:INFO:Copying training dataset
2024-04-24 08:05:40,462:INFO:Checking base model
2024-04-24 08:05:40,462:INFO:Base model : Decision Tree Classifier
2024-04-24 08:05:40,467:INFO:Declaring metric variables
2024-04-24 08:05:40,471:INFO:Defining Hyperparameters
2024-04-24 08:05:40,580:INFO:Tuning with n_jobs=-1
2024-04-24 08:05:40,581:INFO:Initializing RandomizedSearchCV
2024-04-24 08:05:40,968:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini'}
2024-04-24 08:05:40,968:INFO:Hyperparameter search completed
2024-04-24 08:05:40,968:INFO:SubProcess create_model() called ==================================
2024-04-24 08:05:40,968:INFO:Initializing create_model()
2024-04-24 08:05:40,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B95D625FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 6, 'criterion': 'gini'})
2024-04-24 08:05:40,968:INFO:Checking exceptions
2024-04-24 08:05:40,968:INFO:Importing libraries
2024-04-24 08:05:40,968:INFO:Copying training dataset
2024-04-24 08:05:40,972:INFO:Defining folds
2024-04-24 08:05:40,973:INFO:Declaring metric variables
2024-04-24 08:05:40,975:INFO:Importing untrained model
2024-04-24 08:05:40,975:INFO:Declaring custom model
2024-04-24 08:05:40,978:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:05:40,982:INFO:Starting cross validation
2024-04-24 08:05:40,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:05:41,139:INFO:Calculating mean and std
2024-04-24 08:05:41,139:INFO:Creating metrics dataframe
2024-04-24 08:05:41,145:INFO:Finalizing model
2024-04-24 08:05:41,196:INFO:Uploading results into container
2024-04-24 08:05:41,197:INFO:Uploading model into container now
2024-04-24 08:05:41,197:INFO:_master_model_container: 3
2024-04-24 08:05:41,197:INFO:_display_container: 5
2024-04-24 08:05:41,198:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best')
2024-04-24 08:05:41,198:INFO:create_model() successfully completed......................................
2024-04-24 08:05:41,301:INFO:SubProcess create_model() end ==================================
2024-04-24 08:05:41,301:INFO:choose_better activated
2024-04-24 08:05:41,305:INFO:SubProcess create_model() called ==================================
2024-04-24 08:05:41,306:INFO:Initializing create_model()
2024-04-24 08:05:41,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:05:41,306:INFO:Checking exceptions
2024-04-24 08:05:41,308:INFO:Importing libraries
2024-04-24 08:05:41,308:INFO:Copying training dataset
2024-04-24 08:05:41,314:INFO:Defining folds
2024-04-24 08:05:41,314:INFO:Declaring metric variables
2024-04-24 08:05:41,314:INFO:Importing untrained model
2024-04-24 08:05:41,314:INFO:Declaring custom model
2024-04-24 08:05:41,315:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:05:41,315:INFO:Starting cross validation
2024-04-24 08:05:41,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:05:41,510:INFO:Calculating mean and std
2024-04-24 08:05:41,511:INFO:Creating metrics dataframe
2024-04-24 08:05:41,512:INFO:Finalizing model
2024-04-24 08:05:41,608:INFO:Uploading results into container
2024-04-24 08:05:41,608:INFO:Uploading model into container now
2024-04-24 08:05:41,609:INFO:_master_model_container: 4
2024-04-24 08:05:41,609:INFO:_display_container: 6
2024-04-24 08:05:41,609:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best')
2024-04-24 08:05:41,609:INFO:create_model() successfully completed......................................
2024-04-24 08:05:41,711:INFO:SubProcess create_model() end ==================================
2024-04-24 08:05:41,711:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best') result for F1 is 0.543
2024-04-24 08:05:41,712:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best') result for F1 is 0.5275
2024-04-24 08:05:41,712:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best') is best model
2024-04-24 08:05:41,712:INFO:choose_better completed
2024-04-24 08:05:41,712:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 08:05:41,721:INFO:_master_model_container: 4
2024-04-24 08:05:41,721:INFO:_display_container: 5
2024-04-24 08:05:41,721:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best')
2024-04-24 08:05:41,721:INFO:tune_model() successfully completed......................................
2024-04-24 08:05:41,830:INFO:Initializing predict_model()
2024-04-24 08:05:41,830:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B96135E1F0>)
2024-04-24 08:05:41,830:INFO:Checking exceptions
2024-04-24 08:05:41,830:INFO:Preloading libraries
2024-04-24 08:05:42,083:INFO:Initializing finalize_model()
2024-04-24 08:05:42,083:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 08:05:42,084:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best')
2024-04-24 08:05:42,088:INFO:Initializing create_model()
2024-04-24 08:05:42,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95D6019D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6338, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:05:42,088:INFO:Checking exceptions
2024-04-24 08:05:42,089:INFO:Importing libraries
2024-04-24 08:05:42,089:INFO:Copying training dataset
2024-04-24 08:05:42,089:INFO:Defining folds
2024-04-24 08:05:42,090:INFO:Declaring metric variables
2024-04-24 08:05:42,090:INFO:Importing untrained model
2024-04-24 08:05:42,090:INFO:Declaring custom model
2024-04-24 08:05:42,090:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:05:42,091:INFO:Cross validation set to False
2024-04-24 08:05:42,091:INFO:Fitting Model
2024-04-24 08:05:42,220:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 Trans...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6338, splitter='best'))],
         verbose=False)
2024-04-24 08:05:42,220:INFO:create_model() successfully completed......................................
2024-04-24 08:05:42,315:INFO:_master_model_container: 4
2024-04-24 08:05:42,315:INFO:_display_container: 6
2024-04-24 08:05:42,342:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 Trans...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6338, splitter='best'))],
         verbose=False)
2024-04-24 08:05:42,342:INFO:finalize_model() successfully completed......................................
2024-04-24 08:05:42,475:INFO:Initializing save_model()
2024-04-24 08:05:42,475:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 Trans...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6338, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                    transformer=OrdinalEncoder(cols=['playoffs'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'playoffs',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 08:05:42,475:INFO:Adding model into prep_pipe
2024-04-24 08:05:42,475:WARNING:Only Model saved as it was a pipeline.
2024-04-24 08:05:42,478:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 08:05:42,494:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 Trans...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6338, splitter='best'))],
         verbose=False)
2024-04-24 08:05:42,495:INFO:save_model() successfully completed......................................
2024-04-24 08:05:42,592:INFO:Initializing load_model()
2024-04-24 08:05:42,592:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 08:09:21,102:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\2265479387.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-24 08:10:21,521:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\40868184.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-24 08:10:33,533:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\40868184.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 08:10:33,534:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\40868184.py:76: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev[col] = df_dev[col].astype('category')

2024-04-24 08:18:31,847:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\951640949.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-24 08:19:42,099:INFO:PyCaret ClassificationExperiment
2024-04-24 08:19:42,100:INFO:Logging name: clf-default-name
2024-04-24 08:19:42,100:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 08:19:42,100:INFO:version 3.2.0
2024-04-24 08:19:42,100:INFO:Initializing setup()
2024-04-24 08:19:42,100:INFO:self.USI: 8e81
2024-04-24 08:19:42,100:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 08:19:42,100:INFO:Checking environment
2024-04-24 08:19:42,100:INFO:python_version: 3.9.19
2024-04-24 08:19:42,100:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 08:19:42,100:INFO:machine: AMD64
2024-04-24 08:19:42,100:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 08:19:42,100:INFO:Memory: svmem(total=33897811968, available=11089444864, percent=67.3, used=22808367104, free=11089444864)
2024-04-24 08:19:42,100:INFO:Physical Core: 14
2024-04-24 08:19:42,100:INFO:Logical Core: 20
2024-04-24 08:19:42,100:INFO:Checking libraries
2024-04-24 08:19:42,100:INFO:System:
2024-04-24 08:19:42,100:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 08:19:42,100:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 08:19:42,100:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 08:19:42,100:INFO:PyCaret required dependencies:
2024-04-24 08:19:42,100:INFO:                 pip: 23.3.1
2024-04-24 08:19:42,100:INFO:          setuptools: 68.2.2
2024-04-24 08:19:42,100:INFO:             pycaret: 3.2.0
2024-04-24 08:19:42,100:INFO:             IPython: 8.15.0
2024-04-24 08:19:42,100:INFO:          ipywidgets: 8.1.2
2024-04-24 08:19:42,100:INFO:                tqdm: 4.65.0
2024-04-24 08:19:42,100:INFO:               numpy: 1.25.2
2024-04-24 08:19:42,100:INFO:              pandas: 1.5.3
2024-04-24 08:19:42,101:INFO:              jinja2: 3.1.3
2024-04-24 08:19:42,101:INFO:               scipy: 1.11.4
2024-04-24 08:19:42,101:INFO:              joblib: 1.2.0
2024-04-24 08:19:42,101:INFO:             sklearn: 1.2.2
2024-04-24 08:19:42,101:INFO:                pyod: 1.0.9
2024-04-24 08:19:42,101:INFO:            imblearn: 0.11.0
2024-04-24 08:19:42,101:INFO:   category_encoders: 2.6.3
2024-04-24 08:19:42,101:INFO:            lightgbm: 4.1.0
2024-04-24 08:19:42,101:INFO:               numba: 0.59.1
2024-04-24 08:19:42,101:INFO:            requests: 2.31.0
2024-04-24 08:19:42,101:INFO:          matplotlib: 3.8.4
2024-04-24 08:19:42,101:INFO:          scikitplot: 0.3.7
2024-04-24 08:19:42,101:INFO:         yellowbrick: 1.5
2024-04-24 08:19:42,101:INFO:              plotly: 5.19.0
2024-04-24 08:19:42,101:INFO:    plotly-resampler: Not installed
2024-04-24 08:19:42,101:INFO:             kaleido: 0.2.1
2024-04-24 08:19:42,101:INFO:           schemdraw: 0.15
2024-04-24 08:19:42,101:INFO:         statsmodels: 0.14.0
2024-04-24 08:19:42,101:INFO:              sktime: 0.21.1
2024-04-24 08:19:42,101:INFO:               tbats: 1.1.3
2024-04-24 08:19:42,101:INFO:            pmdarima: 2.0.4
2024-04-24 08:19:42,101:INFO:              psutil: 5.9.0
2024-04-24 08:19:42,101:INFO:          markupsafe: 2.1.3
2024-04-24 08:19:42,101:INFO:             pickle5: Not installed
2024-04-24 08:19:42,101:INFO:         cloudpickle: 2.2.1
2024-04-24 08:19:42,101:INFO:         deprecation: 2.1.0
2024-04-24 08:19:42,101:INFO:              xxhash: 2.0.2
2024-04-24 08:19:42,101:INFO:           wurlitzer: 3.0.3
2024-04-24 08:19:42,101:INFO:PyCaret optional dependencies:
2024-04-24 08:19:42,101:INFO:                shap: Not installed
2024-04-24 08:19:42,101:INFO:           interpret: Not installed
2024-04-24 08:19:42,101:INFO:                umap: 0.5.3
2024-04-24 08:19:42,101:INFO:     ydata_profiling: Not installed
2024-04-24 08:19:42,101:INFO:  explainerdashboard: Not installed
2024-04-24 08:19:42,101:INFO:             autoviz: Not installed
2024-04-24 08:19:42,101:INFO:           fairlearn: Not installed
2024-04-24 08:19:42,101:INFO:          deepchecks: Not installed
2024-04-24 08:19:42,101:INFO:             xgboost: 1.7.6
2024-04-24 08:19:42,101:INFO:            catboost: 1.2.3
2024-04-24 08:19:42,101:INFO:              kmodes: 0.12.2
2024-04-24 08:19:42,101:INFO:             mlxtend: 0.23.1
2024-04-24 08:19:42,102:INFO:       statsforecast: Not installed
2024-04-24 08:19:42,102:INFO:        tune_sklearn: Not installed
2024-04-24 08:19:42,102:INFO:                 ray: Not installed
2024-04-24 08:19:42,102:INFO:            hyperopt: Not installed
2024-04-24 08:19:42,102:INFO:              optuna: Not installed
2024-04-24 08:19:42,102:INFO:               skopt: Not installed
2024-04-24 08:19:42,102:INFO:              mlflow: 2.9.2
2024-04-24 08:19:42,102:INFO:              gradio: Not installed
2024-04-24 08:19:42,102:INFO:             fastapi: Not installed
2024-04-24 08:19:42,102:INFO:             uvicorn: Not installed
2024-04-24 08:19:42,102:INFO:              m2cgen: Not installed
2024-04-24 08:19:42,102:INFO:           evidently: Not installed
2024-04-24 08:19:42,102:INFO:               fugue: Not installed
2024-04-24 08:19:42,102:INFO:           streamlit: 1.32.0
2024-04-24 08:19:42,102:INFO:             prophet: Not installed
2024-04-24 08:19:42,102:INFO:None
2024-04-24 08:19:42,102:INFO:Set up data.
2024-04-24 08:19:42,108:INFO:Set up folding strategy.
2024-04-24 08:19:42,108:INFO:Set up train/test split.
2024-04-24 08:19:42,108:INFO:Set up data.
2024-04-24 08:19:42,112:INFO:Set up index.
2024-04-24 08:19:42,113:INFO:Assigning column types.
2024-04-24 08:19:42,117:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 08:19:42,151:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 08:19:42,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:19:42,174:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,176:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 08:19:42,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:19:42,234:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,237:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,237:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 08:19:42,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:19:42,340:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,342:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,388:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 08:19:42,409:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,412:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,412:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 08:19:42,511:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,513:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,598:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,601:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,612:INFO:Preparing preprocessing pipeline...
2024-04-24 08:19:42,614:INFO:Set up simple imputation.
2024-04-24 08:19:42,614:INFO:Set up feature normalization.
2024-04-24 08:19:42,641:INFO:Finished creating preprocessing pipeline.
2024-04-24 08:19:42,645:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 08:19:42,645:INFO:Creating final display dataframe.
2024-04-24 08:19:42,746:INFO:Setup _display_container:                     Description             Value
0                    Session id              7338
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8e81
2024-04-24 08:19:42,829:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,831:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,886:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 08:19:42,888:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 08:19:42,889:INFO:setup() successfully completed in 0.79s...............
2024-04-24 08:19:42,889:INFO:Initializing compare_models()
2024-04-24 08:19:42,889:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 08:19:42,889:INFO:Checking exceptions
2024-04-24 08:19:42,894:INFO:Preparing display monitor
2024-04-24 08:19:42,920:INFO:Initializing Logistic Regression
2024-04-24 08:19:42,920:INFO:Total runtime is 0.0 minutes
2024-04-24 08:19:42,924:INFO:SubProcess create_model() called ==================================
2024-04-24 08:19:42,925:INFO:Initializing create_model()
2024-04-24 08:19:42,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B962420970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:19:42,925:INFO:Checking exceptions
2024-04-24 08:19:42,925:INFO:Importing libraries
2024-04-24 08:19:42,925:INFO:Copying training dataset
2024-04-24 08:19:42,932:INFO:Defining folds
2024-04-24 08:19:42,932:INFO:Declaring metric variables
2024-04-24 08:19:42,937:INFO:Importing untrained model
2024-04-24 08:19:42,942:INFO:Logistic Regression Imported successfully
2024-04-24 08:19:42,950:INFO:Starting cross validation
2024-04-24 08:19:42,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:19:47,308:INFO:Calculating mean and std
2024-04-24 08:19:47,311:INFO:Creating metrics dataframe
2024-04-24 08:19:47,319:INFO:Uploading results into container
2024-04-24 08:19:47,320:INFO:Uploading model into container now
2024-04-24 08:19:47,321:INFO:_master_model_container: 1
2024-04-24 08:19:47,321:INFO:_display_container: 2
2024-04-24 08:19:47,322:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 08:19:47,322:INFO:create_model() successfully completed......................................
2024-04-24 08:19:47,583:INFO:SubProcess create_model() end ==================================
2024-04-24 08:19:47,584:INFO:Creating metrics dataframe
2024-04-24 08:19:47,596:INFO:Initializing Decision Tree Classifier
2024-04-24 08:19:47,596:INFO:Total runtime is 0.07793377240498861 minutes
2024-04-24 08:19:47,600:INFO:SubProcess create_model() called ==================================
2024-04-24 08:19:47,601:INFO:Initializing create_model()
2024-04-24 08:19:47,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B962420970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:19:47,601:INFO:Checking exceptions
2024-04-24 08:19:47,601:INFO:Importing libraries
2024-04-24 08:19:47,601:INFO:Copying training dataset
2024-04-24 08:19:47,611:INFO:Defining folds
2024-04-24 08:19:47,612:INFO:Declaring metric variables
2024-04-24 08:19:47,618:INFO:Importing untrained model
2024-04-24 08:19:47,625:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:19:47,636:INFO:Starting cross validation
2024-04-24 08:19:47,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:19:51,871:INFO:Calculating mean and std
2024-04-24 08:19:51,873:INFO:Creating metrics dataframe
2024-04-24 08:19:51,877:INFO:Uploading results into container
2024-04-24 08:19:51,877:INFO:Uploading model into container now
2024-04-24 08:19:51,878:INFO:_master_model_container: 2
2024-04-24 08:19:51,878:INFO:_display_container: 2
2024-04-24 08:19:51,878:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best')
2024-04-24 08:19:51,879:INFO:create_model() successfully completed......................................
2024-04-24 08:19:52,040:INFO:SubProcess create_model() end ==================================
2024-04-24 08:19:52,040:INFO:Creating metrics dataframe
2024-04-24 08:19:52,057:INFO:Initializing create_model()
2024-04-24 08:19:52,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:19:52,057:INFO:Checking exceptions
2024-04-24 08:19:52,059:INFO:Importing libraries
2024-04-24 08:19:52,059:INFO:Copying training dataset
2024-04-24 08:19:52,064:INFO:Defining folds
2024-04-24 08:19:52,064:INFO:Declaring metric variables
2024-04-24 08:19:52,064:INFO:Importing untrained model
2024-04-24 08:19:52,064:INFO:Declaring custom model
2024-04-24 08:19:52,064:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:19:52,065:INFO:Cross validation set to False
2024-04-24 08:19:52,065:INFO:Fitting Model
2024-04-24 08:19:52,150:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best')
2024-04-24 08:19:52,150:INFO:create_model() successfully completed......................................
2024-04-24 08:19:52,306:INFO:Initializing create_model()
2024-04-24 08:19:52,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:19:52,306:INFO:Checking exceptions
2024-04-24 08:19:52,308:INFO:Importing libraries
2024-04-24 08:19:52,308:INFO:Copying training dataset
2024-04-24 08:19:52,313:INFO:Defining folds
2024-04-24 08:19:52,313:INFO:Declaring metric variables
2024-04-24 08:19:52,313:INFO:Importing untrained model
2024-04-24 08:19:52,313:INFO:Declaring custom model
2024-04-24 08:19:52,313:INFO:Logistic Regression Imported successfully
2024-04-24 08:19:52,315:INFO:Cross validation set to False
2024-04-24 08:19:52,315:INFO:Fitting Model
2024-04-24 08:19:52,339:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 08:19:52,339:INFO:create_model() successfully completed......................................
2024-04-24 08:19:52,502:INFO:_master_model_container: 2
2024-04-24 08:19:52,502:INFO:_display_container: 2
2024-04-24 08:19:52,502:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 08:19:52,503:INFO:compare_models() successfully completed......................................
2024-04-24 08:19:52,503:INFO:Initializing predict_model()
2024-04-24 08:19:52,503:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B966F21B80>)
2024-04-24 08:19:52,503:INFO:Checking exceptions
2024-04-24 08:19:52,503:INFO:Preloading libraries
2024-04-24 08:19:53,276:INFO:Initializing predict_model()
2024-04-24 08:19:53,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7338, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B961552A60>)
2024-04-24 08:19:53,276:INFO:Checking exceptions
2024-04-24 08:19:53,276:INFO:Preloading libraries
2024-04-24 08:19:54,335:INFO:Initializing tune_model()
2024-04-24 08:19:54,335:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>)
2024-04-24 08:19:54,335:INFO:Checking exceptions
2024-04-24 08:19:54,353:INFO:Copying training dataset
2024-04-24 08:19:54,359:INFO:Checking base model
2024-04-24 08:19:54,359:INFO:Base model : Decision Tree Classifier
2024-04-24 08:19:54,364:INFO:Declaring metric variables
2024-04-24 08:19:54,368:INFO:Defining Hyperparameters
2024-04-24 08:19:54,528:INFO:Tuning with n_jobs=-1
2024-04-24 08:19:54,529:INFO:Initializing RandomizedSearchCV
2024-04-24 08:19:54,779:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'entropy'}
2024-04-24 08:19:54,779:INFO:Hyperparameter search completed
2024-04-24 08:19:54,779:INFO:SubProcess create_model() called ==================================
2024-04-24 08:19:54,780:INFO:Initializing create_model()
2024-04-24 08:19:54,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B964211130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 7, 'criterion': 'entropy'})
2024-04-24 08:19:54,780:INFO:Checking exceptions
2024-04-24 08:19:54,780:INFO:Importing libraries
2024-04-24 08:19:54,780:INFO:Copying training dataset
2024-04-24 08:19:54,785:INFO:Defining folds
2024-04-24 08:19:54,786:INFO:Declaring metric variables
2024-04-24 08:19:54,789:INFO:Importing untrained model
2024-04-24 08:19:54,789:INFO:Declaring custom model
2024-04-24 08:19:54,794:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:19:54,799:INFO:Starting cross validation
2024-04-24 08:19:54,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:19:54,883:INFO:Calculating mean and std
2024-04-24 08:19:54,883:INFO:Creating metrics dataframe
2024-04-24 08:19:54,888:INFO:Finalizing model
2024-04-24 08:19:54,911:INFO:Uploading results into container
2024-04-24 08:19:54,912:INFO:Uploading model into container now
2024-04-24 08:19:54,912:INFO:_master_model_container: 3
2024-04-24 08:19:54,912:INFO:_display_container: 5
2024-04-24 08:19:54,912:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=7, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best')
2024-04-24 08:19:54,912:INFO:create_model() successfully completed......................................
2024-04-24 08:19:55,046:INFO:SubProcess create_model() end ==================================
2024-04-24 08:19:55,046:INFO:choose_better activated
2024-04-24 08:19:55,051:INFO:SubProcess create_model() called ==================================
2024-04-24 08:19:55,051:INFO:Initializing create_model()
2024-04-24 08:19:55,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:19:55,052:INFO:Checking exceptions
2024-04-24 08:19:55,053:INFO:Importing libraries
2024-04-24 08:19:55,054:INFO:Copying training dataset
2024-04-24 08:19:55,060:INFO:Defining folds
2024-04-24 08:19:55,060:INFO:Declaring metric variables
2024-04-24 08:19:55,061:INFO:Importing untrained model
2024-04-24 08:19:55,061:INFO:Declaring custom model
2024-04-24 08:19:55,061:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:19:55,061:INFO:Starting cross validation
2024-04-24 08:19:55,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 08:19:55,196:INFO:Calculating mean and std
2024-04-24 08:19:55,196:INFO:Creating metrics dataframe
2024-04-24 08:19:55,197:INFO:Finalizing model
2024-04-24 08:19:55,248:INFO:Uploading results into container
2024-04-24 08:19:55,248:INFO:Uploading model into container now
2024-04-24 08:19:55,249:INFO:_master_model_container: 4
2024-04-24 08:19:55,249:INFO:_display_container: 6
2024-04-24 08:19:55,249:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best')
2024-04-24 08:19:55,249:INFO:create_model() successfully completed......................................
2024-04-24 08:19:55,403:INFO:SubProcess create_model() end ==================================
2024-04-24 08:19:55,403:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best') result for F1 is 0.5509
2024-04-24 08:19:55,404:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=7, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=6,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best') result for F1 is 0.452
2024-04-24 08:19:55,404:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best') is best model
2024-04-24 08:19:55,404:INFO:choose_better completed
2024-04-24 08:19:55,404:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 08:19:55,415:INFO:_master_model_container: 4
2024-04-24 08:19:55,415:INFO:_display_container: 5
2024-04-24 08:19:55,416:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best')
2024-04-24 08:19:55,416:INFO:tune_model() successfully completed......................................
2024-04-24 08:19:55,545:INFO:Initializing predict_model()
2024-04-24 08:19:55,546:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B9576B7160>)
2024-04-24 08:19:55,546:INFO:Checking exceptions
2024-04-24 08:19:55,546:INFO:Preloading libraries
2024-04-24 08:19:55,794:INFO:Initializing finalize_model()
2024-04-24 08:19:55,794:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 08:19:55,794:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best')
2024-04-24 08:19:55,797:INFO:Initializing create_model()
2024-04-24 08:19:55,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96410E4C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7338, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 08:19:55,797:INFO:Checking exceptions
2024-04-24 08:19:55,798:INFO:Importing libraries
2024-04-24 08:19:55,798:INFO:Copying training dataset
2024-04-24 08:19:55,798:INFO:Defining folds
2024-04-24 08:19:55,799:INFO:Declaring metric variables
2024-04-24 08:19:55,799:INFO:Importing untrained model
2024-04-24 08:19:55,799:INFO:Declaring custom model
2024-04-24 08:19:55,799:INFO:Decision Tree Classifier Imported successfully
2024-04-24 08:19:55,800:INFO:Cross validation set to False
2024-04-24 08:19:55,800:INFO:Fitting Model
2024-04-24 08:19:55,871:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7338, splitter='best'))],
         verbose=False)
2024-04-24 08:19:55,871:INFO:create_model() successfully completed......................................
2024-04-24 08:19:56,005:INFO:_master_model_container: 4
2024-04-24 08:19:56,005:INFO:_display_container: 6
2024-04-24 08:19:56,011:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7338, splitter='best'))],
         verbose=False)
2024-04-24 08:19:56,012:INFO:finalize_model() successfully completed......................................
2024-04-24 08:19:56,156:INFO:Initializing save_model()
2024-04-24 08:19:56,156:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7338, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 08:19:56,156:INFO:Adding model into prep_pipe
2024-04-24 08:19:56,156:WARNING:Only Model saved as it was a pipeline.
2024-04-24 08:19:56,160:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 08:19:56,166:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7338, splitter='best'))],
         verbose=False)
2024-04-24 08:19:56,166:INFO:save_model() successfully completed......................................
2024-04-24 08:19:56,311:INFO:Initializing load_model()
2024-04-24 08:19:56,311:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 08:19:56,347:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 08:20:02,978:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-24 08:20:03,137:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\2454414207.py:189: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 09:00:03,899:INFO:PyCaret ClassificationExperiment
2024-04-24 09:00:03,899:INFO:Logging name: clf-default-name
2024-04-24 09:00:03,899:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 09:00:03,899:INFO:version 3.2.0
2024-04-24 09:00:03,899:INFO:Initializing setup()
2024-04-24 09:00:03,899:INFO:self.USI: 344f
2024-04-24 09:00:03,899:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 09:00:03,899:INFO:Checking environment
2024-04-24 09:00:03,899:INFO:python_version: 3.9.19
2024-04-24 09:00:03,899:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 09:00:03,899:INFO:machine: AMD64
2024-04-24 09:00:03,899:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 09:00:03,900:INFO:Memory: svmem(total=33897811968, available=11083722752, percent=67.3, used=22814089216, free=11083722752)
2024-04-24 09:00:03,900:INFO:Physical Core: 14
2024-04-24 09:00:03,900:INFO:Logical Core: 20
2024-04-24 09:00:03,900:INFO:Checking libraries
2024-04-24 09:00:03,900:INFO:System:
2024-04-24 09:00:03,900:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 09:00:03,900:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 09:00:03,900:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 09:00:03,900:INFO:PyCaret required dependencies:
2024-04-24 09:00:03,900:INFO:                 pip: 23.3.1
2024-04-24 09:00:03,900:INFO:          setuptools: 68.2.2
2024-04-24 09:00:03,900:INFO:             pycaret: 3.2.0
2024-04-24 09:00:03,900:INFO:             IPython: 8.15.0
2024-04-24 09:00:03,900:INFO:          ipywidgets: 8.1.2
2024-04-24 09:00:03,900:INFO:                tqdm: 4.65.0
2024-04-24 09:00:03,900:INFO:               numpy: 1.25.2
2024-04-24 09:00:03,901:INFO:              pandas: 1.5.3
2024-04-24 09:00:03,901:INFO:              jinja2: 3.1.3
2024-04-24 09:00:03,901:INFO:               scipy: 1.11.4
2024-04-24 09:00:03,901:INFO:              joblib: 1.2.0
2024-04-24 09:00:03,901:INFO:             sklearn: 1.2.2
2024-04-24 09:00:03,901:INFO:                pyod: 1.0.9
2024-04-24 09:00:03,901:INFO:            imblearn: 0.11.0
2024-04-24 09:00:03,901:INFO:   category_encoders: 2.6.3
2024-04-24 09:00:03,901:INFO:            lightgbm: 4.1.0
2024-04-24 09:00:03,901:INFO:               numba: 0.59.1
2024-04-24 09:00:03,901:INFO:            requests: 2.31.0
2024-04-24 09:00:03,901:INFO:          matplotlib: 3.8.4
2024-04-24 09:00:03,901:INFO:          scikitplot: 0.3.7
2024-04-24 09:00:03,901:INFO:         yellowbrick: 1.5
2024-04-24 09:00:03,901:INFO:              plotly: 5.19.0
2024-04-24 09:00:03,901:INFO:    plotly-resampler: Not installed
2024-04-24 09:00:03,901:INFO:             kaleido: 0.2.1
2024-04-24 09:00:03,901:INFO:           schemdraw: 0.15
2024-04-24 09:00:03,901:INFO:         statsmodels: 0.14.0
2024-04-24 09:00:03,901:INFO:              sktime: 0.21.1
2024-04-24 09:00:03,901:INFO:               tbats: 1.1.3
2024-04-24 09:00:03,901:INFO:            pmdarima: 2.0.4
2024-04-24 09:00:03,902:INFO:              psutil: 5.9.0
2024-04-24 09:00:03,902:INFO:          markupsafe: 2.1.3
2024-04-24 09:00:03,902:INFO:             pickle5: Not installed
2024-04-24 09:00:03,902:INFO:         cloudpickle: 2.2.1
2024-04-24 09:00:03,902:INFO:         deprecation: 2.1.0
2024-04-24 09:00:03,902:INFO:              xxhash: 2.0.2
2024-04-24 09:00:03,902:INFO:           wurlitzer: 3.0.3
2024-04-24 09:00:03,902:INFO:PyCaret optional dependencies:
2024-04-24 09:00:03,902:INFO:                shap: Not installed
2024-04-24 09:00:03,902:INFO:           interpret: Not installed
2024-04-24 09:00:03,902:INFO:                umap: 0.5.3
2024-04-24 09:00:03,902:INFO:     ydata_profiling: Not installed
2024-04-24 09:00:03,902:INFO:  explainerdashboard: Not installed
2024-04-24 09:00:03,902:INFO:             autoviz: Not installed
2024-04-24 09:00:03,902:INFO:           fairlearn: Not installed
2024-04-24 09:00:03,902:INFO:          deepchecks: Not installed
2024-04-24 09:00:03,902:INFO:             xgboost: 1.7.6
2024-04-24 09:00:03,902:INFO:            catboost: 1.2.3
2024-04-24 09:00:03,902:INFO:              kmodes: 0.12.2
2024-04-24 09:00:03,903:INFO:             mlxtend: 0.23.1
2024-04-24 09:00:03,903:INFO:       statsforecast: Not installed
2024-04-24 09:00:03,903:INFO:        tune_sklearn: Not installed
2024-04-24 09:00:03,903:INFO:                 ray: Not installed
2024-04-24 09:00:03,903:INFO:            hyperopt: Not installed
2024-04-24 09:00:03,903:INFO:              optuna: Not installed
2024-04-24 09:00:03,903:INFO:               skopt: Not installed
2024-04-24 09:00:03,903:INFO:              mlflow: 2.9.2
2024-04-24 09:00:03,903:INFO:              gradio: Not installed
2024-04-24 09:00:03,903:INFO:             fastapi: Not installed
2024-04-24 09:00:03,903:INFO:             uvicorn: Not installed
2024-04-24 09:00:03,903:INFO:              m2cgen: Not installed
2024-04-24 09:00:03,903:INFO:           evidently: Not installed
2024-04-24 09:00:03,903:INFO:               fugue: Not installed
2024-04-24 09:00:03,903:INFO:           streamlit: 1.32.0
2024-04-24 09:00:03,903:INFO:             prophet: Not installed
2024-04-24 09:00:03,903:INFO:None
2024-04-24 09:00:03,903:INFO:Set up data.
2024-04-24 09:00:03,911:INFO:Set up folding strategy.
2024-04-24 09:00:03,911:INFO:Set up train/test split.
2024-04-24 09:00:03,911:INFO:Set up data.
2024-04-24 09:00:03,915:INFO:Set up index.
2024-04-24 09:00:03,915:INFO:Assigning column types.
2024-04-24 09:00:03,921:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 09:00:03,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:00:03,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:00:03,967:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:03,969:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:00:04,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:00:04,023:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,024:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,025:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 09:00:04,049:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:00:04,065:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,067:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:00:04,109:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,111:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,111:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 09:00:04,154:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,156:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,198:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,200:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,201:INFO:Preparing preprocessing pipeline...
2024-04-24 09:00:04,202:INFO:Set up simple imputation.
2024-04-24 09:00:04,202:INFO:Set up feature normalization.
2024-04-24 09:00:04,221:INFO:Finished creating preprocessing pipeline.
2024-04-24 09:00:04,224:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 09:00:04,224:INFO:Creating final display dataframe.
2024-04-24 09:00:04,274:INFO:Setup _display_container:                     Description             Value
0                    Session id              3750
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              344f
2024-04-24 09:00:04,322:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,325:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,369:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:00:04,371:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:00:04,371:INFO:setup() successfully completed in 0.47s...............
2024-04-24 09:00:04,372:INFO:Initializing compare_models()
2024-04-24 09:00:04,372:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 09:00:04,372:INFO:Checking exceptions
2024-04-24 09:00:04,375:INFO:Preparing display monitor
2024-04-24 09:00:04,389:INFO:Initializing Logistic Regression
2024-04-24 09:00:04,390:INFO:Total runtime is 1.6657511393229165e-05 minutes
2024-04-24 09:00:04,391:INFO:SubProcess create_model() called ==================================
2024-04-24 09:00:04,391:INFO:Initializing create_model()
2024-04-24 09:00:04,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B96AD75C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:00:04,391:INFO:Checking exceptions
2024-04-24 09:00:04,391:INFO:Importing libraries
2024-04-24 09:00:04,391:INFO:Copying training dataset
2024-04-24 09:00:04,396:INFO:Defining folds
2024-04-24 09:00:04,396:INFO:Declaring metric variables
2024-04-24 09:00:04,398:INFO:Importing untrained model
2024-04-24 09:00:04,400:INFO:Logistic Regression Imported successfully
2024-04-24 09:00:04,405:INFO:Starting cross validation
2024-04-24 09:00:04,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:00:08,380:INFO:Calculating mean and std
2024-04-24 09:00:08,382:INFO:Creating metrics dataframe
2024-04-24 09:00:08,387:INFO:Uploading results into container
2024-04-24 09:00:08,388:INFO:Uploading model into container now
2024-04-24 09:00:08,389:INFO:_master_model_container: 1
2024-04-24 09:00:08,389:INFO:_display_container: 2
2024-04-24 09:00:08,389:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3750, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:00:08,390:INFO:create_model() successfully completed......................................
2024-04-24 09:00:08,596:INFO:SubProcess create_model() end ==================================
2024-04-24 09:00:08,596:INFO:Creating metrics dataframe
2024-04-24 09:00:08,603:INFO:Initializing Decision Tree Classifier
2024-04-24 09:00:08,604:INFO:Total runtime is 0.07024912436803181 minutes
2024-04-24 09:00:08,606:INFO:SubProcess create_model() called ==================================
2024-04-24 09:00:08,606:INFO:Initializing create_model()
2024-04-24 09:00:08,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B96AD75C70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:00:08,606:INFO:Checking exceptions
2024-04-24 09:00:08,606:INFO:Importing libraries
2024-04-24 09:00:08,607:INFO:Copying training dataset
2024-04-24 09:00:08,612:INFO:Defining folds
2024-04-24 09:00:08,612:INFO:Declaring metric variables
2024-04-24 09:00:08,615:INFO:Importing untrained model
2024-04-24 09:00:08,617:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:00:08,622:INFO:Starting cross validation
2024-04-24 09:00:08,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:00:11,472:INFO:Calculating mean and std
2024-04-24 09:00:11,474:INFO:Creating metrics dataframe
2024-04-24 09:00:11,479:INFO:Uploading results into container
2024-04-24 09:00:11,480:INFO:Uploading model into container now
2024-04-24 09:00:11,481:INFO:_master_model_container: 2
2024-04-24 09:00:11,481:INFO:_display_container: 2
2024-04-24 09:00:11,482:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3750, splitter='best')
2024-04-24 09:00:11,482:INFO:create_model() successfully completed......................................
2024-04-24 09:00:11,651:INFO:SubProcess create_model() end ==================================
2024-04-24 09:00:11,651:INFO:Creating metrics dataframe
2024-04-24 09:00:11,668:INFO:Initializing create_model()
2024-04-24 09:00:11,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3750, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:00:11,668:INFO:Checking exceptions
2024-04-24 09:00:11,669:INFO:Importing libraries
2024-04-24 09:00:11,669:INFO:Copying training dataset
2024-04-24 09:00:11,674:INFO:Defining folds
2024-04-24 09:00:11,674:INFO:Declaring metric variables
2024-04-24 09:00:11,674:INFO:Importing untrained model
2024-04-24 09:00:11,674:INFO:Declaring custom model
2024-04-24 09:00:11,674:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:00:11,675:INFO:Cross validation set to False
2024-04-24 09:00:11,675:INFO:Fitting Model
2024-04-24 09:00:11,725:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3750, splitter='best')
2024-04-24 09:00:11,725:INFO:create_model() successfully completed......................................
2024-04-24 09:00:11,917:INFO:Initializing create_model()
2024-04-24 09:00:11,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3750, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:00:11,917:INFO:Checking exceptions
2024-04-24 09:00:11,918:INFO:Importing libraries
2024-04-24 09:00:11,919:INFO:Copying training dataset
2024-04-24 09:00:11,925:INFO:Defining folds
2024-04-24 09:00:11,925:INFO:Declaring metric variables
2024-04-24 09:00:11,925:INFO:Importing untrained model
2024-04-24 09:00:11,925:INFO:Declaring custom model
2024-04-24 09:00:11,926:INFO:Logistic Regression Imported successfully
2024-04-24 09:00:11,926:INFO:Cross validation set to False
2024-04-24 09:00:11,926:INFO:Fitting Model
2024-04-24 09:00:11,946:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3750, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:00:11,946:INFO:create_model() successfully completed......................................
2024-04-24 09:00:12,106:INFO:_master_model_container: 2
2024-04-24 09:00:12,106:INFO:_display_container: 2
2024-04-24 09:00:12,107:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3750, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3750, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 09:00:12,107:INFO:compare_models() successfully completed......................................
2024-04-24 09:00:12,107:INFO:Initializing predict_model()
2024-04-24 09:00:12,107:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B9576B22E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3750, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B94F7E43A0>)
2024-04-24 09:00:12,107:INFO:Checking exceptions
2024-04-24 09:00:12,107:INFO:Preloading libraries
2024-04-24 09:07:29,049:INFO:PyCaret ClassificationExperiment
2024-04-24 09:07:29,049:INFO:Logging name: clf-default-name
2024-04-24 09:07:29,049:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 09:07:29,049:INFO:version 3.2.0
2024-04-24 09:07:29,049:INFO:Initializing setup()
2024-04-24 09:07:29,049:INFO:self.USI: 7fe7
2024-04-24 09:07:29,049:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 09:07:29,049:INFO:Checking environment
2024-04-24 09:07:29,049:INFO:python_version: 3.9.19
2024-04-24 09:07:29,049:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 09:07:29,049:INFO:machine: AMD64
2024-04-24 09:07:29,049:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 09:07:29,049:INFO:Memory: svmem(total=33897811968, available=11208802304, percent=66.9, used=22689009664, free=11208802304)
2024-04-24 09:07:29,049:INFO:Physical Core: 14
2024-04-24 09:07:29,049:INFO:Logical Core: 20
2024-04-24 09:07:29,049:INFO:Checking libraries
2024-04-24 09:07:29,049:INFO:System:
2024-04-24 09:07:29,049:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 09:07:29,049:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 09:07:29,049:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 09:07:29,049:INFO:PyCaret required dependencies:
2024-04-24 09:07:29,049:INFO:                 pip: 23.3.1
2024-04-24 09:07:29,049:INFO:          setuptools: 68.2.2
2024-04-24 09:07:29,049:INFO:             pycaret: 3.2.0
2024-04-24 09:07:29,049:INFO:             IPython: 8.15.0
2024-04-24 09:07:29,049:INFO:          ipywidgets: 8.1.2
2024-04-24 09:07:29,049:INFO:                tqdm: 4.65.0
2024-04-24 09:07:29,049:INFO:               numpy: 1.25.2
2024-04-24 09:07:29,049:INFO:              pandas: 1.5.3
2024-04-24 09:07:29,049:INFO:              jinja2: 3.1.3
2024-04-24 09:07:29,049:INFO:               scipy: 1.11.4
2024-04-24 09:07:29,050:INFO:              joblib: 1.2.0
2024-04-24 09:07:29,050:INFO:             sklearn: 1.2.2
2024-04-24 09:07:29,050:INFO:                pyod: 1.0.9
2024-04-24 09:07:29,050:INFO:            imblearn: 0.11.0
2024-04-24 09:07:29,050:INFO:   category_encoders: 2.6.3
2024-04-24 09:07:29,050:INFO:            lightgbm: 4.1.0
2024-04-24 09:07:29,050:INFO:               numba: 0.59.1
2024-04-24 09:07:29,050:INFO:            requests: 2.31.0
2024-04-24 09:07:29,050:INFO:          matplotlib: 3.8.4
2024-04-24 09:07:29,050:INFO:          scikitplot: 0.3.7
2024-04-24 09:07:29,050:INFO:         yellowbrick: 1.5
2024-04-24 09:07:29,050:INFO:              plotly: 5.19.0
2024-04-24 09:07:29,050:INFO:    plotly-resampler: Not installed
2024-04-24 09:07:29,050:INFO:             kaleido: 0.2.1
2024-04-24 09:07:29,050:INFO:           schemdraw: 0.15
2024-04-24 09:07:29,050:INFO:         statsmodels: 0.14.0
2024-04-24 09:07:29,050:INFO:              sktime: 0.21.1
2024-04-24 09:07:29,050:INFO:               tbats: 1.1.3
2024-04-24 09:07:29,050:INFO:            pmdarima: 2.0.4
2024-04-24 09:07:29,050:INFO:              psutil: 5.9.0
2024-04-24 09:07:29,050:INFO:          markupsafe: 2.1.3
2024-04-24 09:07:29,050:INFO:             pickle5: Not installed
2024-04-24 09:07:29,050:INFO:         cloudpickle: 2.2.1
2024-04-24 09:07:29,050:INFO:         deprecation: 2.1.0
2024-04-24 09:07:29,050:INFO:              xxhash: 2.0.2
2024-04-24 09:07:29,050:INFO:           wurlitzer: 3.0.3
2024-04-24 09:07:29,050:INFO:PyCaret optional dependencies:
2024-04-24 09:07:29,050:INFO:                shap: Not installed
2024-04-24 09:07:29,050:INFO:           interpret: Not installed
2024-04-24 09:07:29,050:INFO:                umap: 0.5.3
2024-04-24 09:07:29,050:INFO:     ydata_profiling: Not installed
2024-04-24 09:07:29,050:INFO:  explainerdashboard: Not installed
2024-04-24 09:07:29,050:INFO:             autoviz: Not installed
2024-04-24 09:07:29,050:INFO:           fairlearn: Not installed
2024-04-24 09:07:29,050:INFO:          deepchecks: Not installed
2024-04-24 09:07:29,050:INFO:             xgboost: 1.7.6
2024-04-24 09:07:29,050:INFO:            catboost: 1.2.3
2024-04-24 09:07:29,050:INFO:              kmodes: 0.12.2
2024-04-24 09:07:29,050:INFO:             mlxtend: 0.23.1
2024-04-24 09:07:29,050:INFO:       statsforecast: Not installed
2024-04-24 09:07:29,050:INFO:        tune_sklearn: Not installed
2024-04-24 09:07:29,050:INFO:                 ray: Not installed
2024-04-24 09:07:29,050:INFO:            hyperopt: Not installed
2024-04-24 09:07:29,050:INFO:              optuna: Not installed
2024-04-24 09:07:29,050:INFO:               skopt: Not installed
2024-04-24 09:07:29,050:INFO:              mlflow: 2.9.2
2024-04-24 09:07:29,050:INFO:              gradio: Not installed
2024-04-24 09:07:29,050:INFO:             fastapi: Not installed
2024-04-24 09:07:29,050:INFO:             uvicorn: Not installed
2024-04-24 09:07:29,050:INFO:              m2cgen: Not installed
2024-04-24 09:07:29,050:INFO:           evidently: Not installed
2024-04-24 09:07:29,050:INFO:               fugue: Not installed
2024-04-24 09:07:29,050:INFO:           streamlit: 1.32.0
2024-04-24 09:07:29,050:INFO:             prophet: Not installed
2024-04-24 09:07:29,050:INFO:None
2024-04-24 09:07:29,050:INFO:Set up data.
2024-04-24 09:07:29,055:INFO:Set up folding strategy.
2024-04-24 09:07:29,055:INFO:Set up train/test split.
2024-04-24 09:07:29,055:INFO:Set up data.
2024-04-24 09:07:29,058:INFO:Set up index.
2024-04-24 09:07:29,058:INFO:Assigning column types.
2024-04-24 09:07:29,061:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 09:07:29,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:07:29,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:07:29,100:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,101:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:07:29,126:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:07:29,142:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,143:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,144:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 09:07:29,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:07:29,185:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,186:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,213:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:07:29,229:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,230:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,231:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 09:07:29,272:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,274:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,316:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,318:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,319:INFO:Preparing preprocessing pipeline...
2024-04-24 09:07:29,320:INFO:Set up simple imputation.
2024-04-24 09:07:29,320:INFO:Set up feature normalization.
2024-04-24 09:07:29,338:INFO:Finished creating preprocessing pipeline.
2024-04-24 09:07:29,341:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 09:07:29,341:INFO:Creating final display dataframe.
2024-04-24 09:07:29,396:INFO:Setup _display_container:                     Description             Value
0                    Session id              6985
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7fe7
2024-04-24 09:07:29,442:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,443:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,485:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:07:29,486:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:07:29,487:INFO:setup() successfully completed in 0.44s...............
2024-04-24 09:07:29,488:INFO:Initializing compare_models()
2024-04-24 09:07:29,488:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 09:07:29,488:INFO:Checking exceptions
2024-04-24 09:07:29,491:INFO:Preparing display monitor
2024-04-24 09:07:29,505:INFO:Initializing Logistic Regression
2024-04-24 09:07:29,505:INFO:Total runtime is 0.0 minutes
2024-04-24 09:07:29,507:INFO:SubProcess create_model() called ==================================
2024-04-24 09:07:29,507:INFO:Initializing create_model()
2024-04-24 09:07:29,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B962010BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:07:29,507:INFO:Checking exceptions
2024-04-24 09:07:29,508:INFO:Importing libraries
2024-04-24 09:07:29,508:INFO:Copying training dataset
2024-04-24 09:07:29,511:INFO:Defining folds
2024-04-24 09:07:29,511:INFO:Declaring metric variables
2024-04-24 09:07:29,513:INFO:Importing untrained model
2024-04-24 09:07:29,516:INFO:Logistic Regression Imported successfully
2024-04-24 09:07:29,520:INFO:Starting cross validation
2024-04-24 09:07:29,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:07:33,108:INFO:Calculating mean and std
2024-04-24 09:07:33,110:INFO:Creating metrics dataframe
2024-04-24 09:07:33,116:INFO:Uploading results into container
2024-04-24 09:07:33,117:INFO:Uploading model into container now
2024-04-24 09:07:33,118:INFO:_master_model_container: 1
2024-04-24 09:07:33,118:INFO:_display_container: 2
2024-04-24 09:07:33,119:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:07:33,119:INFO:create_model() successfully completed......................................
2024-04-24 09:07:33,324:INFO:SubProcess create_model() end ==================================
2024-04-24 09:07:33,324:INFO:Creating metrics dataframe
2024-04-24 09:07:33,332:INFO:Initializing Decision Tree Classifier
2024-04-24 09:07:33,332:INFO:Total runtime is 0.06378931601842244 minutes
2024-04-24 09:07:33,335:INFO:SubProcess create_model() called ==================================
2024-04-24 09:07:33,335:INFO:Initializing create_model()
2024-04-24 09:07:33,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B962010BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:07:33,335:INFO:Checking exceptions
2024-04-24 09:07:33,335:INFO:Importing libraries
2024-04-24 09:07:33,335:INFO:Copying training dataset
2024-04-24 09:07:33,340:INFO:Defining folds
2024-04-24 09:07:33,340:INFO:Declaring metric variables
2024-04-24 09:07:33,343:INFO:Importing untrained model
2024-04-24 09:07:33,346:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:07:33,351:INFO:Starting cross validation
2024-04-24 09:07:33,351:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:07:36,173:INFO:Calculating mean and std
2024-04-24 09:07:36,175:INFO:Creating metrics dataframe
2024-04-24 09:07:36,177:INFO:Uploading results into container
2024-04-24 09:07:36,179:INFO:Uploading model into container now
2024-04-24 09:07:36,179:INFO:_master_model_container: 2
2024-04-24 09:07:36,180:INFO:_display_container: 2
2024-04-24 09:07:36,180:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best')
2024-04-24 09:07:36,180:INFO:create_model() successfully completed......................................
2024-04-24 09:07:36,381:INFO:SubProcess create_model() end ==================================
2024-04-24 09:07:36,381:INFO:Creating metrics dataframe
2024-04-24 09:07:36,398:INFO:Initializing create_model()
2024-04-24 09:07:36,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:07:36,398:INFO:Checking exceptions
2024-04-24 09:07:36,400:INFO:Importing libraries
2024-04-24 09:07:36,400:INFO:Copying training dataset
2024-04-24 09:07:36,405:INFO:Defining folds
2024-04-24 09:07:36,405:INFO:Declaring metric variables
2024-04-24 09:07:36,405:INFO:Importing untrained model
2024-04-24 09:07:36,405:INFO:Declaring custom model
2024-04-24 09:07:36,405:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:07:36,406:INFO:Cross validation set to False
2024-04-24 09:07:36,406:INFO:Fitting Model
2024-04-24 09:07:36,461:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best')
2024-04-24 09:07:36,461:INFO:create_model() successfully completed......................................
2024-04-24 09:07:36,625:INFO:Initializing create_model()
2024-04-24 09:07:36,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:07:36,625:INFO:Checking exceptions
2024-04-24 09:07:36,627:INFO:Importing libraries
2024-04-24 09:07:36,627:INFO:Copying training dataset
2024-04-24 09:07:36,632:INFO:Defining folds
2024-04-24 09:07:36,632:INFO:Declaring metric variables
2024-04-24 09:07:36,632:INFO:Importing untrained model
2024-04-24 09:07:36,632:INFO:Declaring custom model
2024-04-24 09:07:36,633:INFO:Logistic Regression Imported successfully
2024-04-24 09:07:36,633:INFO:Cross validation set to False
2024-04-24 09:07:36,633:INFO:Fitting Model
2024-04-24 09:07:36,655:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:07:36,655:INFO:create_model() successfully completed......................................
2024-04-24 09:07:36,830:INFO:_master_model_container: 2
2024-04-24 09:07:36,831:INFO:_display_container: 2
2024-04-24 09:07:36,831:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 09:07:36,831:INFO:compare_models() successfully completed......................................
2024-04-24 09:07:36,832:INFO:Initializing predict_model()
2024-04-24 09:07:36,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B96B35E160>)
2024-04-24 09:07:36,832:INFO:Checking exceptions
2024-04-24 09:07:36,832:INFO:Preloading libraries
2024-04-24 09:07:37,589:INFO:Initializing plot_model()
2024-04-24 09:07:37,590:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, system=True)
2024-04-24 09:07:37,590:INFO:Checking exceptions
2024-04-24 09:07:37,596:INFO:Preloading libraries
2024-04-24 09:07:37,597:INFO:Copying training dataset
2024-04-24 09:07:37,597:INFO:Plot type: confusion_matrix
2024-04-24 09:07:37,676:INFO:Fitting Model
2024-04-24 09:07:37,677:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 09:07:37,677:INFO:Scoring test/hold-out set
2024-04-24 09:07:37,771:INFO:Visual Rendered Successfully
2024-04-24 09:07:37,930:INFO:plot_model() successfully completed......................................
2024-04-24 09:07:38,058:INFO:Initializing predict_model()
2024-04-24 09:07:38,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B96B35E160>)
2024-04-24 09:07:38,059:INFO:Checking exceptions
2024-04-24 09:07:38,059:INFO:Preloading libraries
2024-04-24 09:07:38,988:INFO:Initializing tune_model()
2024-04-24 09:07:38,988:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>)
2024-04-24 09:07:38,988:INFO:Checking exceptions
2024-04-24 09:07:39,000:INFO:Copying training dataset
2024-04-24 09:07:39,003:INFO:Checking base model
2024-04-24 09:07:39,003:INFO:Base model : Decision Tree Classifier
2024-04-24 09:07:39,006:INFO:Declaring metric variables
2024-04-24 09:07:39,009:INFO:Defining Hyperparameters
2024-04-24 09:07:39,153:INFO:Tuning with n_jobs=-1
2024-04-24 09:07:39,154:INFO:Initializing RandomizedSearchCV
2024-04-24 09:07:39,323:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'entropy'}
2024-04-24 09:07:39,323:INFO:Hyperparameter search completed
2024-04-24 09:07:39,323:INFO:SubProcess create_model() called ==================================
2024-04-24 09:07:39,324:INFO:Initializing create_model()
2024-04-24 09:07:39,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B964163430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 15, 'criterion': 'entropy'})
2024-04-24 09:07:39,324:INFO:Checking exceptions
2024-04-24 09:07:39,324:INFO:Importing libraries
2024-04-24 09:07:39,324:INFO:Copying training dataset
2024-04-24 09:07:39,328:INFO:Defining folds
2024-04-24 09:07:39,328:INFO:Declaring metric variables
2024-04-24 09:07:39,331:INFO:Importing untrained model
2024-04-24 09:07:39,331:INFO:Declaring custom model
2024-04-24 09:07:39,334:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:07:39,339:INFO:Starting cross validation
2024-04-24 09:07:39,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:07:39,374:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,376:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,383:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,384:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,385:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,389:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,392:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,393:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,394:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,398:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 09:07:39,402:INFO:Calculating mean and std
2024-04-24 09:07:39,402:INFO:Creating metrics dataframe
2024-04-24 09:07:39,406:INFO:Finalizing model
2024-04-24 09:07:39,421:INFO:Uploading results into container
2024-04-24 09:07:39,422:INFO:Uploading model into container now
2024-04-24 09:07:39,422:INFO:_master_model_container: 3
2024-04-24 09:07:39,422:INFO:_display_container: 5
2024-04-24 09:07:39,423:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best')
2024-04-24 09:07:39,423:INFO:create_model() successfully completed......................................
2024-04-24 09:07:39,578:INFO:SubProcess create_model() end ==================================
2024-04-24 09:07:39,578:INFO:choose_better activated
2024-04-24 09:07:39,581:INFO:SubProcess create_model() called ==================================
2024-04-24 09:07:39,582:INFO:Initializing create_model()
2024-04-24 09:07:39,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:07:39,582:INFO:Checking exceptions
2024-04-24 09:07:39,584:INFO:Importing libraries
2024-04-24 09:07:39,585:INFO:Copying training dataset
2024-04-24 09:07:39,592:INFO:Defining folds
2024-04-24 09:07:39,592:INFO:Declaring metric variables
2024-04-24 09:07:39,592:INFO:Importing untrained model
2024-04-24 09:07:39,592:INFO:Declaring custom model
2024-04-24 09:07:39,592:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:07:39,592:INFO:Starting cross validation
2024-04-24 09:07:39,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:07:39,741:INFO:Calculating mean and std
2024-04-24 09:07:39,741:INFO:Creating metrics dataframe
2024-04-24 09:07:39,743:INFO:Finalizing model
2024-04-24 09:07:39,795:INFO:Uploading results into container
2024-04-24 09:07:39,795:INFO:Uploading model into container now
2024-04-24 09:07:39,796:INFO:_master_model_container: 4
2024-04-24 09:07:39,796:INFO:_display_container: 6
2024-04-24 09:07:39,796:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best')
2024-04-24 09:07:39,796:INFO:create_model() successfully completed......................................
2024-04-24 09:07:39,949:INFO:SubProcess create_model() end ==================================
2024-04-24 09:07:39,950:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best') result for F1 is 0.5487
2024-04-24 09:07:39,950:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best') result for F1 is 0.0
2024-04-24 09:07:39,950:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best') is best model
2024-04-24 09:07:39,951:INFO:choose_better completed
2024-04-24 09:07:39,951:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 09:07:39,958:INFO:_master_model_container: 4
2024-04-24 09:07:39,958:INFO:_display_container: 5
2024-04-24 09:07:39,959:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best')
2024-04-24 09:07:39,959:INFO:tune_model() successfully completed......................................
2024-04-24 09:07:40,101:INFO:Initializing predict_model()
2024-04-24 09:07:40,101:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B964547670>)
2024-04-24 09:07:40,101:INFO:Checking exceptions
2024-04-24 09:07:40,101:INFO:Preloading libraries
2024-04-24 09:07:40,324:INFO:Initializing finalize_model()
2024-04-24 09:07:40,324:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 09:07:40,324:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best')
2024-04-24 09:07:40,327:INFO:Initializing create_model()
2024-04-24 09:07:40,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C91B2E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6985, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:07:40,327:INFO:Checking exceptions
2024-04-24 09:07:40,329:INFO:Importing libraries
2024-04-24 09:07:40,329:INFO:Copying training dataset
2024-04-24 09:07:40,329:INFO:Defining folds
2024-04-24 09:07:40,329:INFO:Declaring metric variables
2024-04-24 09:07:40,329:INFO:Importing untrained model
2024-04-24 09:07:40,329:INFO:Declaring custom model
2024-04-24 09:07:40,330:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:07:40,330:INFO:Cross validation set to False
2024-04-24 09:07:40,330:INFO:Fitting Model
2024-04-24 09:07:40,393:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6985, splitter='best'))],
         verbose=False)
2024-04-24 09:07:40,393:INFO:create_model() successfully completed......................................
2024-04-24 09:07:40,533:INFO:_master_model_container: 4
2024-04-24 09:07:40,533:INFO:_display_container: 6
2024-04-24 09:07:40,537:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6985, splitter='best'))],
         verbose=False)
2024-04-24 09:07:40,537:INFO:finalize_model() successfully completed......................................
2024-04-24 09:07:40,746:INFO:Initializing save_model()
2024-04-24 09:07:40,746:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6985, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 09:07:40,746:INFO:Adding model into prep_pipe
2024-04-24 09:07:40,746:WARNING:Only Model saved as it was a pipeline.
2024-04-24 09:07:40,749:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 09:07:40,754:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=6985, splitter='best'))],
         verbose=False)
2024-04-24 09:07:40,754:INFO:save_model() successfully completed......................................
2024-04-24 09:07:40,894:INFO:Initializing load_model()
2024-04-24 09:07:40,894:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 09:07:40,930:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 09:07:44,913:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\2797368279.py:205: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 09:09:12,577:INFO:PyCaret ClassificationExperiment
2024-04-24 09:09:12,577:INFO:Logging name: clf-default-name
2024-04-24 09:09:12,577:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 09:09:12,577:INFO:version 3.2.0
2024-04-24 09:09:12,577:INFO:Initializing setup()
2024-04-24 09:09:12,577:INFO:self.USI: 2730
2024-04-24 09:09:12,578:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 09:09:12,578:INFO:Checking environment
2024-04-24 09:09:12,578:INFO:python_version: 3.9.19
2024-04-24 09:09:12,578:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 09:09:12,578:INFO:machine: AMD64
2024-04-24 09:09:12,578:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 09:09:12,578:INFO:Memory: svmem(total=33897811968, available=9062182912, percent=73.3, used=24835629056, free=9062182912)
2024-04-24 09:09:12,578:INFO:Physical Core: 14
2024-04-24 09:09:12,578:INFO:Logical Core: 20
2024-04-24 09:09:12,578:INFO:Checking libraries
2024-04-24 09:09:12,578:INFO:System:
2024-04-24 09:09:12,578:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 09:09:12,578:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 09:09:12,578:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 09:09:12,578:INFO:PyCaret required dependencies:
2024-04-24 09:09:12,578:INFO:                 pip: 23.3.1
2024-04-24 09:09:12,578:INFO:          setuptools: 68.2.2
2024-04-24 09:09:12,578:INFO:             pycaret: 3.2.0
2024-04-24 09:09:12,578:INFO:             IPython: 8.15.0
2024-04-24 09:09:12,578:INFO:          ipywidgets: 8.1.2
2024-04-24 09:09:12,578:INFO:                tqdm: 4.65.0
2024-04-24 09:09:12,578:INFO:               numpy: 1.25.2
2024-04-24 09:09:12,578:INFO:              pandas: 1.5.3
2024-04-24 09:09:12,578:INFO:              jinja2: 3.1.3
2024-04-24 09:09:12,578:INFO:               scipy: 1.11.4
2024-04-24 09:09:12,578:INFO:              joblib: 1.2.0
2024-04-24 09:09:12,578:INFO:             sklearn: 1.2.2
2024-04-24 09:09:12,578:INFO:                pyod: 1.0.9
2024-04-24 09:09:12,578:INFO:            imblearn: 0.11.0
2024-04-24 09:09:12,578:INFO:   category_encoders: 2.6.3
2024-04-24 09:09:12,578:INFO:            lightgbm: 4.1.0
2024-04-24 09:09:12,578:INFO:               numba: 0.59.1
2024-04-24 09:09:12,578:INFO:            requests: 2.31.0
2024-04-24 09:09:12,578:INFO:          matplotlib: 3.8.4
2024-04-24 09:09:12,578:INFO:          scikitplot: 0.3.7
2024-04-24 09:09:12,578:INFO:         yellowbrick: 1.5
2024-04-24 09:09:12,578:INFO:              plotly: 5.19.0
2024-04-24 09:09:12,578:INFO:    plotly-resampler: Not installed
2024-04-24 09:09:12,578:INFO:             kaleido: 0.2.1
2024-04-24 09:09:12,578:INFO:           schemdraw: 0.15
2024-04-24 09:09:12,578:INFO:         statsmodels: 0.14.0
2024-04-24 09:09:12,578:INFO:              sktime: 0.21.1
2024-04-24 09:09:12,578:INFO:               tbats: 1.1.3
2024-04-24 09:09:12,579:INFO:            pmdarima: 2.0.4
2024-04-24 09:09:12,579:INFO:              psutil: 5.9.0
2024-04-24 09:09:12,579:INFO:          markupsafe: 2.1.3
2024-04-24 09:09:12,579:INFO:             pickle5: Not installed
2024-04-24 09:09:12,579:INFO:         cloudpickle: 2.2.1
2024-04-24 09:09:12,579:INFO:         deprecation: 2.1.0
2024-04-24 09:09:12,579:INFO:              xxhash: 2.0.2
2024-04-24 09:09:12,579:INFO:           wurlitzer: 3.0.3
2024-04-24 09:09:12,579:INFO:PyCaret optional dependencies:
2024-04-24 09:09:12,579:INFO:                shap: Not installed
2024-04-24 09:09:12,579:INFO:           interpret: Not installed
2024-04-24 09:09:12,579:INFO:                umap: 0.5.3
2024-04-24 09:09:12,579:INFO:     ydata_profiling: Not installed
2024-04-24 09:09:12,579:INFO:  explainerdashboard: Not installed
2024-04-24 09:09:12,579:INFO:             autoviz: Not installed
2024-04-24 09:09:12,579:INFO:           fairlearn: Not installed
2024-04-24 09:09:12,579:INFO:          deepchecks: Not installed
2024-04-24 09:09:12,579:INFO:             xgboost: 1.7.6
2024-04-24 09:09:12,579:INFO:            catboost: 1.2.3
2024-04-24 09:09:12,579:INFO:              kmodes: 0.12.2
2024-04-24 09:09:12,579:INFO:             mlxtend: 0.23.1
2024-04-24 09:09:12,579:INFO:       statsforecast: Not installed
2024-04-24 09:09:12,579:INFO:        tune_sklearn: Not installed
2024-04-24 09:09:12,579:INFO:                 ray: Not installed
2024-04-24 09:09:12,579:INFO:            hyperopt: Not installed
2024-04-24 09:09:12,579:INFO:              optuna: Not installed
2024-04-24 09:09:12,579:INFO:               skopt: Not installed
2024-04-24 09:09:12,579:INFO:              mlflow: 2.9.2
2024-04-24 09:09:12,579:INFO:              gradio: Not installed
2024-04-24 09:09:12,579:INFO:             fastapi: Not installed
2024-04-24 09:09:12,579:INFO:             uvicorn: Not installed
2024-04-24 09:09:12,579:INFO:              m2cgen: Not installed
2024-04-24 09:09:12,579:INFO:           evidently: Not installed
2024-04-24 09:09:12,579:INFO:               fugue: Not installed
2024-04-24 09:09:12,579:INFO:           streamlit: 1.32.0
2024-04-24 09:09:12,579:INFO:             prophet: Not installed
2024-04-24 09:09:12,579:INFO:None
2024-04-24 09:09:12,579:INFO:Set up data.
2024-04-24 09:09:12,583:INFO:Set up folding strategy.
2024-04-24 09:09:12,583:INFO:Set up train/test split.
2024-04-24 09:09:12,583:INFO:Set up data.
2024-04-24 09:09:12,586:INFO:Set up index.
2024-04-24 09:09:12,586:INFO:Assigning column types.
2024-04-24 09:09:12,589:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 09:09:12,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:09:12,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:09:12,629:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,630:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:12,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:09:12,656:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:09:12,671:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,673:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:12,674:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 09:09:12,700:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:09:12,716:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,717:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:12,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:09:12,759:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,761:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:12,761:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 09:09:12,802:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,805:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:12,846:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,848:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:12,849:INFO:Preparing preprocessing pipeline...
2024-04-24 09:09:12,850:INFO:Set up simple imputation.
2024-04-24 09:09:12,851:INFO:Set up feature normalization.
2024-04-24 09:09:12,868:INFO:Finished creating preprocessing pipeline.
2024-04-24 09:09:12,871:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 09:09:12,871:INFO:Creating final display dataframe.
2024-04-24 09:09:12,926:INFO:Setup _display_container:                     Description             Value
0                    Session id              5377
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2730
2024-04-24 09:09:12,972:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:12,973:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:13,015:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:09:13,017:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:09:13,017:INFO:setup() successfully completed in 0.44s...............
2024-04-24 09:09:13,018:INFO:Initializing compare_models()
2024-04-24 09:09:13,018:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 09:09:13,018:INFO:Checking exceptions
2024-04-24 09:09:13,021:INFO:Preparing display monitor
2024-04-24 09:09:13,038:INFO:Initializing Logistic Regression
2024-04-24 09:09:13,038:INFO:Total runtime is 0.0 minutes
2024-04-24 09:09:13,040:INFO:SubProcess create_model() called ==================================
2024-04-24 09:09:13,040:INFO:Initializing create_model()
2024-04-24 09:09:13,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B961771EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:09:13,040:INFO:Checking exceptions
2024-04-24 09:09:13,040:INFO:Importing libraries
2024-04-24 09:09:13,041:INFO:Copying training dataset
2024-04-24 09:09:13,044:INFO:Defining folds
2024-04-24 09:09:13,045:INFO:Declaring metric variables
2024-04-24 09:09:13,047:INFO:Importing untrained model
2024-04-24 09:09:13,050:INFO:Logistic Regression Imported successfully
2024-04-24 09:09:13,054:INFO:Starting cross validation
2024-04-24 09:09:13,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:09:13,127:INFO:Calculating mean and std
2024-04-24 09:09:13,127:INFO:Creating metrics dataframe
2024-04-24 09:09:13,130:INFO:Uploading results into container
2024-04-24 09:09:13,130:INFO:Uploading model into container now
2024-04-24 09:09:13,130:INFO:_master_model_container: 1
2024-04-24 09:09:13,130:INFO:_display_container: 2
2024-04-24 09:09:13,131:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:09:13,131:INFO:create_model() successfully completed......................................
2024-04-24 09:09:13,276:INFO:SubProcess create_model() end ==================================
2024-04-24 09:09:13,276:INFO:Creating metrics dataframe
2024-04-24 09:09:13,283:INFO:Initializing Decision Tree Classifier
2024-04-24 09:09:13,283:INFO:Total runtime is 0.004083303610483805 minutes
2024-04-24 09:09:13,286:INFO:SubProcess create_model() called ==================================
2024-04-24 09:09:13,286:INFO:Initializing create_model()
2024-04-24 09:09:13,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B961771EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:09:13,286:INFO:Checking exceptions
2024-04-24 09:09:13,286:INFO:Importing libraries
2024-04-24 09:09:13,286:INFO:Copying training dataset
2024-04-24 09:09:13,291:INFO:Defining folds
2024-04-24 09:09:13,291:INFO:Declaring metric variables
2024-04-24 09:09:13,293:INFO:Importing untrained model
2024-04-24 09:09:13,296:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:09:13,302:INFO:Starting cross validation
2024-04-24 09:09:13,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:09:13,415:INFO:Calculating mean and std
2024-04-24 09:09:13,416:INFO:Creating metrics dataframe
2024-04-24 09:09:13,418:INFO:Uploading results into container
2024-04-24 09:09:13,418:INFO:Uploading model into container now
2024-04-24 09:09:13,419:INFO:_master_model_container: 2
2024-04-24 09:09:13,419:INFO:_display_container: 2
2024-04-24 09:09:13,419:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best')
2024-04-24 09:09:13,419:INFO:create_model() successfully completed......................................
2024-04-24 09:09:13,556:INFO:SubProcess create_model() end ==================================
2024-04-24 09:09:13,556:INFO:Creating metrics dataframe
2024-04-24 09:09:13,570:INFO:Initializing create_model()
2024-04-24 09:09:13,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:09:13,570:INFO:Checking exceptions
2024-04-24 09:09:13,571:INFO:Importing libraries
2024-04-24 09:09:13,572:INFO:Copying training dataset
2024-04-24 09:09:13,576:INFO:Defining folds
2024-04-24 09:09:13,576:INFO:Declaring metric variables
2024-04-24 09:09:13,576:INFO:Importing untrained model
2024-04-24 09:09:13,576:INFO:Declaring custom model
2024-04-24 09:09:13,576:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:09:13,577:INFO:Cross validation set to False
2024-04-24 09:09:13,577:INFO:Fitting Model
2024-04-24 09:09:13,625:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best')
2024-04-24 09:09:13,625:INFO:create_model() successfully completed......................................
2024-04-24 09:09:13,768:INFO:Initializing create_model()
2024-04-24 09:09:13,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:09:13,769:INFO:Checking exceptions
2024-04-24 09:09:13,770:INFO:Importing libraries
2024-04-24 09:09:13,770:INFO:Copying training dataset
2024-04-24 09:09:13,774:INFO:Defining folds
2024-04-24 09:09:13,774:INFO:Declaring metric variables
2024-04-24 09:09:13,774:INFO:Importing untrained model
2024-04-24 09:09:13,774:INFO:Declaring custom model
2024-04-24 09:09:13,774:INFO:Logistic Regression Imported successfully
2024-04-24 09:09:13,775:INFO:Cross validation set to False
2024-04-24 09:09:13,775:INFO:Fitting Model
2024-04-24 09:09:13,793:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:09:13,793:INFO:create_model() successfully completed......................................
2024-04-24 09:09:13,948:INFO:_master_model_container: 2
2024-04-24 09:09:13,948:INFO:_display_container: 2
2024-04-24 09:09:13,948:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 09:09:13,948:INFO:compare_models() successfully completed......................................
2024-04-24 09:09:13,948:INFO:Initializing predict_model()
2024-04-24 09:09:13,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B967E2BA60>)
2024-04-24 09:09:13,949:INFO:Checking exceptions
2024-04-24 09:09:13,949:INFO:Preloading libraries
2024-04-24 09:09:14,601:INFO:Initializing plot_model()
2024-04-24 09:09:14,601:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, system=True)
2024-04-24 09:09:14,601:INFO:Checking exceptions
2024-04-24 09:09:14,605:INFO:Preloading libraries
2024-04-24 09:09:14,605:INFO:Copying training dataset
2024-04-24 09:09:14,605:INFO:Plot type: confusion_matrix
2024-04-24 09:09:14,657:INFO:Fitting Model
2024-04-24 09:09:14,657:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 09:09:14,657:INFO:Scoring test/hold-out set
2024-04-24 09:09:14,716:INFO:Visual Rendered Successfully
2024-04-24 09:09:14,860:INFO:plot_model() successfully completed......................................
2024-04-24 09:09:14,861:INFO:Initializing plot_model()
2024-04-24 09:09:14,861:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, system=True)
2024-04-24 09:09:14,861:INFO:Checking exceptions
2024-04-24 09:09:14,865:INFO:Preloading libraries
2024-04-24 09:09:14,866:INFO:Copying training dataset
2024-04-24 09:09:14,866:INFO:Plot type: auc
2024-04-24 09:09:14,916:INFO:Fitting Model
2024-04-24 09:09:14,916:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 09:09:14,916:INFO:Scoring test/hold-out set
2024-04-24 09:09:15,020:INFO:Visual Rendered Successfully
2024-04-24 09:09:15,174:INFO:plot_model() successfully completed......................................
2024-04-24 09:09:15,175:INFO:Initializing predict_model()
2024-04-24 09:09:15,176:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B966F21B80>)
2024-04-24 09:09:15,176:INFO:Checking exceptions
2024-04-24 09:09:15,176:INFO:Preloading libraries
2024-04-24 09:09:16,031:INFO:Initializing tune_model()
2024-04-24 09:09:16,031:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>)
2024-04-24 09:09:16,031:INFO:Checking exceptions
2024-04-24 09:09:16,043:INFO:Copying training dataset
2024-04-24 09:09:16,046:INFO:Checking base model
2024-04-24 09:09:16,046:INFO:Base model : Decision Tree Classifier
2024-04-24 09:09:16,049:INFO:Declaring metric variables
2024-04-24 09:09:16,052:INFO:Defining Hyperparameters
2024-04-24 09:09:16,204:INFO:Tuning with n_jobs=-1
2024-04-24 09:09:16,204:INFO:Initializing RandomizedSearchCV
2024-04-24 09:09:16,355:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini'}
2024-04-24 09:09:16,355:INFO:Hyperparameter search completed
2024-04-24 09:09:16,356:INFO:SubProcess create_model() called ==================================
2024-04-24 09:09:16,356:INFO:Initializing create_model()
2024-04-24 09:09:16,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B968A35B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'gini'})
2024-04-24 09:09:16,356:INFO:Checking exceptions
2024-04-24 09:09:16,356:INFO:Importing libraries
2024-04-24 09:09:16,356:INFO:Copying training dataset
2024-04-24 09:09:16,360:INFO:Defining folds
2024-04-24 09:09:16,360:INFO:Declaring metric variables
2024-04-24 09:09:16,363:INFO:Importing untrained model
2024-04-24 09:09:16,363:INFO:Declaring custom model
2024-04-24 09:09:16,367:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:09:16,371:INFO:Starting cross validation
2024-04-24 09:09:16,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:09:16,442:INFO:Calculating mean and std
2024-04-24 09:09:16,443:INFO:Creating metrics dataframe
2024-04-24 09:09:16,446:INFO:Finalizing model
2024-04-24 09:09:16,465:INFO:Uploading results into container
2024-04-24 09:09:16,466:INFO:Uploading model into container now
2024-04-24 09:09:16,466:INFO:_master_model_container: 3
2024-04-24 09:09:16,466:INFO:_display_container: 5
2024-04-24 09:09:16,467:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best')
2024-04-24 09:09:16,467:INFO:create_model() successfully completed......................................
2024-04-24 09:09:16,671:INFO:SubProcess create_model() end ==================================
2024-04-24 09:09:16,672:INFO:choose_better activated
2024-04-24 09:09:16,682:INFO:SubProcess create_model() called ==================================
2024-04-24 09:09:16,683:INFO:Initializing create_model()
2024-04-24 09:09:16,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:09:16,683:INFO:Checking exceptions
2024-04-24 09:09:16,686:INFO:Importing libraries
2024-04-24 09:09:16,687:INFO:Copying training dataset
2024-04-24 09:09:16,698:INFO:Defining folds
2024-04-24 09:09:16,698:INFO:Declaring metric variables
2024-04-24 09:09:16,699:INFO:Importing untrained model
2024-04-24 09:09:16,699:INFO:Declaring custom model
2024-04-24 09:09:16,701:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:09:16,701:INFO:Starting cross validation
2024-04-24 09:09:16,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:09:16,829:INFO:Calculating mean and std
2024-04-24 09:09:16,829:INFO:Creating metrics dataframe
2024-04-24 09:09:16,830:INFO:Finalizing model
2024-04-24 09:09:16,879:INFO:Uploading results into container
2024-04-24 09:09:16,879:INFO:Uploading model into container now
2024-04-24 09:09:16,879:INFO:_master_model_container: 4
2024-04-24 09:09:16,881:INFO:_display_container: 6
2024-04-24 09:09:16,881:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best')
2024-04-24 09:09:16,881:INFO:create_model() successfully completed......................................
2024-04-24 09:09:17,069:INFO:SubProcess create_model() end ==================================
2024-04-24 09:09:17,069:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best') result for F1 is 0.5485
2024-04-24 09:09:17,070:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best') result for F1 is 0.4753
2024-04-24 09:09:17,070:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best') is best model
2024-04-24 09:09:17,070:INFO:choose_better completed
2024-04-24 09:09:17,070:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 09:09:17,079:INFO:_master_model_container: 4
2024-04-24 09:09:17,079:INFO:_display_container: 5
2024-04-24 09:09:17,079:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best')
2024-04-24 09:09:17,080:INFO:tune_model() successfully completed......................................
2024-04-24 09:09:17,237:INFO:Initializing predict_model()
2024-04-24 09:09:17,237:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B9683EB1F0>)
2024-04-24 09:09:17,237:INFO:Checking exceptions
2024-04-24 09:09:17,237:INFO:Preloading libraries
2024-04-24 09:09:17,475:INFO:Initializing finalize_model()
2024-04-24 09:09:17,475:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 09:09:17,475:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best')
2024-04-24 09:09:17,478:INFO:Initializing create_model()
2024-04-24 09:09:17,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DEC35E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5377, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:09:17,478:INFO:Checking exceptions
2024-04-24 09:09:17,479:INFO:Importing libraries
2024-04-24 09:09:17,479:INFO:Copying training dataset
2024-04-24 09:09:17,479:INFO:Defining folds
2024-04-24 09:09:17,479:INFO:Declaring metric variables
2024-04-24 09:09:17,479:INFO:Importing untrained model
2024-04-24 09:09:17,480:INFO:Declaring custom model
2024-04-24 09:09:17,480:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:09:17,480:INFO:Cross validation set to False
2024-04-24 09:09:17,480:INFO:Fitting Model
2024-04-24 09:09:17,543:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5377, splitter='best'))],
         verbose=False)
2024-04-24 09:09:17,543:INFO:create_model() successfully completed......................................
2024-04-24 09:09:17,697:INFO:_master_model_container: 4
2024-04-24 09:09:17,697:INFO:_display_container: 6
2024-04-24 09:09:17,701:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5377, splitter='best'))],
         verbose=False)
2024-04-24 09:09:17,701:INFO:finalize_model() successfully completed......................................
2024-04-24 09:09:17,853:INFO:Initializing save_model()
2024-04-24 09:09:17,853:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5377, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 09:09:17,853:INFO:Adding model into prep_pipe
2024-04-24 09:09:17,853:WARNING:Only Model saved as it was a pipeline.
2024-04-24 09:09:17,856:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 09:09:17,859:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5377, splitter='best'))],
         verbose=False)
2024-04-24 09:09:17,859:INFO:save_model() successfully completed......................................
2024-04-24 09:09:18,012:INFO:Initializing load_model()
2024-04-24 09:09:18,012:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 09:09:18,047:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 09:09:22,123:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\526892838.py:207: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 09:10:14,020:INFO:PyCaret ClassificationExperiment
2024-04-24 09:10:14,020:INFO:Logging name: clf-default-name
2024-04-24 09:10:14,020:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 09:10:14,020:INFO:version 3.2.0
2024-04-24 09:10:14,020:INFO:Initializing setup()
2024-04-24 09:10:14,020:INFO:self.USI: 6136
2024-04-24 09:10:14,020:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 09:10:14,020:INFO:Checking environment
2024-04-24 09:10:14,020:INFO:python_version: 3.9.19
2024-04-24 09:10:14,020:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 09:10:14,020:INFO:machine: AMD64
2024-04-24 09:10:14,020:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 09:10:14,020:INFO:Memory: svmem(total=33897811968, available=9098907648, percent=73.2, used=24798904320, free=9098907648)
2024-04-24 09:10:14,020:INFO:Physical Core: 14
2024-04-24 09:10:14,020:INFO:Logical Core: 20
2024-04-24 09:10:14,020:INFO:Checking libraries
2024-04-24 09:10:14,020:INFO:System:
2024-04-24 09:10:14,020:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 09:10:14,020:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 09:10:14,020:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 09:10:14,020:INFO:PyCaret required dependencies:
2024-04-24 09:10:14,020:INFO:                 pip: 23.3.1
2024-04-24 09:10:14,021:INFO:          setuptools: 68.2.2
2024-04-24 09:10:14,021:INFO:             pycaret: 3.2.0
2024-04-24 09:10:14,021:INFO:             IPython: 8.15.0
2024-04-24 09:10:14,021:INFO:          ipywidgets: 8.1.2
2024-04-24 09:10:14,021:INFO:                tqdm: 4.65.0
2024-04-24 09:10:14,021:INFO:               numpy: 1.25.2
2024-04-24 09:10:14,021:INFO:              pandas: 1.5.3
2024-04-24 09:10:14,021:INFO:              jinja2: 3.1.3
2024-04-24 09:10:14,021:INFO:               scipy: 1.11.4
2024-04-24 09:10:14,021:INFO:              joblib: 1.2.0
2024-04-24 09:10:14,021:INFO:             sklearn: 1.2.2
2024-04-24 09:10:14,021:INFO:                pyod: 1.0.9
2024-04-24 09:10:14,021:INFO:            imblearn: 0.11.0
2024-04-24 09:10:14,021:INFO:   category_encoders: 2.6.3
2024-04-24 09:10:14,021:INFO:            lightgbm: 4.1.0
2024-04-24 09:10:14,021:INFO:               numba: 0.59.1
2024-04-24 09:10:14,021:INFO:            requests: 2.31.0
2024-04-24 09:10:14,021:INFO:          matplotlib: 3.8.4
2024-04-24 09:10:14,021:INFO:          scikitplot: 0.3.7
2024-04-24 09:10:14,021:INFO:         yellowbrick: 1.5
2024-04-24 09:10:14,021:INFO:              plotly: 5.19.0
2024-04-24 09:10:14,021:INFO:    plotly-resampler: Not installed
2024-04-24 09:10:14,021:INFO:             kaleido: 0.2.1
2024-04-24 09:10:14,021:INFO:           schemdraw: 0.15
2024-04-24 09:10:14,021:INFO:         statsmodels: 0.14.0
2024-04-24 09:10:14,021:INFO:              sktime: 0.21.1
2024-04-24 09:10:14,021:INFO:               tbats: 1.1.3
2024-04-24 09:10:14,021:INFO:            pmdarima: 2.0.4
2024-04-24 09:10:14,021:INFO:              psutil: 5.9.0
2024-04-24 09:10:14,021:INFO:          markupsafe: 2.1.3
2024-04-24 09:10:14,021:INFO:             pickle5: Not installed
2024-04-24 09:10:14,021:INFO:         cloudpickle: 2.2.1
2024-04-24 09:10:14,021:INFO:         deprecation: 2.1.0
2024-04-24 09:10:14,021:INFO:              xxhash: 2.0.2
2024-04-24 09:10:14,021:INFO:           wurlitzer: 3.0.3
2024-04-24 09:10:14,021:INFO:PyCaret optional dependencies:
2024-04-24 09:10:14,021:INFO:                shap: Not installed
2024-04-24 09:10:14,021:INFO:           interpret: Not installed
2024-04-24 09:10:14,021:INFO:                umap: 0.5.3
2024-04-24 09:10:14,021:INFO:     ydata_profiling: Not installed
2024-04-24 09:10:14,021:INFO:  explainerdashboard: Not installed
2024-04-24 09:10:14,021:INFO:             autoviz: Not installed
2024-04-24 09:10:14,021:INFO:           fairlearn: Not installed
2024-04-24 09:10:14,021:INFO:          deepchecks: Not installed
2024-04-24 09:10:14,021:INFO:             xgboost: 1.7.6
2024-04-24 09:10:14,021:INFO:            catboost: 1.2.3
2024-04-24 09:10:14,021:INFO:              kmodes: 0.12.2
2024-04-24 09:10:14,021:INFO:             mlxtend: 0.23.1
2024-04-24 09:10:14,021:INFO:       statsforecast: Not installed
2024-04-24 09:10:14,021:INFO:        tune_sklearn: Not installed
2024-04-24 09:10:14,021:INFO:                 ray: Not installed
2024-04-24 09:10:14,021:INFO:            hyperopt: Not installed
2024-04-24 09:10:14,021:INFO:              optuna: Not installed
2024-04-24 09:10:14,021:INFO:               skopt: Not installed
2024-04-24 09:10:14,021:INFO:              mlflow: 2.9.2
2024-04-24 09:10:14,021:INFO:              gradio: Not installed
2024-04-24 09:10:14,022:INFO:             fastapi: Not installed
2024-04-24 09:10:14,022:INFO:             uvicorn: Not installed
2024-04-24 09:10:14,022:INFO:              m2cgen: Not installed
2024-04-24 09:10:14,022:INFO:           evidently: Not installed
2024-04-24 09:10:14,022:INFO:               fugue: Not installed
2024-04-24 09:10:14,022:INFO:           streamlit: 1.32.0
2024-04-24 09:10:14,022:INFO:             prophet: Not installed
2024-04-24 09:10:14,022:INFO:None
2024-04-24 09:10:14,022:INFO:Set up data.
2024-04-24 09:10:14,025:INFO:Set up folding strategy.
2024-04-24 09:10:14,026:INFO:Set up train/test split.
2024-04-24 09:10:14,026:INFO:Set up data.
2024-04-24 09:10:14,028:INFO:Set up index.
2024-04-24 09:10:14,029:INFO:Assigning column types.
2024-04-24 09:10:14,031:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 09:10:14,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:10:14,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:10:14,071:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,073:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 09:10:14,097:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:10:14,113:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,115:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,115:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 09:10:14,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:10:14,157:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,158:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 09:10:14,199:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,201:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,201:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 09:10:14,242:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,244:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,286:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,287:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,288:INFO:Preparing preprocessing pipeline...
2024-04-24 09:10:14,289:INFO:Set up simple imputation.
2024-04-24 09:10:14,289:INFO:Set up feature normalization.
2024-04-24 09:10:14,308:INFO:Finished creating preprocessing pipeline.
2024-04-24 09:10:14,311:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 09:10:14,311:INFO:Creating final display dataframe.
2024-04-24 09:10:14,369:INFO:Setup _display_container:                     Description             Value
0                    Session id              3584
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6136
2024-04-24 09:10:14,417:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,418:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,460:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 09:10:14,462:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 09:10:14,462:INFO:setup() successfully completed in 0.44s...............
2024-04-24 09:10:14,462:INFO:Initializing compare_models()
2024-04-24 09:10:14,463:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 09:10:14,463:INFO:Checking exceptions
2024-04-24 09:10:14,466:INFO:Preparing display monitor
2024-04-24 09:10:14,479:INFO:Initializing Logistic Regression
2024-04-24 09:10:14,479:INFO:Total runtime is 0.0 minutes
2024-04-24 09:10:14,481:INFO:SubProcess create_model() called ==================================
2024-04-24 09:10:14,481:INFO:Initializing create_model()
2024-04-24 09:10:14,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B958A80EE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:10:14,481:INFO:Checking exceptions
2024-04-24 09:10:14,481:INFO:Importing libraries
2024-04-24 09:10:14,481:INFO:Copying training dataset
2024-04-24 09:10:14,485:INFO:Defining folds
2024-04-24 09:10:14,485:INFO:Declaring metric variables
2024-04-24 09:10:14,487:INFO:Importing untrained model
2024-04-24 09:10:14,490:INFO:Logistic Regression Imported successfully
2024-04-24 09:10:14,494:INFO:Starting cross validation
2024-04-24 09:10:14,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:10:14,566:INFO:Calculating mean and std
2024-04-24 09:10:14,567:INFO:Creating metrics dataframe
2024-04-24 09:10:14,569:INFO:Uploading results into container
2024-04-24 09:10:14,569:INFO:Uploading model into container now
2024-04-24 09:10:14,569:INFO:_master_model_container: 1
2024-04-24 09:10:14,569:INFO:_display_container: 2
2024-04-24 09:10:14,569:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:10:14,569:INFO:create_model() successfully completed......................................
2024-04-24 09:10:14,724:INFO:SubProcess create_model() end ==================================
2024-04-24 09:10:14,724:INFO:Creating metrics dataframe
2024-04-24 09:10:14,731:INFO:Initializing Decision Tree Classifier
2024-04-24 09:10:14,731:INFO:Total runtime is 0.004184130827585856 minutes
2024-04-24 09:10:14,733:INFO:SubProcess create_model() called ==================================
2024-04-24 09:10:14,733:INFO:Initializing create_model()
2024-04-24 09:10:14,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B958A80EE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:10:14,734:INFO:Checking exceptions
2024-04-24 09:10:14,734:INFO:Importing libraries
2024-04-24 09:10:14,734:INFO:Copying training dataset
2024-04-24 09:10:14,738:INFO:Defining folds
2024-04-24 09:10:14,738:INFO:Declaring metric variables
2024-04-24 09:10:14,741:INFO:Importing untrained model
2024-04-24 09:10:14,744:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:10:14,748:INFO:Starting cross validation
2024-04-24 09:10:14,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:10:14,857:INFO:Calculating mean and std
2024-04-24 09:10:14,857:INFO:Creating metrics dataframe
2024-04-24 09:10:14,859:INFO:Uploading results into container
2024-04-24 09:10:14,860:INFO:Uploading model into container now
2024-04-24 09:10:14,860:INFO:_master_model_container: 2
2024-04-24 09:10:14,860:INFO:_display_container: 2
2024-04-24 09:10:14,860:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best')
2024-04-24 09:10:14,861:INFO:create_model() successfully completed......................................
2024-04-24 09:10:15,019:INFO:SubProcess create_model() end ==================================
2024-04-24 09:10:15,019:INFO:Creating metrics dataframe
2024-04-24 09:10:15,033:INFO:Initializing create_model()
2024-04-24 09:10:15,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:10:15,033:INFO:Checking exceptions
2024-04-24 09:10:15,034:INFO:Importing libraries
2024-04-24 09:10:15,034:INFO:Copying training dataset
2024-04-24 09:10:15,038:INFO:Defining folds
2024-04-24 09:10:15,038:INFO:Declaring metric variables
2024-04-24 09:10:15,038:INFO:Importing untrained model
2024-04-24 09:10:15,038:INFO:Declaring custom model
2024-04-24 09:10:15,038:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:10:15,039:INFO:Cross validation set to False
2024-04-24 09:10:15,039:INFO:Fitting Model
2024-04-24 09:10:15,081:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best')
2024-04-24 09:10:15,081:INFO:create_model() successfully completed......................................
2024-04-24 09:10:15,226:INFO:Initializing create_model()
2024-04-24 09:10:15,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:10:15,226:INFO:Checking exceptions
2024-04-24 09:10:15,228:INFO:Importing libraries
2024-04-24 09:10:15,228:INFO:Copying training dataset
2024-04-24 09:10:15,232:INFO:Defining folds
2024-04-24 09:10:15,232:INFO:Declaring metric variables
2024-04-24 09:10:15,232:INFO:Importing untrained model
2024-04-24 09:10:15,232:INFO:Declaring custom model
2024-04-24 09:10:15,233:INFO:Logistic Regression Imported successfully
2024-04-24 09:10:15,233:INFO:Cross validation set to False
2024-04-24 09:10:15,233:INFO:Fitting Model
2024-04-24 09:10:15,252:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 09:10:15,252:INFO:create_model() successfully completed......................................
2024-04-24 09:10:15,403:INFO:_master_model_container: 2
2024-04-24 09:10:15,403:INFO:_display_container: 2
2024-04-24 09:10:15,404:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 09:10:15,404:INFO:compare_models() successfully completed......................................
2024-04-24 09:10:15,404:INFO:Initializing predict_model()
2024-04-24 09:10:15,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B95E428DC0>)
2024-04-24 09:10:15,404:INFO:Checking exceptions
2024-04-24 09:10:15,404:INFO:Preloading libraries
2024-04-24 09:10:16,049:INFO:Initializing plot_model()
2024-04-24 09:10:16,049:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, system=True)
2024-04-24 09:10:16,049:INFO:Checking exceptions
2024-04-24 09:10:16,052:INFO:Preloading libraries
2024-04-24 09:10:16,053:INFO:Copying training dataset
2024-04-24 09:10:16,053:INFO:Plot type: confusion_matrix
2024-04-24 09:10:16,105:INFO:Fitting Model
2024-04-24 09:10:16,105:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 09:10:16,105:INFO:Scoring test/hold-out set
2024-04-24 09:10:16,169:INFO:Visual Rendered Successfully
2024-04-24 09:10:16,314:INFO:plot_model() successfully completed......................................
2024-04-24 09:10:16,315:INFO:Initializing plot_model()
2024-04-24 09:10:16,315:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, system=True)
2024-04-24 09:10:16,315:INFO:Checking exceptions
2024-04-24 09:10:16,320:INFO:Preloading libraries
2024-04-24 09:10:16,321:INFO:Copying training dataset
2024-04-24 09:10:16,321:INFO:Plot type: auc
2024-04-24 09:10:16,373:INFO:Fitting Model
2024-04-24 09:10:16,373:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 09:10:16,374:INFO:Scoring test/hold-out set
2024-04-24 09:10:16,477:INFO:Visual Rendered Successfully
2024-04-24 09:10:16,635:INFO:plot_model() successfully completed......................................
2024-04-24 09:10:16,636:INFO:Initializing predict_model()
2024-04-24 09:10:16,636:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B9612764C0>)
2024-04-24 09:10:16,636:INFO:Checking exceptions
2024-04-24 09:10:16,636:INFO:Preloading libraries
2024-04-24 09:10:17,411:INFO:Initializing plot_model()
2024-04-24 09:10:17,411:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, system=True)
2024-04-24 09:10:17,411:INFO:Checking exceptions
2024-04-24 09:10:17,414:INFO:Preloading libraries
2024-04-24 09:10:17,414:INFO:Copying training dataset
2024-04-24 09:10:17,414:INFO:Plot type: confusion_matrix
2024-04-24 09:10:17,483:INFO:Fitting Model
2024-04-24 09:10:17,483:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 09:10:17,483:INFO:Scoring test/hold-out set
2024-04-24 09:10:17,555:INFO:Visual Rendered Successfully
2024-04-24 09:10:17,741:INFO:plot_model() successfully completed......................................
2024-04-24 09:10:17,742:INFO:Initializing plot_model()
2024-04-24 09:10:17,742:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3584, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, system=True)
2024-04-24 09:10:17,742:INFO:Checking exceptions
2024-04-24 09:10:17,749:INFO:Preloading libraries
2024-04-24 09:10:17,750:INFO:Copying training dataset
2024-04-24 09:10:17,750:INFO:Plot type: auc
2024-04-24 09:10:17,829:INFO:Fitting Model
2024-04-24 09:10:17,829:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 09:10:17,830:INFO:Scoring test/hold-out set
2024-04-24 09:10:17,941:INFO:Visual Rendered Successfully
2024-04-24 09:10:18,089:INFO:plot_model() successfully completed......................................
2024-04-24 09:10:18,091:INFO:Initializing tune_model()
2024-04-24 09:10:18,091:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>)
2024-04-24 09:10:18,091:INFO:Checking exceptions
2024-04-24 09:10:18,106:INFO:Copying training dataset
2024-04-24 09:10:18,109:INFO:Checking base model
2024-04-24 09:10:18,110:INFO:Base model : Decision Tree Classifier
2024-04-24 09:10:18,112:INFO:Declaring metric variables
2024-04-24 09:10:18,115:INFO:Defining Hyperparameters
2024-04-24 09:10:18,258:INFO:Tuning with n_jobs=-1
2024-04-24 09:10:18,259:INFO:Initializing RandomizedSearchCV
2024-04-24 09:10:18,413:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'gini'}
2024-04-24 09:10:18,413:INFO:Hyperparameter search completed
2024-04-24 09:10:18,413:INFO:SubProcess create_model() called ==================================
2024-04-24 09:10:18,414:INFO:Initializing create_model()
2024-04-24 09:10:18,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B95DEDC700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0001, 'max_features': 'log2', 'max_depth': 16, 'criterion': 'gini'})
2024-04-24 09:10:18,414:INFO:Checking exceptions
2024-04-24 09:10:18,414:INFO:Importing libraries
2024-04-24 09:10:18,414:INFO:Copying training dataset
2024-04-24 09:10:18,418:INFO:Defining folds
2024-04-24 09:10:18,418:INFO:Declaring metric variables
2024-04-24 09:10:18,421:INFO:Importing untrained model
2024-04-24 09:10:18,421:INFO:Declaring custom model
2024-04-24 09:10:18,423:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:10:18,427:INFO:Starting cross validation
2024-04-24 09:10:18,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:10:18,493:INFO:Calculating mean and std
2024-04-24 09:10:18,494:INFO:Creating metrics dataframe
2024-04-24 09:10:18,498:INFO:Finalizing model
2024-04-24 09:10:18,515:INFO:Uploading results into container
2024-04-24 09:10:18,516:INFO:Uploading model into container now
2024-04-24 09:10:18,516:INFO:_master_model_container: 3
2024-04-24 09:10:18,516:INFO:_display_container: 5
2024-04-24 09:10:18,516:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=6,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best')
2024-04-24 09:10:18,516:INFO:create_model() successfully completed......................................
2024-04-24 09:10:18,664:INFO:SubProcess create_model() end ==================================
2024-04-24 09:10:18,664:INFO:choose_better activated
2024-04-24 09:10:18,667:INFO:SubProcess create_model() called ==================================
2024-04-24 09:10:18,668:INFO:Initializing create_model()
2024-04-24 09:10:18,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:10:18,668:INFO:Checking exceptions
2024-04-24 09:10:18,669:INFO:Importing libraries
2024-04-24 09:10:18,669:INFO:Copying training dataset
2024-04-24 09:10:18,674:INFO:Defining folds
2024-04-24 09:10:18,674:INFO:Declaring metric variables
2024-04-24 09:10:18,674:INFO:Importing untrained model
2024-04-24 09:10:18,674:INFO:Declaring custom model
2024-04-24 09:10:18,675:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:10:18,675:INFO:Starting cross validation
2024-04-24 09:10:18,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 09:10:18,782:INFO:Calculating mean and std
2024-04-24 09:10:18,783:INFO:Creating metrics dataframe
2024-04-24 09:10:18,784:INFO:Finalizing model
2024-04-24 09:10:18,834:INFO:Uploading results into container
2024-04-24 09:10:18,834:INFO:Uploading model into container now
2024-04-24 09:10:18,835:INFO:_master_model_container: 4
2024-04-24 09:10:18,835:INFO:_display_container: 6
2024-04-24 09:10:18,835:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best')
2024-04-24 09:10:18,835:INFO:create_model() successfully completed......................................
2024-04-24 09:10:18,975:INFO:SubProcess create_model() end ==================================
2024-04-24 09:10:18,975:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best') result for F1 is 0.5509
2024-04-24 09:10:18,976:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=6,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best') result for F1 is 0.4806
2024-04-24 09:10:18,976:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best') is best model
2024-04-24 09:10:18,976:INFO:choose_better completed
2024-04-24 09:10:18,976:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 09:10:18,983:INFO:_master_model_container: 4
2024-04-24 09:10:18,983:INFO:_display_container: 5
2024-04-24 09:10:18,983:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best')
2024-04-24 09:10:18,984:INFO:tune_model() successfully completed......................................
2024-04-24 09:10:19,166:INFO:Initializing predict_model()
2024-04-24 09:10:19,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B95CF420D0>)
2024-04-24 09:10:19,166:INFO:Checking exceptions
2024-04-24 09:10:19,166:INFO:Preloading libraries
2024-04-24 09:10:19,405:INFO:Initializing finalize_model()
2024-04-24 09:10:19,405:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 09:10:19,406:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best')
2024-04-24 09:10:19,409:INFO:Initializing create_model()
2024-04-24 09:10:19,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B962336B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3584, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 09:10:19,409:INFO:Checking exceptions
2024-04-24 09:10:19,410:INFO:Importing libraries
2024-04-24 09:10:19,410:INFO:Copying training dataset
2024-04-24 09:10:19,411:INFO:Defining folds
2024-04-24 09:10:19,411:INFO:Declaring metric variables
2024-04-24 09:10:19,411:INFO:Importing untrained model
2024-04-24 09:10:19,411:INFO:Declaring custom model
2024-04-24 09:10:19,411:INFO:Decision Tree Classifier Imported successfully
2024-04-24 09:10:19,411:INFO:Cross validation set to False
2024-04-24 09:10:19,412:INFO:Fitting Model
2024-04-24 09:10:19,475:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3584, splitter='best'))],
         verbose=False)
2024-04-24 09:10:19,476:INFO:create_model() successfully completed......................................
2024-04-24 09:10:19,621:INFO:_master_model_container: 4
2024-04-24 09:10:19,621:INFO:_display_container: 6
2024-04-24 09:10:19,626:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3584, splitter='best'))],
         verbose=False)
2024-04-24 09:10:19,626:INFO:finalize_model() successfully completed......................................
2024-04-24 09:10:19,807:INFO:Initializing save_model()
2024-04-24 09:10:19,807:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3584, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 09:10:19,807:INFO:Adding model into prep_pipe
2024-04-24 09:10:19,807:WARNING:Only Model saved as it was a pipeline.
2024-04-24 09:10:19,810:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 09:10:19,814:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3584, splitter='best'))],
         verbose=False)
2024-04-24 09:10:19,814:INFO:save_model() successfully completed......................................
2024-04-24 09:10:19,988:INFO:Initializing load_model()
2024-04-24 09:10:19,988:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 09:10:20,027:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 09:10:24,249:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\813319710.py:191: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 11:27:55,976:INFO:PyCaret ClassificationExperiment
2024-04-24 11:27:55,976:INFO:Logging name: clf-default-name
2024-04-24 11:27:55,976:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 11:27:55,976:INFO:version 3.2.0
2024-04-24 11:27:55,976:INFO:Initializing setup()
2024-04-24 11:27:55,976:INFO:self.USI: e609
2024-04-24 11:27:55,976:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 11:27:55,976:INFO:Checking environment
2024-04-24 11:27:55,976:INFO:python_version: 3.9.19
2024-04-24 11:27:55,976:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 11:27:55,976:INFO:machine: AMD64
2024-04-24 11:27:55,976:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 11:27:55,976:INFO:Memory: svmem(total=33897811968, available=10801610752, percent=68.1, used=23096201216, free=10801610752)
2024-04-24 11:27:55,977:INFO:Physical Core: 14
2024-04-24 11:27:55,977:INFO:Logical Core: 20
2024-04-24 11:27:55,977:INFO:Checking libraries
2024-04-24 11:27:55,977:INFO:System:
2024-04-24 11:27:55,977:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 11:27:55,977:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 11:27:55,977:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 11:27:55,977:INFO:PyCaret required dependencies:
2024-04-24 11:27:55,977:INFO:                 pip: 23.3.1
2024-04-24 11:27:55,977:INFO:          setuptools: 68.2.2
2024-04-24 11:27:55,977:INFO:             pycaret: 3.2.0
2024-04-24 11:27:55,977:INFO:             IPython: 8.15.0
2024-04-24 11:27:55,977:INFO:          ipywidgets: 8.1.2
2024-04-24 11:27:55,977:INFO:                tqdm: 4.65.0
2024-04-24 11:27:55,977:INFO:               numpy: 1.25.2
2024-04-24 11:27:55,977:INFO:              pandas: 1.5.3
2024-04-24 11:27:55,977:INFO:              jinja2: 3.1.3
2024-04-24 11:27:55,977:INFO:               scipy: 1.11.4
2024-04-24 11:27:55,977:INFO:              joblib: 1.2.0
2024-04-24 11:27:55,977:INFO:             sklearn: 1.2.2
2024-04-24 11:27:55,977:INFO:                pyod: 1.0.9
2024-04-24 11:27:55,977:INFO:            imblearn: 0.11.0
2024-04-24 11:27:55,977:INFO:   category_encoders: 2.6.3
2024-04-24 11:27:55,977:INFO:            lightgbm: 4.1.0
2024-04-24 11:27:55,977:INFO:               numba: 0.59.1
2024-04-24 11:27:55,977:INFO:            requests: 2.31.0
2024-04-24 11:27:55,977:INFO:          matplotlib: 3.8.4
2024-04-24 11:27:55,977:INFO:          scikitplot: 0.3.7
2024-04-24 11:27:55,977:INFO:         yellowbrick: 1.5
2024-04-24 11:27:55,977:INFO:              plotly: 5.19.0
2024-04-24 11:27:55,977:INFO:    plotly-resampler: Not installed
2024-04-24 11:27:55,977:INFO:             kaleido: 0.2.1
2024-04-24 11:27:55,977:INFO:           schemdraw: 0.15
2024-04-24 11:27:55,977:INFO:         statsmodels: 0.14.0
2024-04-24 11:27:55,977:INFO:              sktime: 0.21.1
2024-04-24 11:27:55,977:INFO:               tbats: 1.1.3
2024-04-24 11:27:55,977:INFO:            pmdarima: 2.0.4
2024-04-24 11:27:55,977:INFO:              psutil: 5.9.0
2024-04-24 11:27:55,977:INFO:          markupsafe: 2.1.3
2024-04-24 11:27:55,977:INFO:             pickle5: Not installed
2024-04-24 11:27:55,977:INFO:         cloudpickle: 2.2.1
2024-04-24 11:27:55,977:INFO:         deprecation: 2.1.0
2024-04-24 11:27:55,977:INFO:              xxhash: 2.0.2
2024-04-24 11:27:55,977:INFO:           wurlitzer: 3.0.3
2024-04-24 11:27:55,977:INFO:PyCaret optional dependencies:
2024-04-24 11:27:55,977:INFO:                shap: Not installed
2024-04-24 11:27:55,977:INFO:           interpret: Not installed
2024-04-24 11:27:55,977:INFO:                umap: 0.5.3
2024-04-24 11:27:55,977:INFO:     ydata_profiling: Not installed
2024-04-24 11:27:55,977:INFO:  explainerdashboard: Not installed
2024-04-24 11:27:55,978:INFO:             autoviz: Not installed
2024-04-24 11:27:55,978:INFO:           fairlearn: Not installed
2024-04-24 11:27:55,978:INFO:          deepchecks: Not installed
2024-04-24 11:27:55,978:INFO:             xgboost: 1.7.6
2024-04-24 11:27:55,978:INFO:            catboost: 1.2.3
2024-04-24 11:27:55,978:INFO:              kmodes: 0.12.2
2024-04-24 11:27:55,978:INFO:             mlxtend: 0.23.1
2024-04-24 11:27:55,978:INFO:       statsforecast: Not installed
2024-04-24 11:27:55,978:INFO:        tune_sklearn: Not installed
2024-04-24 11:27:55,978:INFO:                 ray: Not installed
2024-04-24 11:27:55,978:INFO:            hyperopt: Not installed
2024-04-24 11:27:55,978:INFO:              optuna: Not installed
2024-04-24 11:27:55,978:INFO:               skopt: Not installed
2024-04-24 11:27:55,978:INFO:              mlflow: 2.9.2
2024-04-24 11:27:55,978:INFO:              gradio: Not installed
2024-04-24 11:27:55,978:INFO:             fastapi: Not installed
2024-04-24 11:27:55,978:INFO:             uvicorn: Not installed
2024-04-24 11:27:55,978:INFO:              m2cgen: Not installed
2024-04-24 11:27:55,978:INFO:           evidently: Not installed
2024-04-24 11:27:55,978:INFO:               fugue: Not installed
2024-04-24 11:27:55,978:INFO:           streamlit: 1.32.0
2024-04-24 11:27:55,978:INFO:             prophet: Not installed
2024-04-24 11:27:55,978:INFO:None
2024-04-24 11:27:55,978:INFO:Set up data.
2024-04-24 11:27:55,985:INFO:Set up folding strategy.
2024-04-24 11:27:55,985:INFO:Set up train/test split.
2024-04-24 11:27:55,985:INFO:Set up data.
2024-04-24 11:27:55,988:INFO:Set up index.
2024-04-24 11:27:55,988:INFO:Assigning column types.
2024-04-24 11:27:55,991:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 11:27:56,017:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:27:56,018:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:27:56,035:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,036:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:27:56,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:27:56,079:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,080:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,081:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 11:27:56,107:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:27:56,123:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,125:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:27:56,169:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,171:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,171:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 11:27:56,212:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,214:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,260:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,261:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,263:INFO:Preparing preprocessing pipeline...
2024-04-24 11:27:56,264:INFO:Set up simple imputation.
2024-04-24 11:27:56,264:INFO:Set up feature normalization.
2024-04-24 11:27:56,285:INFO:Finished creating preprocessing pipeline.
2024-04-24 11:27:56,288:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 11:27:56,288:INFO:Creating final display dataframe.
2024-04-24 11:27:56,345:INFO:Setup _display_container:                     Description             Value
0                    Session id              7201
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e609
2024-04-24 11:27:56,390:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,392:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,444:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:27:56,446:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:27:56,447:INFO:setup() successfully completed in 0.47s...............
2024-04-24 11:27:56,447:INFO:Initializing compare_models()
2024-04-24 11:27:56,447:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 11:27:56,447:INFO:Checking exceptions
2024-04-24 11:27:56,450:INFO:Preparing display monitor
2024-04-24 11:27:56,466:INFO:Initializing Logistic Regression
2024-04-24 11:27:56,466:INFO:Total runtime is 0.0 minutes
2024-04-24 11:27:56,468:INFO:SubProcess create_model() called ==================================
2024-04-24 11:27:56,469:INFO:Initializing create_model()
2024-04-24 11:27:56,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B95C636130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:27:56,469:INFO:Checking exceptions
2024-04-24 11:27:56,469:INFO:Importing libraries
2024-04-24 11:27:56,469:INFO:Copying training dataset
2024-04-24 11:27:56,474:INFO:Defining folds
2024-04-24 11:27:56,475:INFO:Declaring metric variables
2024-04-24 11:27:56,478:INFO:Importing untrained model
2024-04-24 11:27:56,481:INFO:Logistic Regression Imported successfully
2024-04-24 11:27:56,486:INFO:Starting cross validation
2024-04-24 11:27:56,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:28:00,513:INFO:Calculating mean and std
2024-04-24 11:28:00,515:INFO:Creating metrics dataframe
2024-04-24 11:28:00,520:INFO:Uploading results into container
2024-04-24 11:28:00,521:INFO:Uploading model into container now
2024-04-24 11:28:00,522:INFO:_master_model_container: 1
2024-04-24 11:28:00,522:INFO:_display_container: 2
2024-04-24 11:28:00,523:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 11:28:00,523:INFO:create_model() successfully completed......................................
2024-04-24 11:28:01,069:INFO:SubProcess create_model() end ==================================
2024-04-24 11:28:01,069:INFO:Creating metrics dataframe
2024-04-24 11:28:01,076:INFO:Initializing Decision Tree Classifier
2024-04-24 11:28:01,076:INFO:Total runtime is 0.0768221894900004 minutes
2024-04-24 11:28:01,078:INFO:SubProcess create_model() called ==================================
2024-04-24 11:28:01,078:INFO:Initializing create_model()
2024-04-24 11:28:01,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B95C636130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:28:01,079:INFO:Checking exceptions
2024-04-24 11:28:01,079:INFO:Importing libraries
2024-04-24 11:28:01,079:INFO:Copying training dataset
2024-04-24 11:28:01,083:INFO:Defining folds
2024-04-24 11:28:01,083:INFO:Declaring metric variables
2024-04-24 11:28:01,086:INFO:Importing untrained model
2024-04-24 11:28:01,089:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:28:01,093:INFO:Starting cross validation
2024-04-24 11:28:01,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:28:03,916:INFO:Calculating mean and std
2024-04-24 11:28:03,918:INFO:Creating metrics dataframe
2024-04-24 11:28:03,922:INFO:Uploading results into container
2024-04-24 11:28:03,924:INFO:Uploading model into container now
2024-04-24 11:28:03,924:INFO:_master_model_container: 2
2024-04-24 11:28:03,925:INFO:_display_container: 2
2024-04-24 11:28:03,925:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best')
2024-04-24 11:28:03,925:INFO:create_model() successfully completed......................................
2024-04-24 11:28:04,095:INFO:SubProcess create_model() end ==================================
2024-04-24 11:28:04,096:INFO:Creating metrics dataframe
2024-04-24 11:28:04,109:INFO:Initializing create_model()
2024-04-24 11:28:04,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:28:04,110:INFO:Checking exceptions
2024-04-24 11:28:04,111:INFO:Importing libraries
2024-04-24 11:28:04,111:INFO:Copying training dataset
2024-04-24 11:28:04,115:INFO:Defining folds
2024-04-24 11:28:04,115:INFO:Declaring metric variables
2024-04-24 11:28:04,115:INFO:Importing untrained model
2024-04-24 11:28:04,115:INFO:Declaring custom model
2024-04-24 11:28:04,115:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:28:04,116:INFO:Cross validation set to False
2024-04-24 11:28:04,116:INFO:Fitting Model
2024-04-24 11:28:04,169:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best')
2024-04-24 11:28:04,169:INFO:create_model() successfully completed......................................
2024-04-24 11:28:04,332:INFO:Initializing create_model()
2024-04-24 11:28:04,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:28:04,333:INFO:Checking exceptions
2024-04-24 11:28:04,334:INFO:Importing libraries
2024-04-24 11:28:04,334:INFO:Copying training dataset
2024-04-24 11:28:04,339:INFO:Defining folds
2024-04-24 11:28:04,339:INFO:Declaring metric variables
2024-04-24 11:28:04,339:INFO:Importing untrained model
2024-04-24 11:28:04,340:INFO:Declaring custom model
2024-04-24 11:28:04,340:INFO:Logistic Regression Imported successfully
2024-04-24 11:28:04,340:INFO:Cross validation set to False
2024-04-24 11:28:04,341:INFO:Fitting Model
2024-04-24 11:28:04,359:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 11:28:04,359:INFO:create_model() successfully completed......................................
2024-04-24 11:28:04,529:INFO:_master_model_container: 2
2024-04-24 11:28:04,529:INFO:_display_container: 2
2024-04-24 11:28:04,530:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 11:28:04,530:INFO:compare_models() successfully completed......................................
2024-04-24 11:28:04,531:INFO:Initializing evaluate_model()
2024-04-24 11:28:04,531:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 11:28:04,553:INFO:Initializing plot_model()
2024-04-24 11:28:04,553:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:28:04,554:INFO:Checking exceptions
2024-04-24 11:28:04,556:INFO:Preloading libraries
2024-04-24 11:28:04,558:INFO:Copying training dataset
2024-04-24 11:28:04,558:INFO:Plot type: pipeline
2024-04-24 11:28:04,674:INFO:Visual Rendered Successfully
2024-04-24 11:28:04,833:INFO:plot_model() successfully completed......................................
2024-04-24 11:28:04,836:INFO:Initializing predict_model()
2024-04-24 11:28:04,836:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B96B810B80>)
2024-04-24 11:28:04,836:INFO:Checking exceptions
2024-04-24 11:28:04,836:INFO:Preloading libraries
2024-04-24 11:28:05,568:INFO:Initializing plot_model()
2024-04-24 11:28:05,568:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:28:05,569:INFO:Checking exceptions
2024-04-24 11:28:05,573:INFO:Preloading libraries
2024-04-24 11:28:05,574:INFO:Copying training dataset
2024-04-24 11:28:05,574:INFO:Plot type: confusion_matrix
2024-04-24 11:28:05,635:INFO:Fitting Model
2024-04-24 11:28:05,635:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:28:05,636:INFO:Scoring test/hold-out set
2024-04-24 11:28:05,701:INFO:Visual Rendered Successfully
2024-04-24 11:28:05,866:INFO:plot_model() successfully completed......................................
2024-04-24 11:28:05,866:INFO:Initializing plot_model()
2024-04-24 11:28:05,866:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:28:05,866:INFO:Checking exceptions
2024-04-24 11:28:05,871:INFO:Preloading libraries
2024-04-24 11:28:05,871:INFO:Copying training dataset
2024-04-24 11:28:05,871:INFO:Plot type: auc
2024-04-24 11:28:05,927:INFO:Fitting Model
2024-04-24 11:28:05,927:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:28:05,928:INFO:Scoring test/hold-out set
2024-04-24 11:28:06,050:INFO:Visual Rendered Successfully
2024-04-24 11:28:06,213:INFO:plot_model() successfully completed......................................
2024-04-24 11:28:06,214:INFO:Initializing predict_model()
2024-04-24 11:28:06,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B96ACD2AF0>)
2024-04-24 11:28:06,214:INFO:Checking exceptions
2024-04-24 11:28:06,214:INFO:Preloading libraries
2024-04-24 11:28:07,075:INFO:Initializing plot_model()
2024-04-24 11:28:07,075:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:28:07,075:INFO:Checking exceptions
2024-04-24 11:28:07,079:INFO:Preloading libraries
2024-04-24 11:28:07,079:INFO:Copying training dataset
2024-04-24 11:28:07,079:INFO:Plot type: confusion_matrix
2024-04-24 11:28:07,132:INFO:Fitting Model
2024-04-24 11:28:07,132:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 11:28:07,133:INFO:Scoring test/hold-out set
2024-04-24 11:28:07,192:INFO:Visual Rendered Successfully
2024-04-24 11:28:07,362:INFO:plot_model() successfully completed......................................
2024-04-24 11:28:07,363:INFO:Initializing plot_model()
2024-04-24 11:28:07,363:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7201, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:28:07,363:INFO:Checking exceptions
2024-04-24 11:28:07,368:INFO:Preloading libraries
2024-04-24 11:28:07,369:INFO:Copying training dataset
2024-04-24 11:28:07,369:INFO:Plot type: auc
2024-04-24 11:28:07,437:INFO:Fitting Model
2024-04-24 11:28:07,437:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 11:28:07,438:INFO:Scoring test/hold-out set
2024-04-24 11:28:07,558:INFO:Visual Rendered Successfully
2024-04-24 11:28:07,711:INFO:plot_model() successfully completed......................................
2024-04-24 11:28:07,711:INFO:Initializing tune_model()
2024-04-24 11:28:07,711:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>)
2024-04-24 11:28:07,712:INFO:Checking exceptions
2024-04-24 11:28:07,724:INFO:Copying training dataset
2024-04-24 11:28:07,727:INFO:Checking base model
2024-04-24 11:28:07,727:INFO:Base model : Decision Tree Classifier
2024-04-24 11:28:07,730:INFO:Declaring metric variables
2024-04-24 11:28:07,733:INFO:Defining Hyperparameters
2024-04-24 11:28:07,895:INFO:Tuning with n_jobs=-1
2024-04-24 11:28:07,895:INFO:Initializing RandomizedSearchCV
2024-04-24 11:28:08,111:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy'}
2024-04-24 11:28:08,111:INFO:Hyperparameter search completed
2024-04-24 11:28:08,111:INFO:SubProcess create_model() called ==================================
2024-04-24 11:28:08,112:INFO:Initializing create_model()
2024-04-24 11:28:08,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B9617D2700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 4, 'criterion': 'entropy'})
2024-04-24 11:28:08,112:INFO:Checking exceptions
2024-04-24 11:28:08,112:INFO:Importing libraries
2024-04-24 11:28:08,112:INFO:Copying training dataset
2024-04-24 11:28:08,117:INFO:Defining folds
2024-04-24 11:28:08,117:INFO:Declaring metric variables
2024-04-24 11:28:08,121:INFO:Importing untrained model
2024-04-24 11:28:08,121:INFO:Declaring custom model
2024-04-24 11:28:08,125:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:28:08,131:INFO:Starting cross validation
2024-04-24 11:28:08,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:28:08,202:INFO:Calculating mean and std
2024-04-24 11:28:08,203:INFO:Creating metrics dataframe
2024-04-24 11:28:08,207:INFO:Finalizing model
2024-04-24 11:28:08,226:INFO:Uploading results into container
2024-04-24 11:28:08,227:INFO:Uploading model into container now
2024-04-24 11:28:08,227:INFO:_master_model_container: 3
2024-04-24 11:28:08,227:INFO:_display_container: 5
2024-04-24 11:28:08,228:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=2,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best')
2024-04-24 11:28:08,228:INFO:create_model() successfully completed......................................
2024-04-24 11:28:08,388:INFO:SubProcess create_model() end ==================================
2024-04-24 11:28:08,388:INFO:choose_better activated
2024-04-24 11:28:08,391:INFO:SubProcess create_model() called ==================================
2024-04-24 11:28:08,392:INFO:Initializing create_model()
2024-04-24 11:28:08,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:28:08,392:INFO:Checking exceptions
2024-04-24 11:28:08,393:INFO:Importing libraries
2024-04-24 11:28:08,393:INFO:Copying training dataset
2024-04-24 11:28:08,397:INFO:Defining folds
2024-04-24 11:28:08,397:INFO:Declaring metric variables
2024-04-24 11:28:08,397:INFO:Importing untrained model
2024-04-24 11:28:08,397:INFO:Declaring custom model
2024-04-24 11:28:08,398:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:28:08,398:INFO:Starting cross validation
2024-04-24 11:28:08,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:28:08,544:INFO:Calculating mean and std
2024-04-24 11:28:08,545:INFO:Creating metrics dataframe
2024-04-24 11:28:08,546:INFO:Finalizing model
2024-04-24 11:28:08,596:INFO:Uploading results into container
2024-04-24 11:28:08,597:INFO:Uploading model into container now
2024-04-24 11:28:08,597:INFO:_master_model_container: 4
2024-04-24 11:28:08,597:INFO:_display_container: 6
2024-04-24 11:28:08,597:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best')
2024-04-24 11:28:08,597:INFO:create_model() successfully completed......................................
2024-04-24 11:28:08,760:INFO:SubProcess create_model() end ==================================
2024-04-24 11:28:08,760:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best') result for F1 is 0.5479
2024-04-24 11:28:08,761:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=2,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best') result for F1 is 0.452
2024-04-24 11:28:08,761:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best') is best model
2024-04-24 11:28:08,761:INFO:choose_better completed
2024-04-24 11:28:08,761:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 11:28:08,770:INFO:_master_model_container: 4
2024-04-24 11:28:08,771:INFO:_display_container: 5
2024-04-24 11:28:08,771:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best')
2024-04-24 11:28:08,771:INFO:tune_model() successfully completed......................................
2024-04-24 11:28:08,932:INFO:Initializing predict_model()
2024-04-24 11:28:08,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B96135EC10>)
2024-04-24 11:28:08,932:INFO:Checking exceptions
2024-04-24 11:28:08,932:INFO:Preloading libraries
2024-04-24 11:28:09,173:INFO:Initializing finalize_model()
2024-04-24 11:28:09,174:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 11:28:09,174:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best')
2024-04-24 11:28:09,177:INFO:Initializing create_model()
2024-04-24 11:28:09,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:28:09,177:INFO:Checking exceptions
2024-04-24 11:28:09,178:INFO:Importing libraries
2024-04-24 11:28:09,178:INFO:Copying training dataset
2024-04-24 11:28:09,178:INFO:Defining folds
2024-04-24 11:28:09,178:INFO:Declaring metric variables
2024-04-24 11:28:09,178:INFO:Importing untrained model
2024-04-24 11:28:09,178:INFO:Declaring custom model
2024-04-24 11:28:09,179:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:28:09,179:INFO:Cross validation set to False
2024-04-24 11:28:09,179:INFO:Fitting Model
2024-04-24 11:28:09,245:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7201, splitter='best'))],
         verbose=False)
2024-04-24 11:28:09,245:INFO:create_model() successfully completed......................................
2024-04-24 11:28:09,396:INFO:_master_model_container: 4
2024-04-24 11:28:09,396:INFO:_display_container: 6
2024-04-24 11:28:09,400:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7201, splitter='best'))],
         verbose=False)
2024-04-24 11:28:09,400:INFO:finalize_model() successfully completed......................................
2024-04-24 11:28:09,558:INFO:Initializing save_model()
2024-04-24 11:28:09,558:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7201, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 11:28:09,558:INFO:Adding model into prep_pipe
2024-04-24 11:28:09,558:WARNING:Only Model saved as it was a pipeline.
2024-04-24 11:28:09,562:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 11:28:09,566:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7201, splitter='best'))],
         verbose=False)
2024-04-24 11:28:09,566:INFO:save_model() successfully completed......................................
2024-04-24 11:28:09,721:INFO:Initializing load_model()
2024-04-24 11:28:09,721:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 11:28:09,761:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 11:28:13,606:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\554024680.py:188: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 11:31:25,596:INFO:Initializing plot_model()
2024-04-24 11:31:25,597:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:31:25,597:INFO:Checking exceptions
2024-04-24 11:31:25,599:INFO:Preloading libraries
2024-04-24 11:31:25,600:INFO:Copying training dataset
2024-04-24 11:31:25,600:INFO:Plot type: auc
2024-04-24 11:31:25,647:INFO:Fitting Model
2024-04-24 11:31:25,647:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:31:25,648:INFO:Scoring test/hold-out set
2024-04-24 11:31:25,750:INFO:Visual Rendered Successfully
2024-04-24 11:31:25,911:INFO:plot_model() successfully completed......................................
2024-04-24 11:31:44,711:INFO:Initializing plot_model()
2024-04-24 11:31:44,711:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:31:44,711:INFO:Checking exceptions
2024-04-24 11:31:44,713:INFO:Preloading libraries
2024-04-24 11:31:44,714:INFO:Copying training dataset
2024-04-24 11:31:44,714:INFO:Plot type: pipeline
2024-04-24 11:31:44,772:INFO:Visual Rendered Successfully
2024-04-24 11:31:44,939:INFO:plot_model() successfully completed......................................
2024-04-24 11:32:03,931:INFO:Initializing plot_model()
2024-04-24 11:32:03,932:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:32:03,932:INFO:Checking exceptions
2024-04-24 11:32:03,934:INFO:Preloading libraries
2024-04-24 11:32:03,934:INFO:Copying training dataset
2024-04-24 11:32:03,934:INFO:Plot type: feature
2024-04-24 11:32:03,935:WARNING:No coef_ found. Trying feature_importances_
2024-04-24 11:32:04,033:INFO:Visual Rendered Successfully
2024-04-24 11:32:04,182:INFO:plot_model() successfully completed......................................
2024-04-24 11:35:15,050:INFO:Initializing plot_model()
2024-04-24 11:35:15,050:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:35:15,051:INFO:Checking exceptions
2024-04-24 11:35:15,053:INFO:Preloading libraries
2024-04-24 11:35:15,054:INFO:Copying training dataset
2024-04-24 11:35:15,054:INFO:Plot type: feature_all
2024-04-24 11:35:15,068:WARNING:No coef_ found. Trying feature_importances_
2024-04-24 11:35:15,124:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2024-04-24 11:35:15,124:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2024-04-24 11:35:15,125:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\matplotlib\patches.py:743: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2024-04-24 11:35:15,127:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\matplotlib\transforms.py:2039: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2024-04-24 11:35:15,147:INFO:Visual Rendered Successfully
2024-04-24 11:35:15,301:INFO:plot_model() successfully completed......................................
2024-04-24 11:36:03,298:INFO:Initializing plot_model()
2024-04-24 11:36:03,298:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:36:03,298:INFO:Checking exceptions
2024-04-24 11:36:03,300:INFO:Preloading libraries
2024-04-24 11:36:03,301:INFO:Copying training dataset
2024-04-24 11:36:03,301:INFO:Plot type: parameter
2024-04-24 11:36:03,303:INFO:Visual Rendered Successfully
2024-04-24 11:36:03,445:INFO:plot_model() successfully completed......................................
2024-04-24 11:36:31,898:INFO:Initializing plot_model()
2024-04-24 11:36:31,898:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:36:31,898:INFO:Checking exceptions
2024-04-24 11:36:31,900:INFO:Preloading libraries
2024-04-24 11:36:31,901:INFO:Copying training dataset
2024-04-24 11:36:31,901:INFO:Plot type: learning
2024-04-24 11:36:31,968:INFO:Fitting Model
2024-04-24 11:36:35,267:INFO:Visual Rendered Successfully
2024-04-24 11:36:35,414:INFO:plot_model() successfully completed......................................
2024-04-24 11:39:58,145:INFO:Initializing plot_model()
2024-04-24 11:39:58,145:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7201, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DE360D0>, system=True)
2024-04-24 11:39:58,145:INFO:Checking exceptions
2024-04-24 11:39:58,147:INFO:Preloading libraries
2024-04-24 11:39:58,148:INFO:Copying training dataset
2024-04-24 11:39:58,148:INFO:Plot type: confusion_matrix
2024-04-24 11:39:58,199:INFO:Fitting Model
2024-04-24 11:39:58,200:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:39:58,200:INFO:Scoring test/hold-out set
2024-04-24 11:39:58,259:INFO:Visual Rendered Successfully
2024-04-24 11:39:58,421:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:04,422:INFO:PyCaret ClassificationExperiment
2024-04-24 11:42:04,422:INFO:Logging name: clf-default-name
2024-04-24 11:42:04,422:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 11:42:04,422:INFO:version 3.2.0
2024-04-24 11:42:04,422:INFO:Initializing setup()
2024-04-24 11:42:04,422:INFO:self.USI: b3d0
2024-04-24 11:42:04,422:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 11:42:04,422:INFO:Checking environment
2024-04-24 11:42:04,422:INFO:python_version: 3.9.19
2024-04-24 11:42:04,422:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 11:42:04,422:INFO:machine: AMD64
2024-04-24 11:42:04,422:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 11:42:04,422:INFO:Memory: svmem(total=33897811968, available=10299920384, percent=69.6, used=23597891584, free=10299920384)
2024-04-24 11:42:04,422:INFO:Physical Core: 14
2024-04-24 11:42:04,422:INFO:Logical Core: 20
2024-04-24 11:42:04,422:INFO:Checking libraries
2024-04-24 11:42:04,422:INFO:System:
2024-04-24 11:42:04,423:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 11:42:04,423:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 11:42:04,423:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 11:42:04,423:INFO:PyCaret required dependencies:
2024-04-24 11:42:04,423:INFO:                 pip: 23.3.1
2024-04-24 11:42:04,423:INFO:          setuptools: 68.2.2
2024-04-24 11:42:04,423:INFO:             pycaret: 3.2.0
2024-04-24 11:42:04,423:INFO:             IPython: 8.15.0
2024-04-24 11:42:04,423:INFO:          ipywidgets: 8.1.2
2024-04-24 11:42:04,423:INFO:                tqdm: 4.65.0
2024-04-24 11:42:04,423:INFO:               numpy: 1.25.2
2024-04-24 11:42:04,423:INFO:              pandas: 1.5.3
2024-04-24 11:42:04,423:INFO:              jinja2: 3.1.3
2024-04-24 11:42:04,423:INFO:               scipy: 1.11.4
2024-04-24 11:42:04,423:INFO:              joblib: 1.2.0
2024-04-24 11:42:04,423:INFO:             sklearn: 1.2.2
2024-04-24 11:42:04,423:INFO:                pyod: 1.0.9
2024-04-24 11:42:04,423:INFO:            imblearn: 0.11.0
2024-04-24 11:42:04,423:INFO:   category_encoders: 2.6.3
2024-04-24 11:42:04,423:INFO:            lightgbm: 4.1.0
2024-04-24 11:42:04,423:INFO:               numba: 0.59.1
2024-04-24 11:42:04,423:INFO:            requests: 2.31.0
2024-04-24 11:42:04,423:INFO:          matplotlib: 3.8.4
2024-04-24 11:42:04,423:INFO:          scikitplot: 0.3.7
2024-04-24 11:42:04,423:INFO:         yellowbrick: 1.5
2024-04-24 11:42:04,423:INFO:              plotly: 5.19.0
2024-04-24 11:42:04,423:INFO:    plotly-resampler: Not installed
2024-04-24 11:42:04,423:INFO:             kaleido: 0.2.1
2024-04-24 11:42:04,423:INFO:           schemdraw: 0.15
2024-04-24 11:42:04,423:INFO:         statsmodels: 0.14.0
2024-04-24 11:42:04,423:INFO:              sktime: 0.21.1
2024-04-24 11:42:04,423:INFO:               tbats: 1.1.3
2024-04-24 11:42:04,423:INFO:            pmdarima: 2.0.4
2024-04-24 11:42:04,423:INFO:              psutil: 5.9.0
2024-04-24 11:42:04,423:INFO:          markupsafe: 2.1.3
2024-04-24 11:42:04,423:INFO:             pickle5: Not installed
2024-04-24 11:42:04,423:INFO:         cloudpickle: 2.2.1
2024-04-24 11:42:04,423:INFO:         deprecation: 2.1.0
2024-04-24 11:42:04,423:INFO:              xxhash: 2.0.2
2024-04-24 11:42:04,423:INFO:           wurlitzer: 3.0.3
2024-04-24 11:42:04,423:INFO:PyCaret optional dependencies:
2024-04-24 11:42:04,423:INFO:                shap: Not installed
2024-04-24 11:42:04,423:INFO:           interpret: Not installed
2024-04-24 11:42:04,423:INFO:                umap: 0.5.3
2024-04-24 11:42:04,423:INFO:     ydata_profiling: Not installed
2024-04-24 11:42:04,423:INFO:  explainerdashboard: Not installed
2024-04-24 11:42:04,424:INFO:             autoviz: Not installed
2024-04-24 11:42:04,424:INFO:           fairlearn: Not installed
2024-04-24 11:42:04,424:INFO:          deepchecks: Not installed
2024-04-24 11:42:04,424:INFO:             xgboost: 1.7.6
2024-04-24 11:42:04,424:INFO:            catboost: 1.2.3
2024-04-24 11:42:04,424:INFO:              kmodes: 0.12.2
2024-04-24 11:42:04,424:INFO:             mlxtend: 0.23.1
2024-04-24 11:42:04,424:INFO:       statsforecast: Not installed
2024-04-24 11:42:04,424:INFO:        tune_sklearn: Not installed
2024-04-24 11:42:04,424:INFO:                 ray: Not installed
2024-04-24 11:42:04,424:INFO:            hyperopt: Not installed
2024-04-24 11:42:04,424:INFO:              optuna: Not installed
2024-04-24 11:42:04,424:INFO:               skopt: Not installed
2024-04-24 11:42:04,424:INFO:              mlflow: 2.9.2
2024-04-24 11:42:04,424:INFO:              gradio: Not installed
2024-04-24 11:42:04,424:INFO:             fastapi: Not installed
2024-04-24 11:42:04,424:INFO:             uvicorn: Not installed
2024-04-24 11:42:04,424:INFO:              m2cgen: Not installed
2024-04-24 11:42:04,424:INFO:           evidently: Not installed
2024-04-24 11:42:04,424:INFO:               fugue: Not installed
2024-04-24 11:42:04,424:INFO:           streamlit: 1.32.0
2024-04-24 11:42:04,424:INFO:             prophet: Not installed
2024-04-24 11:42:04,424:INFO:None
2024-04-24 11:42:04,424:INFO:Set up data.
2024-04-24 11:42:04,428:INFO:Set up folding strategy.
2024-04-24 11:42:04,428:INFO:Set up train/test split.
2024-04-24 11:42:04,428:INFO:Set up data.
2024-04-24 11:42:04,431:INFO:Set up index.
2024-04-24 11:42:04,432:INFO:Assigning column types.
2024-04-24 11:42:04,434:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 11:42:04,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:42:04,460:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:42:04,477:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,478:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,503:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:42:04,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:42:04,520:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,521:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,522:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 11:42:04,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:42:04,563:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,565:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,594:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:42:04,609:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,610:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,611:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 11:42:04,651:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,653:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,698:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,700:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,701:INFO:Preparing preprocessing pipeline...
2024-04-24 11:42:04,702:INFO:Set up simple imputation.
2024-04-24 11:42:04,702:INFO:Set up feature normalization.
2024-04-24 11:42:04,722:INFO:Finished creating preprocessing pipeline.
2024-04-24 11:42:04,725:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 11:42:04,725:INFO:Creating final display dataframe.
2024-04-24 11:42:04,778:INFO:Setup _display_container:                     Description             Value
0                    Session id              8475
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b3d0
2024-04-24 11:42:04,823:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,824:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,867:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:42:04,868:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:42:04,869:INFO:setup() successfully completed in 0.45s...............
2024-04-24 11:42:04,869:INFO:Initializing compare_models()
2024-04-24 11:42:04,869:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 11:42:04,869:INFO:Checking exceptions
2024-04-24 11:42:04,872:INFO:Preparing display monitor
2024-04-24 11:42:04,887:INFO:Initializing Logistic Regression
2024-04-24 11:42:04,887:INFO:Total runtime is 0.0 minutes
2024-04-24 11:42:04,890:INFO:SubProcess create_model() called ==================================
2024-04-24 11:42:04,890:INFO:Initializing create_model()
2024-04-24 11:42:04,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B9672804F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:42:04,890:INFO:Checking exceptions
2024-04-24 11:42:04,890:INFO:Importing libraries
2024-04-24 11:42:04,890:INFO:Copying training dataset
2024-04-24 11:42:04,893:INFO:Defining folds
2024-04-24 11:42:04,893:INFO:Declaring metric variables
2024-04-24 11:42:04,896:INFO:Importing untrained model
2024-04-24 11:42:04,899:INFO:Logistic Regression Imported successfully
2024-04-24 11:42:04,903:INFO:Starting cross validation
2024-04-24 11:42:04,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:42:08,294:INFO:Calculating mean and std
2024-04-24 11:42:08,296:INFO:Creating metrics dataframe
2024-04-24 11:42:08,301:INFO:Uploading results into container
2024-04-24 11:42:08,302:INFO:Uploading model into container now
2024-04-24 11:42:08,303:INFO:_master_model_container: 1
2024-04-24 11:42:08,303:INFO:_display_container: 2
2024-04-24 11:42:08,304:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 11:42:08,304:INFO:create_model() successfully completed......................................
2024-04-24 11:42:08,485:INFO:SubProcess create_model() end ==================================
2024-04-24 11:42:08,485:INFO:Creating metrics dataframe
2024-04-24 11:42:08,493:INFO:Initializing Decision Tree Classifier
2024-04-24 11:42:08,493:INFO:Total runtime is 0.06010510524113973 minutes
2024-04-24 11:42:08,495:INFO:SubProcess create_model() called ==================================
2024-04-24 11:42:08,496:INFO:Initializing create_model()
2024-04-24 11:42:08,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B9672804F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:42:08,496:INFO:Checking exceptions
2024-04-24 11:42:08,496:INFO:Importing libraries
2024-04-24 11:42:08,496:INFO:Copying training dataset
2024-04-24 11:42:08,501:INFO:Defining folds
2024-04-24 11:42:08,501:INFO:Declaring metric variables
2024-04-24 11:42:08,503:INFO:Importing untrained model
2024-04-24 11:42:08,506:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:42:08,510:INFO:Starting cross validation
2024-04-24 11:42:08,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:42:11,535:INFO:Calculating mean and std
2024-04-24 11:42:11,537:INFO:Creating metrics dataframe
2024-04-24 11:42:11,543:INFO:Uploading results into container
2024-04-24 11:42:11,544:INFO:Uploading model into container now
2024-04-24 11:42:11,544:INFO:_master_model_container: 2
2024-04-24 11:42:11,545:INFO:_display_container: 2
2024-04-24 11:42:11,545:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best')
2024-04-24 11:42:11,545:INFO:create_model() successfully completed......................................
2024-04-24 11:42:11,707:INFO:SubProcess create_model() end ==================================
2024-04-24 11:42:11,707:INFO:Creating metrics dataframe
2024-04-24 11:42:11,721:INFO:Initializing create_model()
2024-04-24 11:42:11,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:42:11,721:INFO:Checking exceptions
2024-04-24 11:42:11,723:INFO:Importing libraries
2024-04-24 11:42:11,723:INFO:Copying training dataset
2024-04-24 11:42:11,727:INFO:Defining folds
2024-04-24 11:42:11,727:INFO:Declaring metric variables
2024-04-24 11:42:11,727:INFO:Importing untrained model
2024-04-24 11:42:11,727:INFO:Declaring custom model
2024-04-24 11:42:11,727:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:42:11,728:INFO:Cross validation set to False
2024-04-24 11:42:11,728:INFO:Fitting Model
2024-04-24 11:42:11,778:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best')
2024-04-24 11:42:11,778:INFO:create_model() successfully completed......................................
2024-04-24 11:42:11,932:INFO:Initializing create_model()
2024-04-24 11:42:11,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:42:11,932:INFO:Checking exceptions
2024-04-24 11:42:11,933:INFO:Importing libraries
2024-04-24 11:42:11,933:INFO:Copying training dataset
2024-04-24 11:42:11,938:INFO:Defining folds
2024-04-24 11:42:11,938:INFO:Declaring metric variables
2024-04-24 11:42:11,938:INFO:Importing untrained model
2024-04-24 11:42:11,938:INFO:Declaring custom model
2024-04-24 11:42:11,938:INFO:Logistic Regression Imported successfully
2024-04-24 11:42:11,939:INFO:Cross validation set to False
2024-04-24 11:42:11,939:INFO:Fitting Model
2024-04-24 11:42:11,956:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 11:42:11,956:INFO:create_model() successfully completed......................................
2024-04-24 11:42:12,116:INFO:_master_model_container: 2
2024-04-24 11:42:12,116:INFO:_display_container: 2
2024-04-24 11:42:12,117:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 11:42:12,117:INFO:compare_models() successfully completed......................................
2024-04-24 11:42:12,117:INFO:Initializing predict_model()
2024-04-24 11:42:12,117:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B95E5DA790>)
2024-04-24 11:42:12,117:INFO:Checking exceptions
2024-04-24 11:42:12,117:INFO:Preloading libraries
2024-04-24 11:42:12,821:INFO:Initializing plot_model()
2024-04-24 11:42:12,821:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:42:12,821:INFO:Checking exceptions
2024-04-24 11:42:12,824:INFO:Preloading libraries
2024-04-24 11:42:12,825:INFO:Copying training dataset
2024-04-24 11:42:12,825:INFO:Plot type: confusion_matrix
2024-04-24 11:42:12,880:INFO:Fitting Model
2024-04-24 11:42:12,882:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:42:12,882:INFO:Scoring test/hold-out set
2024-04-24 11:42:12,947:INFO:Visual Rendered Successfully
2024-04-24 11:42:13,097:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:13,097:INFO:Initializing plot_model()
2024-04-24 11:42:13,098:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:42:13,098:INFO:Checking exceptions
2024-04-24 11:42:13,102:INFO:Preloading libraries
2024-04-24 11:42:13,102:INFO:Copying training dataset
2024-04-24 11:42:13,102:INFO:Plot type: auc
2024-04-24 11:42:13,163:INFO:Fitting Model
2024-04-24 11:42:13,164:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:42:13,164:INFO:Scoring test/hold-out set
2024-04-24 11:42:13,290:INFO:Visual Rendered Successfully
2024-04-24 11:42:13,442:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:13,442:INFO:Initializing evaluate_model()
2024-04-24 11:42:13,442:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 11:42:13,451:INFO:Initializing plot_model()
2024-04-24 11:42:13,451:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:42:13,451:INFO:Checking exceptions
2024-04-24 11:42:13,453:INFO:Preloading libraries
2024-04-24 11:42:13,453:INFO:Copying training dataset
2024-04-24 11:42:13,453:INFO:Plot type: pipeline
2024-04-24 11:42:13,508:INFO:Visual Rendered Successfully
2024-04-24 11:42:13,653:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:13,656:INFO:Initializing predict_model()
2024-04-24 11:42:13,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B967E2BA60>)
2024-04-24 11:42:13,656:INFO:Checking exceptions
2024-04-24 11:42:13,656:INFO:Preloading libraries
2024-04-24 11:42:14,497:INFO:Initializing plot_model()
2024-04-24 11:42:14,497:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:42:14,497:INFO:Checking exceptions
2024-04-24 11:42:14,500:INFO:Preloading libraries
2024-04-24 11:42:14,501:INFO:Copying training dataset
2024-04-24 11:42:14,501:INFO:Plot type: confusion_matrix
2024-04-24 11:42:14,554:INFO:Fitting Model
2024-04-24 11:42:14,554:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 11:42:14,554:INFO:Scoring test/hold-out set
2024-04-24 11:42:14,615:INFO:Visual Rendered Successfully
2024-04-24 11:42:14,818:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:14,819:INFO:Initializing plot_model()
2024-04-24 11:42:14,819:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:42:14,820:INFO:Checking exceptions
2024-04-24 11:42:14,825:INFO:Preloading libraries
2024-04-24 11:42:14,825:INFO:Copying training dataset
2024-04-24 11:42:14,825:INFO:Plot type: auc
2024-04-24 11:42:14,886:INFO:Fitting Model
2024-04-24 11:42:14,887:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 11:42:14,888:INFO:Scoring test/hold-out set
2024-04-24 11:42:15,001:INFO:Visual Rendered Successfully
2024-04-24 11:42:15,154:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:15,155:INFO:Initializing evaluate_model()
2024-04-24 11:42:15,155:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 11:42:15,163:INFO:Initializing plot_model()
2024-04-24 11:42:15,163:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:42:15,163:INFO:Checking exceptions
2024-04-24 11:42:15,164:INFO:Preloading libraries
2024-04-24 11:42:15,164:INFO:Copying training dataset
2024-04-24 11:42:15,164:INFO:Plot type: pipeline
2024-04-24 11:42:15,214:INFO:Visual Rendered Successfully
2024-04-24 11:42:15,369:INFO:plot_model() successfully completed......................................
2024-04-24 11:42:15,375:INFO:Initializing tune_model()
2024-04-24 11:42:15,375:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>)
2024-04-24 11:42:15,375:INFO:Checking exceptions
2024-04-24 11:42:15,390:INFO:Copying training dataset
2024-04-24 11:42:15,394:INFO:Checking base model
2024-04-24 11:42:15,394:INFO:Base model : Decision Tree Classifier
2024-04-24 11:42:15,397:INFO:Declaring metric variables
2024-04-24 11:42:15,400:INFO:Defining Hyperparameters
2024-04-24 11:42:15,588:INFO:Tuning with n_jobs=-1
2024-04-24 11:42:15,588:INFO:Initializing RandomizedSearchCV
2024-04-24 11:42:15,736:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy'}
2024-04-24 11:42:15,736:INFO:Hyperparameter search completed
2024-04-24 11:42:15,736:INFO:SubProcess create_model() called ==================================
2024-04-24 11:42:15,737:INFO:Initializing create_model()
2024-04-24 11:42:15,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B9642F1FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 5, 'criterion': 'entropy'})
2024-04-24 11:42:15,737:INFO:Checking exceptions
2024-04-24 11:42:15,737:INFO:Importing libraries
2024-04-24 11:42:15,737:INFO:Copying training dataset
2024-04-24 11:42:15,741:INFO:Defining folds
2024-04-24 11:42:15,741:INFO:Declaring metric variables
2024-04-24 11:42:15,744:INFO:Importing untrained model
2024-04-24 11:42:15,744:INFO:Declaring custom model
2024-04-24 11:42:15,747:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:42:15,751:INFO:Starting cross validation
2024-04-24 11:42:15,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:42:15,827:INFO:Calculating mean and std
2024-04-24 11:42:15,827:INFO:Creating metrics dataframe
2024-04-24 11:42:15,831:INFO:Finalizing model
2024-04-24 11:42:15,852:INFO:Uploading results into container
2024-04-24 11:42:15,852:INFO:Uploading model into container now
2024-04-24 11:42:15,854:INFO:_master_model_container: 3
2024-04-24 11:42:15,854:INFO:_display_container: 5
2024-04-24 11:42:15,854:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best')
2024-04-24 11:42:15,854:INFO:create_model() successfully completed......................................
2024-04-24 11:42:16,012:INFO:SubProcess create_model() end ==================================
2024-04-24 11:42:16,013:INFO:choose_better activated
2024-04-24 11:42:16,015:INFO:SubProcess create_model() called ==================================
2024-04-24 11:42:16,016:INFO:Initializing create_model()
2024-04-24 11:42:16,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:42:16,016:INFO:Checking exceptions
2024-04-24 11:42:16,017:INFO:Importing libraries
2024-04-24 11:42:16,017:INFO:Copying training dataset
2024-04-24 11:42:16,021:INFO:Defining folds
2024-04-24 11:42:16,021:INFO:Declaring metric variables
2024-04-24 11:42:16,021:INFO:Importing untrained model
2024-04-24 11:42:16,021:INFO:Declaring custom model
2024-04-24 11:42:16,022:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:42:16,022:INFO:Starting cross validation
2024-04-24 11:42:16,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 11:42:16,133:INFO:Calculating mean and std
2024-04-24 11:42:16,134:INFO:Creating metrics dataframe
2024-04-24 11:42:16,135:INFO:Finalizing model
2024-04-24 11:42:16,188:INFO:Uploading results into container
2024-04-24 11:42:16,189:INFO:Uploading model into container now
2024-04-24 11:42:16,189:INFO:_master_model_container: 4
2024-04-24 11:42:16,189:INFO:_display_container: 6
2024-04-24 11:42:16,190:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best')
2024-04-24 11:42:16,190:INFO:create_model() successfully completed......................................
2024-04-24 11:42:16,345:INFO:SubProcess create_model() end ==================================
2024-04-24 11:42:16,346:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best') result for F1 is 0.5467
2024-04-24 11:42:16,346:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best') result for F1 is 0.4672
2024-04-24 11:42:16,346:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best') is best model
2024-04-24 11:42:16,346:INFO:choose_better completed
2024-04-24 11:42:16,346:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 11:42:16,353:INFO:_master_model_container: 4
2024-04-24 11:42:16,353:INFO:_display_container: 5
2024-04-24 11:42:16,353:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best')
2024-04-24 11:42:16,353:INFO:tune_model() successfully completed......................................
2024-04-24 11:42:16,546:INFO:Initializing predict_model()
2024-04-24 11:42:16,546:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B95E5DA700>)
2024-04-24 11:42:16,546:INFO:Checking exceptions
2024-04-24 11:42:16,546:INFO:Preloading libraries
2024-04-24 11:42:16,788:INFO:Initializing finalize_model()
2024-04-24 11:42:16,788:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 11:42:16,789:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best')
2024-04-24 11:42:16,792:INFO:Initializing create_model()
2024-04-24 11:42:16,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 11:42:16,792:INFO:Checking exceptions
2024-04-24 11:42:16,793:INFO:Importing libraries
2024-04-24 11:42:16,793:INFO:Copying training dataset
2024-04-24 11:42:16,793:INFO:Defining folds
2024-04-24 11:42:16,793:INFO:Declaring metric variables
2024-04-24 11:42:16,794:INFO:Importing untrained model
2024-04-24 11:42:16,794:INFO:Declaring custom model
2024-04-24 11:42:16,794:INFO:Decision Tree Classifier Imported successfully
2024-04-24 11:42:16,794:INFO:Cross validation set to False
2024-04-24 11:42:16,794:INFO:Fitting Model
2024-04-24 11:42:16,858:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8475, splitter='best'))],
         verbose=False)
2024-04-24 11:42:16,858:INFO:create_model() successfully completed......................................
2024-04-24 11:42:17,010:INFO:_master_model_container: 4
2024-04-24 11:42:17,010:INFO:_display_container: 6
2024-04-24 11:42:17,014:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8475, splitter='best'))],
         verbose=False)
2024-04-24 11:42:17,014:INFO:finalize_model() successfully completed......................................
2024-04-24 11:42:17,170:INFO:Initializing save_model()
2024-04-24 11:42:17,170:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8475, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 11:42:17,170:INFO:Adding model into prep_pipe
2024-04-24 11:42:17,170:WARNING:Only Model saved as it was a pipeline.
2024-04-24 11:42:17,173:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 11:42:17,177:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8475, splitter='best'))],
         verbose=False)
2024-04-24 11:42:17,178:INFO:save_model() successfully completed......................................
2024-04-24 11:42:17,320:INFO:Initializing load_model()
2024-04-24 11:42:17,320:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 11:42:17,357:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 11:42:21,276:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\49242193.py:192: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 11:44:13,997:INFO:Initializing plot_model()
2024-04-24 11:44:13,997:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:44:13,997:INFO:Checking exceptions
2024-04-24 11:44:14,000:INFO:Preloading libraries
2024-04-24 11:44:14,000:INFO:Copying training dataset
2024-04-24 11:44:14,000:INFO:Plot type: confusion_matrix
2024-04-24 11:44:14,047:INFO:Fitting Model
2024-04-24 11:44:14,048:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:44:14,048:INFO:Scoring test/hold-out set
2024-04-24 11:44:14,102:INFO:Visual Rendered Successfully
2024-04-24 11:44:14,261:INFO:plot_model() successfully completed......................................
2024-04-24 11:46:34,139:INFO:Initializing plot_model()
2024-04-24 11:46:34,139:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8475, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:46:34,139:INFO:Checking exceptions
2024-04-24 11:46:34,142:INFO:Preloading libraries
2024-04-24 11:46:34,142:INFO:Copying training dataset
2024-04-24 11:46:34,142:INFO:Plot type: confusion_matrix
2024-04-24 11:46:34,194:INFO:Fitting Model
2024-04-24 11:46:34,194:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 11:46:34,194:INFO:Scoring test/hold-out set
2024-04-24 11:46:34,254:INFO:Visual Rendered Successfully
2024-04-24 11:46:34,415:INFO:plot_model() successfully completed......................................
2024-04-24 11:46:39,652:INFO:Initializing plot_model()
2024-04-24 11:46:39,652:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8475, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95DD9C370>, system=True)
2024-04-24 11:46:39,652:INFO:Checking exceptions
2024-04-24 11:46:39,654:INFO:Preloading libraries
2024-04-24 11:46:39,655:INFO:Copying training dataset
2024-04-24 11:46:39,655:INFO:Plot type: auc
2024-04-24 11:46:39,708:INFO:Fitting Model
2024-04-24 11:46:39,709:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 11:46:39,709:INFO:Scoring test/hold-out set
2024-04-24 11:46:39,816:INFO:Visual Rendered Successfully
2024-04-24 11:46:39,965:INFO:plot_model() successfully completed......................................
2024-04-24 11:49:52,296:INFO:PyCaret ClassificationExperiment
2024-04-24 11:49:52,296:INFO:Logging name: clf-default-name
2024-04-24 11:49:52,296:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 11:49:52,296:INFO:version 3.2.0
2024-04-24 11:49:52,296:INFO:Initializing setup()
2024-04-24 11:49:52,296:INFO:self.USI: 5029
2024-04-24 11:49:52,296:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 11:49:52,296:INFO:Checking environment
2024-04-24 11:49:52,296:INFO:python_version: 3.9.19
2024-04-24 11:49:52,296:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 11:49:52,296:INFO:machine: AMD64
2024-04-24 11:49:52,296:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 11:49:52,297:INFO:Memory: svmem(total=33897811968, available=11028594688, percent=67.5, used=22869217280, free=11028594688)
2024-04-24 11:49:52,297:INFO:Physical Core: 14
2024-04-24 11:49:52,297:INFO:Logical Core: 20
2024-04-24 11:49:52,297:INFO:Checking libraries
2024-04-24 11:49:52,297:INFO:System:
2024-04-24 11:49:52,297:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 11:49:52,297:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 11:49:52,297:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 11:49:52,297:INFO:PyCaret required dependencies:
2024-04-24 11:49:52,297:INFO:                 pip: 23.3.1
2024-04-24 11:49:52,297:INFO:          setuptools: 68.2.2
2024-04-24 11:49:52,297:INFO:             pycaret: 3.2.0
2024-04-24 11:49:52,297:INFO:             IPython: 8.15.0
2024-04-24 11:49:52,297:INFO:          ipywidgets: 8.1.2
2024-04-24 11:49:52,297:INFO:                tqdm: 4.65.0
2024-04-24 11:49:52,297:INFO:               numpy: 1.25.2
2024-04-24 11:49:52,297:INFO:              pandas: 1.5.3
2024-04-24 11:49:52,297:INFO:              jinja2: 3.1.3
2024-04-24 11:49:52,297:INFO:               scipy: 1.11.4
2024-04-24 11:49:52,297:INFO:              joblib: 1.2.0
2024-04-24 11:49:52,297:INFO:             sklearn: 1.2.2
2024-04-24 11:49:52,297:INFO:                pyod: 1.0.9
2024-04-24 11:49:52,297:INFO:            imblearn: 0.11.0
2024-04-24 11:49:52,297:INFO:   category_encoders: 2.6.3
2024-04-24 11:49:52,297:INFO:            lightgbm: 4.1.0
2024-04-24 11:49:52,297:INFO:               numba: 0.59.1
2024-04-24 11:49:52,297:INFO:            requests: 2.31.0
2024-04-24 11:49:52,297:INFO:          matplotlib: 3.8.4
2024-04-24 11:49:52,297:INFO:          scikitplot: 0.3.7
2024-04-24 11:49:52,297:INFO:         yellowbrick: 1.5
2024-04-24 11:49:52,297:INFO:              plotly: 5.19.0
2024-04-24 11:49:52,297:INFO:    plotly-resampler: Not installed
2024-04-24 11:49:52,297:INFO:             kaleido: 0.2.1
2024-04-24 11:49:52,297:INFO:           schemdraw: 0.15
2024-04-24 11:49:52,297:INFO:         statsmodels: 0.14.0
2024-04-24 11:49:52,297:INFO:              sktime: 0.21.1
2024-04-24 11:49:52,297:INFO:               tbats: 1.1.3
2024-04-24 11:49:52,297:INFO:            pmdarima: 2.0.4
2024-04-24 11:49:52,297:INFO:              psutil: 5.9.0
2024-04-24 11:49:52,297:INFO:          markupsafe: 2.1.3
2024-04-24 11:49:52,297:INFO:             pickle5: Not installed
2024-04-24 11:49:52,297:INFO:         cloudpickle: 2.2.1
2024-04-24 11:49:52,297:INFO:         deprecation: 2.1.0
2024-04-24 11:49:52,297:INFO:              xxhash: 2.0.2
2024-04-24 11:49:52,297:INFO:           wurlitzer: 3.0.3
2024-04-24 11:49:52,297:INFO:PyCaret optional dependencies:
2024-04-24 11:49:52,298:INFO:                shap: Not installed
2024-04-24 11:49:52,298:INFO:           interpret: Not installed
2024-04-24 11:49:52,298:INFO:                umap: 0.5.3
2024-04-24 11:49:52,298:INFO:     ydata_profiling: Not installed
2024-04-24 11:49:52,298:INFO:  explainerdashboard: Not installed
2024-04-24 11:49:52,298:INFO:             autoviz: Not installed
2024-04-24 11:49:52,298:INFO:           fairlearn: Not installed
2024-04-24 11:49:52,298:INFO:          deepchecks: Not installed
2024-04-24 11:49:52,298:INFO:             xgboost: 1.7.6
2024-04-24 11:49:52,298:INFO:            catboost: 1.2.3
2024-04-24 11:49:52,298:INFO:              kmodes: 0.12.2
2024-04-24 11:49:52,298:INFO:             mlxtend: 0.23.1
2024-04-24 11:49:52,298:INFO:       statsforecast: Not installed
2024-04-24 11:49:52,298:INFO:        tune_sklearn: Not installed
2024-04-24 11:49:52,298:INFO:                 ray: Not installed
2024-04-24 11:49:52,298:INFO:            hyperopt: Not installed
2024-04-24 11:49:52,298:INFO:              optuna: Not installed
2024-04-24 11:49:52,298:INFO:               skopt: Not installed
2024-04-24 11:49:52,298:INFO:              mlflow: 2.9.2
2024-04-24 11:49:52,298:INFO:              gradio: Not installed
2024-04-24 11:49:52,298:INFO:             fastapi: Not installed
2024-04-24 11:49:52,298:INFO:             uvicorn: Not installed
2024-04-24 11:49:52,298:INFO:              m2cgen: Not installed
2024-04-24 11:49:52,298:INFO:           evidently: Not installed
2024-04-24 11:49:52,298:INFO:               fugue: Not installed
2024-04-24 11:49:52,298:INFO:           streamlit: 1.32.0
2024-04-24 11:49:52,298:INFO:             prophet: Not installed
2024-04-24 11:49:52,298:INFO:None
2024-04-24 11:49:52,298:INFO:Set up data.
2024-04-24 11:49:52,302:INFO:Set up folding strategy.
2024-04-24 11:49:52,303:INFO:Set up train/test split.
2024-04-24 11:49:52,303:INFO:Set up data.
2024-04-24 11:49:52,305:INFO:Set up index.
2024-04-24 11:49:52,306:INFO:Assigning column types.
2024-04-24 11:49:52,309:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 11:49:52,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:49:52,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:49:52,350:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,352:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,376:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:49:52,377:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:49:52,393:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,394:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,395:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 11:49:52,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:49:52,435:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,437:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:49:52,478:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,479:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,480:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 11:49:52,519:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,521:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,562:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,564:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,565:INFO:Preparing preprocessing pipeline...
2024-04-24 11:49:52,566:INFO:Set up simple imputation.
2024-04-24 11:49:52,566:INFO:Set up feature normalization.
2024-04-24 11:49:52,584:INFO:Finished creating preprocessing pipeline.
2024-04-24 11:49:52,586:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 11:49:52,586:INFO:Creating final display dataframe.
2024-04-24 11:49:52,643:INFO:Setup _display_container:                     Description             Value
0                    Session id              2081
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5029
2024-04-24 11:49:52,689:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,691:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,734:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:49:52,736:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:49:52,737:INFO:setup() successfully completed in 0.44s...............
2024-04-24 11:49:52,740:INFO:Initializing predict_model()
2024-04-24 11:49:52,740:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B95C9DF3A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8475, splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B961B700D0>)
2024-04-24 11:49:52,741:INFO:Checking exceptions
2024-04-24 11:49:52,741:INFO:Preloading libraries
2024-04-24 11:55:55,454:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\3716323785.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 11:55:55,478:INFO:PyCaret ClassificationExperiment
2024-04-24 11:55:55,478:INFO:Logging name: clf-default-name
2024-04-24 11:55:55,478:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 11:55:55,478:INFO:version 3.2.0
2024-04-24 11:55:55,478:INFO:Initializing setup()
2024-04-24 11:55:55,478:INFO:self.USI: e2a8
2024-04-24 11:55:55,478:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'pipeline', 'log_plots_param', 'fold_generator', 'fix_imbalance', 'idx', 'y', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'X', 'exp_name_log', 'seed', 'is_multiclass', '_available_plots', 'html_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X_train', 'data', 'y_test', 'USI', '_ml_usecase', 'logging_param', 'exp_id'}
2024-04-24 11:55:55,478:INFO:Checking environment
2024-04-24 11:55:55,478:INFO:python_version: 3.9.19
2024-04-24 11:55:55,478:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 11:55:55,478:INFO:machine: AMD64
2024-04-24 11:55:55,478:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 11:55:55,478:INFO:Memory: svmem(total=33897811968, available=11585044480, percent=65.8, used=22312767488, free=11585044480)
2024-04-24 11:55:55,478:INFO:Physical Core: 14
2024-04-24 11:55:55,478:INFO:Logical Core: 20
2024-04-24 11:55:55,478:INFO:Checking libraries
2024-04-24 11:55:55,478:INFO:System:
2024-04-24 11:55:55,478:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 11:55:55,478:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 11:55:55,478:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 11:55:55,478:INFO:PyCaret required dependencies:
2024-04-24 11:55:55,478:INFO:                 pip: 23.3.1
2024-04-24 11:55:55,478:INFO:          setuptools: 68.2.2
2024-04-24 11:55:55,478:INFO:             pycaret: 3.2.0
2024-04-24 11:55:55,478:INFO:             IPython: 8.15.0
2024-04-24 11:55:55,478:INFO:          ipywidgets: 8.1.2
2024-04-24 11:55:55,478:INFO:                tqdm: 4.65.0
2024-04-24 11:55:55,478:INFO:               numpy: 1.25.2
2024-04-24 11:55:55,478:INFO:              pandas: 1.5.3
2024-04-24 11:55:55,478:INFO:              jinja2: 3.1.3
2024-04-24 11:55:55,478:INFO:               scipy: 1.11.4
2024-04-24 11:55:55,478:INFO:              joblib: 1.2.0
2024-04-24 11:55:55,478:INFO:             sklearn: 1.2.2
2024-04-24 11:55:55,478:INFO:                pyod: 1.0.9
2024-04-24 11:55:55,478:INFO:            imblearn: 0.11.0
2024-04-24 11:55:55,478:INFO:   category_encoders: 2.6.3
2024-04-24 11:55:55,478:INFO:            lightgbm: 4.1.0
2024-04-24 11:55:55,478:INFO:               numba: 0.59.1
2024-04-24 11:55:55,479:INFO:            requests: 2.31.0
2024-04-24 11:55:55,479:INFO:          matplotlib: 3.8.4
2024-04-24 11:55:55,479:INFO:          scikitplot: 0.3.7
2024-04-24 11:55:55,479:INFO:         yellowbrick: 1.5
2024-04-24 11:55:55,479:INFO:              plotly: 5.19.0
2024-04-24 11:55:55,479:INFO:    plotly-resampler: Not installed
2024-04-24 11:55:55,479:INFO:             kaleido: 0.2.1
2024-04-24 11:55:55,479:INFO:           schemdraw: 0.15
2024-04-24 11:55:55,479:INFO:         statsmodels: 0.14.0
2024-04-24 11:55:55,479:INFO:              sktime: 0.21.1
2024-04-24 11:55:55,479:INFO:               tbats: 1.1.3
2024-04-24 11:55:55,479:INFO:            pmdarima: 2.0.4
2024-04-24 11:55:55,479:INFO:              psutil: 5.9.0
2024-04-24 11:55:55,479:INFO:          markupsafe: 2.1.3
2024-04-24 11:55:55,479:INFO:             pickle5: Not installed
2024-04-24 11:55:55,479:INFO:         cloudpickle: 2.2.1
2024-04-24 11:55:55,479:INFO:         deprecation: 2.1.0
2024-04-24 11:55:55,479:INFO:              xxhash: 2.0.2
2024-04-24 11:55:55,479:INFO:           wurlitzer: 3.0.3
2024-04-24 11:55:55,479:INFO:PyCaret optional dependencies:
2024-04-24 11:55:55,479:INFO:                shap: Not installed
2024-04-24 11:55:55,479:INFO:           interpret: Not installed
2024-04-24 11:55:55,479:INFO:                umap: 0.5.3
2024-04-24 11:55:55,479:INFO:     ydata_profiling: Not installed
2024-04-24 11:55:55,479:INFO:  explainerdashboard: Not installed
2024-04-24 11:55:55,479:INFO:             autoviz: Not installed
2024-04-24 11:55:55,479:INFO:           fairlearn: Not installed
2024-04-24 11:55:55,479:INFO:          deepchecks: Not installed
2024-04-24 11:55:55,479:INFO:             xgboost: 1.7.6
2024-04-24 11:55:55,479:INFO:            catboost: 1.2.3
2024-04-24 11:55:55,479:INFO:              kmodes: 0.12.2
2024-04-24 11:55:55,479:INFO:             mlxtend: 0.23.1
2024-04-24 11:55:55,479:INFO:       statsforecast: Not installed
2024-04-24 11:55:55,479:INFO:        tune_sklearn: Not installed
2024-04-24 11:55:55,479:INFO:                 ray: Not installed
2024-04-24 11:55:55,479:INFO:            hyperopt: Not installed
2024-04-24 11:55:55,479:INFO:              optuna: Not installed
2024-04-24 11:55:55,479:INFO:               skopt: Not installed
2024-04-24 11:55:55,479:INFO:              mlflow: 2.9.2
2024-04-24 11:55:55,479:INFO:              gradio: Not installed
2024-04-24 11:55:55,479:INFO:             fastapi: Not installed
2024-04-24 11:55:55,479:INFO:             uvicorn: Not installed
2024-04-24 11:55:55,479:INFO:              m2cgen: Not installed
2024-04-24 11:55:55,479:INFO:           evidently: Not installed
2024-04-24 11:55:55,479:INFO:               fugue: Not installed
2024-04-24 11:55:55,479:INFO:           streamlit: 1.32.0
2024-04-24 11:55:55,479:INFO:             prophet: Not installed
2024-04-24 11:55:55,479:INFO:None
2024-04-24 11:55:55,479:INFO:Set up data.
2024-04-24 11:55:55,483:INFO:Set up folding strategy.
2024-04-24 11:55:55,483:INFO:Set up train/test split.
2024-04-24 11:55:55,483:INFO:Set up data.
2024-04-24 11:55:55,486:INFO:Set up index.
2024-04-24 11:55:55,487:INFO:Assigning column types.
2024-04-24 11:55:55,490:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 11:55:55,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:55:55,514:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:55:55,530:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,531:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 11:55:55,557:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:55:55,573:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,574:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,575:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 11:55:55,600:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:55:55,615:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,616:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,640:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 11:55:55,656:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,658:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,658:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 11:55:55,699:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,701:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,744:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,745:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,747:INFO:Preparing preprocessing pipeline...
2024-04-24 11:55:55,748:INFO:Set up simple imputation.
2024-04-24 11:55:55,748:INFO:Set up feature normalization.
2024-04-24 11:55:55,766:INFO:Finished creating preprocessing pipeline.
2024-04-24 11:55:55,768:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 11:55:55,768:INFO:Creating final display dataframe.
2024-04-24 11:55:55,819:INFO:Setup _display_container:                     Description             Value
0                    Session id              7658
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e2a8
2024-04-24 11:55:55,862:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,864:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,905:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 11:55:55,907:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 11:55:55,908:INFO:setup() successfully completed in 0.43s...............
2024-04-24 11:55:55,912:INFO:Initializing predict_model()
2024-04-24 11:55:55,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B96B03C910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8475, splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B961BF7DC0>)
2024-04-24 11:55:55,913:INFO:Checking exceptions
2024-04-24 11:55:55,913:INFO:Preloading libraries
2024-04-24 11:58:48,184:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\939109409.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 11:58:48,189:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\939109409.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 12:03:21,111:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\2802138818.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:03:21,118:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\2802138818.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 12:26:49,559:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\4233665647.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:26:49,565:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\4233665647.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 12:27:04,147:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\3161398291.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:28:01,974:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\1096822707.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:29:05,456:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\3580571908.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:29:05,461:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\3580571908.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_label'] = Y

2024-04-24 12:29:41,246:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\577396915.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:29:41,250:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_51656\577396915.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_label'] = Y

2024-04-24 12:32:29,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 12:32:29,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 12:32:29,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 12:32:29,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-24 12:33:39,826:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\951640949.py:49: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_dev.dropna(axis=0, inplace=True)

2024-04-24 12:36:01,665:INFO:PyCaret ClassificationExperiment
2024-04-24 12:36:01,665:INFO:Logging name: clf-default-name
2024-04-24 12:36:01,665:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 12:36:01,665:INFO:version 3.2.0
2024-04-24 12:36:01,665:INFO:Initializing setup()
2024-04-24 12:36:01,665:INFO:self.USI: 6f5e
2024-04-24 12:36:01,665:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 12:36:01,665:INFO:Checking environment
2024-04-24 12:36:01,665:INFO:python_version: 3.9.19
2024-04-24 12:36:01,665:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 12:36:01,665:INFO:machine: AMD64
2024-04-24 12:36:01,665:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 12:36:01,665:INFO:Memory: svmem(total=33897811968, available=11749117952, percent=65.3, used=22148694016, free=11749117952)
2024-04-24 12:36:01,666:INFO:Physical Core: 14
2024-04-24 12:36:01,666:INFO:Logical Core: 20
2024-04-24 12:36:01,666:INFO:Checking libraries
2024-04-24 12:36:01,666:INFO:System:
2024-04-24 12:36:01,666:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 12:36:01,666:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 12:36:01,666:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 12:36:01,666:INFO:PyCaret required dependencies:
2024-04-24 12:36:01,721:INFO:                 pip: 23.3.1
2024-04-24 12:36:01,722:INFO:          setuptools: 68.2.2
2024-04-24 12:36:01,722:INFO:             pycaret: 3.2.0
2024-04-24 12:36:01,722:INFO:             IPython: 8.15.0
2024-04-24 12:36:01,722:INFO:          ipywidgets: 8.1.2
2024-04-24 12:36:01,722:INFO:                tqdm: 4.65.0
2024-04-24 12:36:01,722:INFO:               numpy: 1.25.2
2024-04-24 12:36:01,722:INFO:              pandas: 1.5.3
2024-04-24 12:36:01,722:INFO:              jinja2: 3.1.3
2024-04-24 12:36:01,722:INFO:               scipy: 1.11.4
2024-04-24 12:36:01,722:INFO:              joblib: 1.2.0
2024-04-24 12:36:01,722:INFO:             sklearn: 1.2.2
2024-04-24 12:36:01,722:INFO:                pyod: 1.0.9
2024-04-24 12:36:01,722:INFO:            imblearn: 0.11.0
2024-04-24 12:36:01,722:INFO:   category_encoders: 2.6.3
2024-04-24 12:36:01,722:INFO:            lightgbm: 4.1.0
2024-04-24 12:36:01,722:INFO:               numba: 0.59.1
2024-04-24 12:36:01,722:INFO:            requests: 2.31.0
2024-04-24 12:36:01,722:INFO:          matplotlib: 3.8.4
2024-04-24 12:36:01,722:INFO:          scikitplot: 0.3.7
2024-04-24 12:36:01,722:INFO:         yellowbrick: 1.5
2024-04-24 12:36:01,722:INFO:              plotly: 5.19.0
2024-04-24 12:36:01,722:INFO:    plotly-resampler: Not installed
2024-04-24 12:36:01,722:INFO:             kaleido: 0.2.1
2024-04-24 12:36:01,722:INFO:           schemdraw: 0.15
2024-04-24 12:36:01,722:INFO:         statsmodels: 0.14.0
2024-04-24 12:36:01,722:INFO:              sktime: 0.21.1
2024-04-24 12:36:01,722:INFO:               tbats: 1.1.3
2024-04-24 12:36:01,722:INFO:            pmdarima: 2.0.4
2024-04-24 12:36:01,722:INFO:              psutil: 5.9.0
2024-04-24 12:36:01,722:INFO:          markupsafe: 2.1.3
2024-04-24 12:36:01,722:INFO:             pickle5: Not installed
2024-04-24 12:36:01,722:INFO:         cloudpickle: 2.2.1
2024-04-24 12:36:01,722:INFO:         deprecation: 2.1.0
2024-04-24 12:36:01,722:INFO:              xxhash: 2.0.2
2024-04-24 12:36:01,722:INFO:           wurlitzer: 3.0.3
2024-04-24 12:36:01,722:INFO:PyCaret optional dependencies:
2024-04-24 12:36:01,728:INFO:                shap: Not installed
2024-04-24 12:36:01,728:INFO:           interpret: Not installed
2024-04-24 12:36:01,728:INFO:                umap: 0.5.3
2024-04-24 12:36:01,728:INFO:     ydata_profiling: Not installed
2024-04-24 12:36:01,728:INFO:  explainerdashboard: Not installed
2024-04-24 12:36:01,728:INFO:             autoviz: Not installed
2024-04-24 12:36:01,728:INFO:           fairlearn: Not installed
2024-04-24 12:36:01,728:INFO:          deepchecks: Not installed
2024-04-24 12:36:01,728:INFO:             xgboost: 1.7.6
2024-04-24 12:36:01,728:INFO:            catboost: 1.2.3
2024-04-24 12:36:01,728:INFO:              kmodes: 0.12.2
2024-04-24 12:36:01,728:INFO:             mlxtend: 0.23.1
2024-04-24 12:36:01,728:INFO:       statsforecast: Not installed
2024-04-24 12:36:01,728:INFO:        tune_sklearn: Not installed
2024-04-24 12:36:01,728:INFO:                 ray: Not installed
2024-04-24 12:36:01,728:INFO:            hyperopt: Not installed
2024-04-24 12:36:01,728:INFO:              optuna: Not installed
2024-04-24 12:36:01,729:INFO:               skopt: Not installed
2024-04-24 12:36:01,729:INFO:              mlflow: 2.9.2
2024-04-24 12:36:01,729:INFO:              gradio: Not installed
2024-04-24 12:36:01,729:INFO:             fastapi: Not installed
2024-04-24 12:36:01,729:INFO:             uvicorn: Not installed
2024-04-24 12:36:01,729:INFO:              m2cgen: Not installed
2024-04-24 12:36:01,729:INFO:           evidently: Not installed
2024-04-24 12:36:01,729:INFO:               fugue: Not installed
2024-04-24 12:36:01,729:INFO:           streamlit: 1.32.0
2024-04-24 12:36:01,729:INFO:             prophet: Not installed
2024-04-24 12:36:01,729:INFO:None
2024-04-24 12:36:01,729:INFO:Set up data.
2024-04-24 12:36:01,735:INFO:Set up folding strategy.
2024-04-24 12:36:01,735:INFO:Set up train/test split.
2024-04-24 12:36:01,735:INFO:Set up data.
2024-04-24 12:36:01,738:INFO:Set up index.
2024-04-24 12:36:01,738:INFO:Assigning column types.
2024-04-24 12:36:01,741:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 12:36:01,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 12:36:01,766:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:36:01,786:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:01,807:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:01,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 12:36:01,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:36:01,868:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:01,870:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:01,870:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 12:36:01,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:36:01,911:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:01,913:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:01,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:36:01,954:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:01,956:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:01,956:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 12:36:01,997:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:01,999:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:02,041:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:02,042:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:02,045:INFO:Preparing preprocessing pipeline...
2024-04-24 12:36:02,046:INFO:Set up simple imputation.
2024-04-24 12:36:02,046:INFO:Set up feature normalization.
2024-04-24 12:36:02,066:INFO:Finished creating preprocessing pipeline.
2024-04-24 12:36:02,070:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 12:36:02,070:INFO:Creating final display dataframe.
2024-04-24 12:36:02,126:INFO:Setup _display_container:                     Description             Value
0                    Session id               918
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6f5e
2024-04-24 12:36:02,173:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:02,175:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:02,216:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:36:02,218:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:36:02,218:INFO:setup() successfully completed in 0.55s...............
2024-04-24 12:36:02,218:INFO:Initializing compare_models()
2024-04-24 12:36:02,218:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 12:36:02,218:INFO:Checking exceptions
2024-04-24 12:36:02,222:INFO:Preparing display monitor
2024-04-24 12:36:02,239:INFO:Initializing Logistic Regression
2024-04-24 12:36:02,239:INFO:Total runtime is 0.0 minutes
2024-04-24 12:36:02,241:INFO:SubProcess create_model() called ==================================
2024-04-24 12:36:02,241:INFO:Initializing create_model()
2024-04-24 12:36:02,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B3827790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:36:02,241:INFO:Checking exceptions
2024-04-24 12:36:02,241:INFO:Importing libraries
2024-04-24 12:36:02,241:INFO:Copying training dataset
2024-04-24 12:36:02,246:INFO:Defining folds
2024-04-24 12:36:02,246:INFO:Declaring metric variables
2024-04-24 12:36:02,249:INFO:Importing untrained model
2024-04-24 12:36:02,252:INFO:Logistic Regression Imported successfully
2024-04-24 12:36:02,257:INFO:Starting cross validation
2024-04-24 12:36:02,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:36:06,106:INFO:Calculating mean and std
2024-04-24 12:36:06,108:INFO:Creating metrics dataframe
2024-04-24 12:36:06,114:INFO:Uploading results into container
2024-04-24 12:36:06,115:INFO:Uploading model into container now
2024-04-24 12:36:06,116:INFO:_master_model_container: 1
2024-04-24 12:36:06,116:INFO:_display_container: 2
2024-04-24 12:36:06,117:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 12:36:06,117:INFO:create_model() successfully completed......................................
2024-04-24 12:36:06,351:INFO:SubProcess create_model() end ==================================
2024-04-24 12:36:06,351:INFO:Creating metrics dataframe
2024-04-24 12:36:06,362:INFO:Initializing Decision Tree Classifier
2024-04-24 12:36:06,362:INFO:Total runtime is 0.06872107585271199 minutes
2024-04-24 12:36:06,365:INFO:SubProcess create_model() called ==================================
2024-04-24 12:36:06,365:INFO:Initializing create_model()
2024-04-24 12:36:06,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B3827790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:36:06,365:INFO:Checking exceptions
2024-04-24 12:36:06,366:INFO:Importing libraries
2024-04-24 12:36:06,366:INFO:Copying training dataset
2024-04-24 12:36:06,371:INFO:Defining folds
2024-04-24 12:36:06,371:INFO:Declaring metric variables
2024-04-24 12:36:06,375:INFO:Importing untrained model
2024-04-24 12:36:06,381:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:36:06,388:INFO:Starting cross validation
2024-04-24 12:36:06,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:36:09,222:INFO:Calculating mean and std
2024-04-24 12:36:09,223:INFO:Creating metrics dataframe
2024-04-24 12:36:09,227:INFO:Uploading results into container
2024-04-24 12:36:09,228:INFO:Uploading model into container now
2024-04-24 12:36:09,228:INFO:_master_model_container: 2
2024-04-24 12:36:09,228:INFO:_display_container: 2
2024-04-24 12:36:09,229:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best')
2024-04-24 12:36:09,229:INFO:create_model() successfully completed......................................
2024-04-24 12:36:09,338:INFO:SubProcess create_model() end ==================================
2024-04-24 12:36:09,339:INFO:Creating metrics dataframe
2024-04-24 12:36:09,355:INFO:Initializing create_model()
2024-04-24 12:36:09,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:36:09,355:INFO:Checking exceptions
2024-04-24 12:36:09,357:INFO:Importing libraries
2024-04-24 12:36:09,357:INFO:Copying training dataset
2024-04-24 12:36:09,362:INFO:Defining folds
2024-04-24 12:36:09,363:INFO:Declaring metric variables
2024-04-24 12:36:09,363:INFO:Importing untrained model
2024-04-24 12:36:09,363:INFO:Declaring custom model
2024-04-24 12:36:09,363:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:36:09,364:INFO:Cross validation set to False
2024-04-24 12:36:09,364:INFO:Fitting Model
2024-04-24 12:36:09,425:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best')
2024-04-24 12:36:09,425:INFO:create_model() successfully completed......................................
2024-04-24 12:36:09,532:INFO:Initializing create_model()
2024-04-24 12:36:09,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:36:09,538:INFO:Checking exceptions
2024-04-24 12:36:09,539:INFO:Importing libraries
2024-04-24 12:36:09,539:INFO:Copying training dataset
2024-04-24 12:36:09,544:INFO:Defining folds
2024-04-24 12:36:09,544:INFO:Declaring metric variables
2024-04-24 12:36:09,544:INFO:Importing untrained model
2024-04-24 12:36:09,544:INFO:Declaring custom model
2024-04-24 12:36:09,544:INFO:Logistic Regression Imported successfully
2024-04-24 12:36:09,545:INFO:Cross validation set to False
2024-04-24 12:36:09,545:INFO:Fitting Model
2024-04-24 12:36:09,565:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 12:36:09,565:INFO:create_model() successfully completed......................................
2024-04-24 12:36:09,683:INFO:_master_model_container: 2
2024-04-24 12:36:09,683:INFO:_display_container: 2
2024-04-24 12:36:09,683:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 12:36:09,683:INFO:compare_models() successfully completed......................................
2024-04-24 12:36:09,684:INFO:Initializing predict_model()
2024-04-24 12:36:09,684:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B3322AF0>)
2024-04-24 12:36:09,684:INFO:Checking exceptions
2024-04-24 12:36:09,684:INFO:Preloading libraries
2024-04-24 12:36:10,316:INFO:Initializing plot_model()
2024-04-24 12:36:10,316:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, system=True)
2024-04-24 12:36:10,316:INFO:Checking exceptions
2024-04-24 12:36:10,320:INFO:Preloading libraries
2024-04-24 12:36:10,321:INFO:Copying training dataset
2024-04-24 12:36:10,321:INFO:Plot type: confusion_matrix
2024-04-24 12:36:10,376:INFO:Fitting Model
2024-04-24 12:36:10,377:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:36:10,378:INFO:Scoring test/hold-out set
2024-04-24 12:36:10,452:INFO:Visual Rendered Successfully
2024-04-24 12:36:10,559:INFO:plot_model() successfully completed......................................
2024-04-24 12:36:10,559:INFO:Initializing plot_model()
2024-04-24 12:36:10,559:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, system=True)
2024-04-24 12:36:10,559:INFO:Checking exceptions
2024-04-24 12:36:10,564:INFO:Preloading libraries
2024-04-24 12:36:10,565:INFO:Copying training dataset
2024-04-24 12:36:10,565:INFO:Plot type: auc
2024-04-24 12:36:10,621:INFO:Fitting Model
2024-04-24 12:36:10,621:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:36:10,622:INFO:Scoring test/hold-out set
2024-04-24 12:36:10,748:INFO:Visual Rendered Successfully
2024-04-24 12:36:10,848:INFO:plot_model() successfully completed......................................
2024-04-24 12:36:10,848:INFO:Initializing evaluate_model()
2024-04-24 12:36:10,848:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 12:36:10,863:INFO:Initializing plot_model()
2024-04-24 12:36:10,863:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, system=True)
2024-04-24 12:36:10,863:INFO:Checking exceptions
2024-04-24 12:36:10,865:INFO:Preloading libraries
2024-04-24 12:36:10,866:INFO:Copying training dataset
2024-04-24 12:36:10,866:INFO:Plot type: pipeline
2024-04-24 12:36:10,961:INFO:Visual Rendered Successfully
2024-04-24 12:36:11,070:INFO:plot_model() successfully completed......................................
2024-04-24 12:36:11,073:INFO:Initializing predict_model()
2024-04-24 12:36:11,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B3A90940>)
2024-04-24 12:36:11,073:INFO:Checking exceptions
2024-04-24 12:36:11,073:INFO:Preloading libraries
2024-04-24 12:36:11,987:INFO:Initializing plot_model()
2024-04-24 12:36:11,988:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, system=True)
2024-04-24 12:36:11,988:INFO:Checking exceptions
2024-04-24 12:36:11,992:INFO:Preloading libraries
2024-04-24 12:36:11,992:INFO:Copying training dataset
2024-04-24 12:36:11,992:INFO:Plot type: confusion_matrix
2024-04-24 12:36:12,056:INFO:Fitting Model
2024-04-24 12:36:12,056:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 12:36:12,057:INFO:Scoring test/hold-out set
2024-04-24 12:36:12,124:INFO:Visual Rendered Successfully
2024-04-24 12:36:12,240:INFO:plot_model() successfully completed......................................
2024-04-24 12:36:12,241:INFO:Initializing plot_model()
2024-04-24 12:36:12,241:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, system=True)
2024-04-24 12:36:12,241:INFO:Checking exceptions
2024-04-24 12:36:12,245:INFO:Preloading libraries
2024-04-24 12:36:12,255:INFO:Copying training dataset
2024-04-24 12:36:12,255:INFO:Plot type: auc
2024-04-24 12:36:12,313:INFO:Fitting Model
2024-04-24 12:36:12,313:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 12:36:12,313:INFO:Scoring test/hold-out set
2024-04-24 12:36:12,448:INFO:Visual Rendered Successfully
2024-04-24 12:36:12,553:INFO:plot_model() successfully completed......................................
2024-04-24 12:36:12,554:INFO:Initializing evaluate_model()
2024-04-24 12:36:12,554:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 12:36:12,562:INFO:Initializing plot_model()
2024-04-24 12:36:12,562:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, system=True)
2024-04-24 12:36:12,562:INFO:Checking exceptions
2024-04-24 12:36:12,564:INFO:Preloading libraries
2024-04-24 12:36:12,564:INFO:Copying training dataset
2024-04-24 12:36:12,564:INFO:Plot type: pipeline
2024-04-24 12:36:12,621:INFO:Visual Rendered Successfully
2024-04-24 12:36:12,724:INFO:plot_model() successfully completed......................................
2024-04-24 12:36:12,728:INFO:Initializing tune_model()
2024-04-24 12:36:12,728:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>)
2024-04-24 12:36:12,728:INFO:Checking exceptions
2024-04-24 12:36:12,742:INFO:Copying training dataset
2024-04-24 12:36:12,745:INFO:Checking base model
2024-04-24 12:36:12,746:INFO:Base model : Decision Tree Classifier
2024-04-24 12:36:12,749:INFO:Declaring metric variables
2024-04-24 12:36:12,753:INFO:Defining Hyperparameters
2024-04-24 12:36:12,869:INFO:Tuning with n_jobs=-1
2024-04-24 12:36:12,870:INFO:Initializing RandomizedSearchCV
2024-04-24 12:36:13,009:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini'}
2024-04-24 12:36:13,009:INFO:Hyperparameter search completed
2024-04-24 12:36:13,009:INFO:SubProcess create_model() called ==================================
2024-04-24 12:36:13,010:INFO:Initializing create_model()
2024-04-24 12:36:13,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251AF37B340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.02, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini'})
2024-04-24 12:36:13,010:INFO:Checking exceptions
2024-04-24 12:36:13,010:INFO:Importing libraries
2024-04-24 12:36:13,010:INFO:Copying training dataset
2024-04-24 12:36:13,014:INFO:Defining folds
2024-04-24 12:36:13,014:INFO:Declaring metric variables
2024-04-24 12:36:13,016:INFO:Importing untrained model
2024-04-24 12:36:13,016:INFO:Declaring custom model
2024-04-24 12:36:13,019:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:36:13,023:INFO:Starting cross validation
2024-04-24 12:36:13,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:36:13,061:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,061:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,073:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,076:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,078:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,079:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,080:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,081:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,082:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,088:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-24 12:36:13,092:INFO:Calculating mean and std
2024-04-24 12:36:13,092:INFO:Creating metrics dataframe
2024-04-24 12:36:13,097:INFO:Finalizing model
2024-04-24 12:36:13,111:INFO:Uploading results into container
2024-04-24 12:36:13,111:INFO:Uploading model into container now
2024-04-24 12:36:13,112:INFO:_master_model_container: 3
2024-04-24 12:36:13,112:INFO:_display_container: 5
2024-04-24 12:36:13,112:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=9, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best')
2024-04-24 12:36:13,112:INFO:create_model() successfully completed......................................
2024-04-24 12:36:13,207:INFO:SubProcess create_model() end ==================================
2024-04-24 12:36:13,207:INFO:choose_better activated
2024-04-24 12:36:13,212:INFO:SubProcess create_model() called ==================================
2024-04-24 12:36:13,212:INFO:Initializing create_model()
2024-04-24 12:36:13,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:36:13,213:INFO:Checking exceptions
2024-04-24 12:36:13,214:INFO:Importing libraries
2024-04-24 12:36:13,214:INFO:Copying training dataset
2024-04-24 12:36:13,218:INFO:Defining folds
2024-04-24 12:36:13,219:INFO:Declaring metric variables
2024-04-24 12:36:13,219:INFO:Importing untrained model
2024-04-24 12:36:13,219:INFO:Declaring custom model
2024-04-24 12:36:13,219:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:36:13,219:INFO:Starting cross validation
2024-04-24 12:36:13,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:36:13,338:INFO:Calculating mean and std
2024-04-24 12:36:13,338:INFO:Creating metrics dataframe
2024-04-24 12:36:13,340:INFO:Finalizing model
2024-04-24 12:36:13,391:INFO:Uploading results into container
2024-04-24 12:36:13,391:INFO:Uploading model into container now
2024-04-24 12:36:13,391:INFO:_master_model_container: 4
2024-04-24 12:36:13,391:INFO:_display_container: 6
2024-04-24 12:36:13,392:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best')
2024-04-24 12:36:13,392:INFO:create_model() successfully completed......................................
2024-04-24 12:36:13,536:INFO:SubProcess create_model() end ==================================
2024-04-24 12:36:13,536:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best') result for F1 is 0.5419
2024-04-24 12:36:13,537:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=9, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.02, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best') result for F1 is 0.0
2024-04-24 12:36:13,537:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best') is best model
2024-04-24 12:36:13,537:INFO:choose_better completed
2024-04-24 12:36:13,537:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 12:36:13,545:INFO:_master_model_container: 4
2024-04-24 12:36:13,545:INFO:_display_container: 5
2024-04-24 12:36:13,546:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best')
2024-04-24 12:36:13,546:INFO:tune_model() successfully completed......................................
2024-04-24 12:36:13,694:INFO:Initializing predict_model()
2024-04-24 12:36:13,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B3312AF0>)
2024-04-24 12:36:13,695:INFO:Checking exceptions
2024-04-24 12:36:13,695:INFO:Preloading libraries
2024-04-24 12:36:13,893:INFO:Initializing finalize_model()
2024-04-24 12:36:13,893:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 12:36:13,893:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best')
2024-04-24 12:36:13,897:INFO:Initializing create_model()
2024-04-24 12:36:13,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251AC690C70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=918, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:36:13,897:INFO:Checking exceptions
2024-04-24 12:36:13,899:INFO:Importing libraries
2024-04-24 12:36:13,899:INFO:Copying training dataset
2024-04-24 12:36:13,899:INFO:Defining folds
2024-04-24 12:36:13,900:INFO:Declaring metric variables
2024-04-24 12:36:13,900:INFO:Importing untrained model
2024-04-24 12:36:13,900:INFO:Declaring custom model
2024-04-24 12:36:13,900:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:36:13,901:INFO:Cross validation set to False
2024-04-24 12:36:13,901:INFO:Fitting Model
2024-04-24 12:36:13,981:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=918, splitter='best'))],
         verbose=False)
2024-04-24 12:36:13,981:INFO:create_model() successfully completed......................................
2024-04-24 12:36:14,085:INFO:_master_model_container: 4
2024-04-24 12:36:14,086:INFO:_display_container: 6
2024-04-24 12:36:14,090:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=918, splitter='best'))],
         verbose=False)
2024-04-24 12:36:14,090:INFO:finalize_model() successfully completed......................................
2024-04-24 12:36:14,200:INFO:Initializing save_model()
2024-04-24 12:36:14,200:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=918, splitter='best'))],
         verbose=False), model_name=../doc/models/modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 12:36:14,200:INFO:Adding model into prep_pipe
2024-04-24 12:36:14,200:WARNING:Only Model saved as it was a pipeline.
2024-04-24 12:36:14,213:INFO:../doc/models/modelo_kobe.pkl saved in current working directory
2024-04-24 12:36:14,216:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=918, splitter='best'))],
         verbose=False)
2024-04-24 12:36:14,217:INFO:save_model() successfully completed......................................
2024-04-24 12:36:14,315:INFO:Initializing load_model()
2024-04-24 12:36:14,315:INFO:load_model(model_name=../doc/models/modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 12:36:14,351:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 12:36:19,029:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-24 12:36:19,123:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3237889043.py:192: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 12:43:41,212:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\store\artifact\utils\models.py:32: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-04-24 12:46:03,868:INFO:PyCaret ClassificationExperiment
2024-04-24 12:46:03,868:INFO:Logging name: clf-default-name
2024-04-24 12:46:03,868:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 12:46:03,868:INFO:version 3.2.0
2024-04-24 12:46:03,868:INFO:Initializing setup()
2024-04-24 12:46:03,868:INFO:self.USI: 3f2d
2024-04-24 12:46:03,868:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 12:46:03,868:INFO:Checking environment
2024-04-24 12:46:03,868:INFO:python_version: 3.9.19
2024-04-24 12:46:03,868:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 12:46:03,868:INFO:machine: AMD64
2024-04-24 12:46:03,868:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 12:46:03,868:INFO:Memory: svmem(total=33897811968, available=10657910784, percent=68.6, used=23239901184, free=10657910784)
2024-04-24 12:46:03,868:INFO:Physical Core: 14
2024-04-24 12:46:03,868:INFO:Logical Core: 20
2024-04-24 12:46:03,868:INFO:Checking libraries
2024-04-24 12:46:03,868:INFO:System:
2024-04-24 12:46:03,868:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 12:46:03,868:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 12:46:03,868:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 12:46:03,868:INFO:PyCaret required dependencies:
2024-04-24 12:46:03,868:INFO:                 pip: 23.3.1
2024-04-24 12:46:03,868:INFO:          setuptools: 68.2.2
2024-04-24 12:46:03,868:INFO:             pycaret: 3.2.0
2024-04-24 12:46:03,868:INFO:             IPython: 8.15.0
2024-04-24 12:46:03,868:INFO:          ipywidgets: 8.1.2
2024-04-24 12:46:03,868:INFO:                tqdm: 4.65.0
2024-04-24 12:46:03,868:INFO:               numpy: 1.25.2
2024-04-24 12:46:03,868:INFO:              pandas: 1.5.3
2024-04-24 12:46:03,868:INFO:              jinja2: 3.1.3
2024-04-24 12:46:03,868:INFO:               scipy: 1.11.4
2024-04-24 12:46:03,869:INFO:              joblib: 1.2.0
2024-04-24 12:46:03,869:INFO:             sklearn: 1.2.2
2024-04-24 12:46:03,869:INFO:                pyod: 1.0.9
2024-04-24 12:46:03,869:INFO:            imblearn: 0.11.0
2024-04-24 12:46:03,869:INFO:   category_encoders: 2.6.3
2024-04-24 12:46:03,869:INFO:            lightgbm: 4.1.0
2024-04-24 12:46:03,869:INFO:               numba: 0.59.1
2024-04-24 12:46:03,869:INFO:            requests: 2.31.0
2024-04-24 12:46:03,869:INFO:          matplotlib: 3.8.4
2024-04-24 12:46:03,869:INFO:          scikitplot: 0.3.7
2024-04-24 12:46:03,869:INFO:         yellowbrick: 1.5
2024-04-24 12:46:03,869:INFO:              plotly: 5.19.0
2024-04-24 12:46:03,869:INFO:    plotly-resampler: Not installed
2024-04-24 12:46:03,869:INFO:             kaleido: 0.2.1
2024-04-24 12:46:03,869:INFO:           schemdraw: 0.15
2024-04-24 12:46:03,869:INFO:         statsmodels: 0.14.0
2024-04-24 12:46:03,869:INFO:              sktime: 0.21.1
2024-04-24 12:46:03,869:INFO:               tbats: 1.1.3
2024-04-24 12:46:03,869:INFO:            pmdarima: 2.0.4
2024-04-24 12:46:03,869:INFO:              psutil: 5.9.0
2024-04-24 12:46:03,869:INFO:          markupsafe: 2.1.3
2024-04-24 12:46:03,869:INFO:             pickle5: Not installed
2024-04-24 12:46:03,869:INFO:         cloudpickle: 2.2.1
2024-04-24 12:46:03,869:INFO:         deprecation: 2.1.0
2024-04-24 12:46:03,869:INFO:              xxhash: 2.0.2
2024-04-24 12:46:03,869:INFO:           wurlitzer: 3.0.3
2024-04-24 12:46:03,869:INFO:PyCaret optional dependencies:
2024-04-24 12:46:03,869:INFO:                shap: Not installed
2024-04-24 12:46:03,869:INFO:           interpret: Not installed
2024-04-24 12:46:03,869:INFO:                umap: 0.5.3
2024-04-24 12:46:03,869:INFO:     ydata_profiling: Not installed
2024-04-24 12:46:03,869:INFO:  explainerdashboard: Not installed
2024-04-24 12:46:03,869:INFO:             autoviz: Not installed
2024-04-24 12:46:03,869:INFO:           fairlearn: Not installed
2024-04-24 12:46:03,869:INFO:          deepchecks: Not installed
2024-04-24 12:46:03,869:INFO:             xgboost: 1.7.6
2024-04-24 12:46:03,869:INFO:            catboost: 1.2.3
2024-04-24 12:46:03,869:INFO:              kmodes: 0.12.2
2024-04-24 12:46:03,869:INFO:             mlxtend: 0.23.1
2024-04-24 12:46:03,869:INFO:       statsforecast: Not installed
2024-04-24 12:46:03,869:INFO:        tune_sklearn: Not installed
2024-04-24 12:46:03,869:INFO:                 ray: Not installed
2024-04-24 12:46:03,869:INFO:            hyperopt: Not installed
2024-04-24 12:46:03,869:INFO:              optuna: Not installed
2024-04-24 12:46:03,869:INFO:               skopt: Not installed
2024-04-24 12:46:03,869:INFO:              mlflow: 2.9.2
2024-04-24 12:46:03,869:INFO:              gradio: Not installed
2024-04-24 12:46:03,869:INFO:             fastapi: Not installed
2024-04-24 12:46:03,869:INFO:             uvicorn: Not installed
2024-04-24 12:46:03,869:INFO:              m2cgen: Not installed
2024-04-24 12:46:03,869:INFO:           evidently: Not installed
2024-04-24 12:46:03,869:INFO:               fugue: Not installed
2024-04-24 12:46:03,869:INFO:           streamlit: 1.32.0
2024-04-24 12:46:03,869:INFO:             prophet: Not installed
2024-04-24 12:46:03,869:INFO:None
2024-04-24 12:46:03,869:INFO:Set up data.
2024-04-24 12:46:03,874:INFO:Set up folding strategy.
2024-04-24 12:46:03,874:INFO:Set up train/test split.
2024-04-24 12:46:03,874:INFO:Set up data.
2024-04-24 12:46:03,877:INFO:Set up index.
2024-04-24 12:46:03,877:INFO:Assigning column types.
2024-04-24 12:46:03,881:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 12:46:03,934:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 12:46:03,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:46:03,955:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:03,957:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:03,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 12:46:03,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:46:03,998:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:03,999:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,000:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 12:46:04,027:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:46:04,043:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:04,044:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 12:46:04,086:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:04,088:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,088:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 12:46:04,131:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:04,132:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,178:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:04,179:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,181:INFO:Preparing preprocessing pipeline...
2024-04-24 12:46:04,182:INFO:Set up simple imputation.
2024-04-24 12:46:04,182:INFO:Set up feature normalization.
2024-04-24 12:46:04,202:INFO:Finished creating preprocessing pipeline.
2024-04-24 12:46:04,205:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 12:46:04,205:INFO:Creating final display dataframe.
2024-04-24 12:46:04,260:INFO:Setup _display_container:                     Description             Value
0                    Session id              7888
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3f2d
2024-04-24 12:46:04,310:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:04,312:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,357:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 12:46:04,358:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 12:46:04,359:INFO:setup() successfully completed in 0.49s...............
2024-04-24 12:46:04,359:INFO:Initializing compare_models()
2024-04-24 12:46:04,359:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 12:46:04,359:INFO:Checking exceptions
2024-04-24 12:46:04,362:INFO:Preparing display monitor
2024-04-24 12:46:04,378:INFO:Initializing Logistic Regression
2024-04-24 12:46:04,379:INFO:Total runtime is 1.6701221466064452e-05 minutes
2024-04-24 12:46:04,382:INFO:SubProcess create_model() called ==================================
2024-04-24 12:46:04,382:INFO:Initializing create_model()
2024-04-24 12:46:04,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B6C98490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:46:04,382:INFO:Checking exceptions
2024-04-24 12:46:04,382:INFO:Importing libraries
2024-04-24 12:46:04,382:INFO:Copying training dataset
2024-04-24 12:46:04,387:INFO:Defining folds
2024-04-24 12:46:04,387:INFO:Declaring metric variables
2024-04-24 12:46:04,390:INFO:Importing untrained model
2024-04-24 12:46:04,393:INFO:Logistic Regression Imported successfully
2024-04-24 12:46:04,398:INFO:Starting cross validation
2024-04-24 12:46:04,399:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:46:05,124:INFO:Calculating mean and std
2024-04-24 12:46:05,125:INFO:Creating metrics dataframe
2024-04-24 12:46:05,130:INFO:Uploading results into container
2024-04-24 12:46:05,131:INFO:Uploading model into container now
2024-04-24 12:46:05,131:INFO:_master_model_container: 1
2024-04-24 12:46:05,131:INFO:_display_container: 2
2024-04-24 12:46:05,132:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 12:46:05,132:INFO:create_model() successfully completed......................................
2024-04-24 12:46:05,368:INFO:SubProcess create_model() end ==================================
2024-04-24 12:46:05,368:INFO:Creating metrics dataframe
2024-04-24 12:46:05,383:INFO:Initializing Decision Tree Classifier
2024-04-24 12:46:05,383:INFO:Total runtime is 0.016759030024210614 minutes
2024-04-24 12:46:05,391:INFO:SubProcess create_model() called ==================================
2024-04-24 12:46:05,392:INFO:Initializing create_model()
2024-04-24 12:46:05,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B6C98490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:46:05,392:INFO:Checking exceptions
2024-04-24 12:46:05,392:INFO:Importing libraries
2024-04-24 12:46:05,393:INFO:Copying training dataset
2024-04-24 12:46:05,405:INFO:Defining folds
2024-04-24 12:46:05,405:INFO:Declaring metric variables
2024-04-24 12:46:05,410:INFO:Importing untrained model
2024-04-24 12:46:05,414:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:46:05,420:INFO:Starting cross validation
2024-04-24 12:46:05,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:46:08,112:INFO:Calculating mean and std
2024-04-24 12:46:08,114:INFO:Creating metrics dataframe
2024-04-24 12:46:08,119:INFO:Uploading results into container
2024-04-24 12:46:08,120:INFO:Uploading model into container now
2024-04-24 12:46:08,120:INFO:_master_model_container: 2
2024-04-24 12:46:08,120:INFO:_display_container: 2
2024-04-24 12:46:08,121:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 12:46:08,121:INFO:create_model() successfully completed......................................
2024-04-24 12:46:08,345:INFO:SubProcess create_model() end ==================================
2024-04-24 12:46:08,346:INFO:Creating metrics dataframe
2024-04-24 12:46:08,366:INFO:Initializing create_model()
2024-04-24 12:46:08,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:46:08,367:INFO:Checking exceptions
2024-04-24 12:46:08,369:INFO:Importing libraries
2024-04-24 12:46:08,369:INFO:Copying training dataset
2024-04-24 12:46:08,375:INFO:Defining folds
2024-04-24 12:46:08,375:INFO:Declaring metric variables
2024-04-24 12:46:08,375:INFO:Importing untrained model
2024-04-24 12:46:08,375:INFO:Declaring custom model
2024-04-24 12:46:08,375:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:46:08,376:INFO:Cross validation set to False
2024-04-24 12:46:08,376:INFO:Fitting Model
2024-04-24 12:46:08,436:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 12:46:08,436:INFO:create_model() successfully completed......................................
2024-04-24 12:46:08,606:INFO:Initializing create_model()
2024-04-24 12:46:08,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:46:08,607:INFO:Checking exceptions
2024-04-24 12:46:08,608:INFO:Importing libraries
2024-04-24 12:46:08,608:INFO:Copying training dataset
2024-04-24 12:46:08,613:INFO:Defining folds
2024-04-24 12:46:08,613:INFO:Declaring metric variables
2024-04-24 12:46:08,614:INFO:Importing untrained model
2024-04-24 12:46:08,614:INFO:Declaring custom model
2024-04-24 12:46:08,614:INFO:Logistic Regression Imported successfully
2024-04-24 12:46:08,615:INFO:Cross validation set to False
2024-04-24 12:46:08,615:INFO:Fitting Model
2024-04-24 12:46:08,635:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 12:46:08,636:INFO:create_model() successfully completed......................................
2024-04-24 12:46:08,798:INFO:_master_model_container: 2
2024-04-24 12:46:08,798:INFO:_display_container: 2
2024-04-24 12:46:08,799:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 12:46:08,799:INFO:compare_models() successfully completed......................................
2024-04-24 12:46:08,799:INFO:Initializing predict_model()
2024-04-24 12:46:08,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B002A4C0>)
2024-04-24 12:46:08,799:INFO:Checking exceptions
2024-04-24 12:46:08,799:INFO:Preloading libraries
2024-04-24 12:46:11,110:INFO:Initializing plot_model()
2024-04-24 12:46:11,110:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:46:11,110:INFO:Checking exceptions
2024-04-24 12:46:11,116:INFO:Preloading libraries
2024-04-24 12:46:11,117:INFO:Copying training dataset
2024-04-24 12:46:11,117:INFO:Plot type: confusion_matrix
2024-04-24 12:46:11,218:INFO:Fitting Model
2024-04-24 12:46:11,219:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:46:11,219:INFO:Scoring test/hold-out set
2024-04-24 12:46:11,348:INFO:Visual Rendered Successfully
2024-04-24 12:46:11,510:INFO:plot_model() successfully completed......................................
2024-04-24 12:46:11,511:INFO:Initializing plot_model()
2024-04-24 12:46:11,511:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:46:11,511:INFO:Checking exceptions
2024-04-24 12:46:11,516:INFO:Preloading libraries
2024-04-24 12:46:11,516:INFO:Copying training dataset
2024-04-24 12:46:11,517:INFO:Plot type: auc
2024-04-24 12:46:11,630:INFO:Fitting Model
2024-04-24 12:46:11,631:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:46:11,632:INFO:Scoring test/hold-out set
2024-04-24 12:46:11,790:INFO:Visual Rendered Successfully
2024-04-24 12:46:11,942:INFO:plot_model() successfully completed......................................
2024-04-24 12:46:11,942:INFO:Initializing evaluate_model()
2024-04-24 12:46:11,942:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 12:46:11,952:INFO:Initializing plot_model()
2024-04-24 12:46:11,952:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:46:11,952:INFO:Checking exceptions
2024-04-24 12:46:11,954:INFO:Preloading libraries
2024-04-24 12:46:11,955:INFO:Copying training dataset
2024-04-24 12:46:11,955:INFO:Plot type: pipeline
2024-04-24 12:46:12,026:INFO:Visual Rendered Successfully
2024-04-24 12:46:12,188:INFO:plot_model() successfully completed......................................
2024-04-24 12:46:12,191:INFO:Initializing predict_model()
2024-04-24 12:46:12,191:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B00A5700>)
2024-04-24 12:46:12,191:INFO:Checking exceptions
2024-04-24 12:46:12,191:INFO:Preloading libraries
2024-04-24 12:46:13,114:INFO:Initializing plot_model()
2024-04-24 12:46:13,114:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:46:13,114:INFO:Checking exceptions
2024-04-24 12:46:13,119:INFO:Preloading libraries
2024-04-24 12:46:13,120:INFO:Copying training dataset
2024-04-24 12:46:13,120:INFO:Plot type: confusion_matrix
2024-04-24 12:46:13,208:INFO:Fitting Model
2024-04-24 12:46:13,208:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 12:46:13,208:INFO:Scoring test/hold-out set
2024-04-24 12:46:13,284:INFO:Visual Rendered Successfully
2024-04-24 12:46:13,446:INFO:plot_model() successfully completed......................................
2024-04-24 12:46:13,446:INFO:Initializing plot_model()
2024-04-24 12:46:13,446:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:46:13,446:INFO:Checking exceptions
2024-04-24 12:46:13,450:INFO:Preloading libraries
2024-04-24 12:46:13,450:INFO:Copying training dataset
2024-04-24 12:46:13,450:INFO:Plot type: auc
2024-04-24 12:46:13,509:INFO:Fitting Model
2024-04-24 12:46:13,510:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 12:46:13,510:INFO:Scoring test/hold-out set
2024-04-24 12:46:13,635:INFO:Visual Rendered Successfully
2024-04-24 12:46:13,799:INFO:plot_model() successfully completed......................................
2024-04-24 12:46:13,800:INFO:Initializing evaluate_model()
2024-04-24 12:46:13,800:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 12:46:13,809:INFO:Initializing plot_model()
2024-04-24 12:46:13,809:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:46:13,809:INFO:Checking exceptions
2024-04-24 12:46:13,811:INFO:Preloading libraries
2024-04-24 12:46:13,811:INFO:Copying training dataset
2024-04-24 12:46:13,811:INFO:Plot type: pipeline
2024-04-24 12:46:13,881:INFO:Visual Rendered Successfully
2024-04-24 12:46:14,072:INFO:plot_model() successfully completed......................................
2024-04-24 12:46:14,076:INFO:Initializing tune_model()
2024-04-24 12:46:14,076:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>)
2024-04-24 12:46:14,077:INFO:Checking exceptions
2024-04-24 12:46:14,093:INFO:Copying training dataset
2024-04-24 12:46:14,099:INFO:Checking base model
2024-04-24 12:46:14,099:INFO:Base model : Decision Tree Classifier
2024-04-24 12:46:14,102:INFO:Declaring metric variables
2024-04-24 12:46:14,104:INFO:Defining Hyperparameters
2024-04-24 12:46:14,274:INFO:Tuning with n_jobs=-1
2024-04-24 12:46:14,274:INFO:Initializing RandomizedSearchCV
2024-04-24 12:46:15,630:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'gini'}
2024-04-24 12:46:15,631:INFO:Hyperparameter search completed
2024-04-24 12:46:15,631:INFO:SubProcess create_model() called ==================================
2024-04-24 12:46:15,631:INFO:Initializing create_model()
2024-04-24 12:46:15,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B3F8C310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 7, 'criterion': 'gini'})
2024-04-24 12:46:15,632:INFO:Checking exceptions
2024-04-24 12:46:15,632:INFO:Importing libraries
2024-04-24 12:46:15,632:INFO:Copying training dataset
2024-04-24 12:46:15,639:INFO:Defining folds
2024-04-24 12:46:15,639:INFO:Declaring metric variables
2024-04-24 12:46:15,643:INFO:Importing untrained model
2024-04-24 12:46:15,643:INFO:Declaring custom model
2024-04-24 12:46:15,646:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:46:15,651:INFO:Starting cross validation
2024-04-24 12:46:15,652:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:46:15,734:INFO:Calculating mean and std
2024-04-24 12:46:15,735:INFO:Creating metrics dataframe
2024-04-24 12:46:15,740:INFO:Finalizing model
2024-04-24 12:46:15,760:INFO:Uploading results into container
2024-04-24 12:46:15,761:INFO:Uploading model into container now
2024-04-24 12:46:15,761:INFO:_master_model_container: 3
2024-04-24 12:46:15,761:INFO:_display_container: 5
2024-04-24 12:46:15,762:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 12:46:15,762:INFO:create_model() successfully completed......................................
2024-04-24 12:46:15,927:INFO:SubProcess create_model() end ==================================
2024-04-24 12:46:15,927:INFO:choose_better activated
2024-04-24 12:46:15,931:INFO:SubProcess create_model() called ==================================
2024-04-24 12:46:15,932:INFO:Initializing create_model()
2024-04-24 12:46:15,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:46:15,932:INFO:Checking exceptions
2024-04-24 12:46:15,934:INFO:Importing libraries
2024-04-24 12:46:15,934:INFO:Copying training dataset
2024-04-24 12:46:15,938:INFO:Defining folds
2024-04-24 12:46:15,938:INFO:Declaring metric variables
2024-04-24 12:46:15,938:INFO:Importing untrained model
2024-04-24 12:46:15,938:INFO:Declaring custom model
2024-04-24 12:46:15,939:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:46:15,939:INFO:Starting cross validation
2024-04-24 12:46:15,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 12:46:16,061:INFO:Calculating mean and std
2024-04-24 12:46:16,062:INFO:Creating metrics dataframe
2024-04-24 12:46:16,063:INFO:Finalizing model
2024-04-24 12:46:16,111:INFO:Uploading results into container
2024-04-24 12:46:16,111:INFO:Uploading model into container now
2024-04-24 12:46:16,111:INFO:_master_model_container: 4
2024-04-24 12:46:16,111:INFO:_display_container: 6
2024-04-24 12:46:16,112:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 12:46:16,112:INFO:create_model() successfully completed......................................
2024-04-24 12:46:16,266:INFO:SubProcess create_model() end ==================================
2024-04-24 12:46:16,266:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best') result for F1 is 0.5427
2024-04-24 12:46:16,268:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best') result for F1 is 0.4569
2024-04-24 12:46:16,268:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best') is best model
2024-04-24 12:46:16,268:INFO:choose_better completed
2024-04-24 12:46:16,268:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 12:46:16,282:INFO:_master_model_container: 4
2024-04-24 12:46:16,282:INFO:_display_container: 5
2024-04-24 12:46:16,282:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 12:46:16,282:INFO:tune_model() successfully completed......................................
2024-04-24 12:46:16,487:INFO:Initializing predict_model()
2024-04-24 12:46:16,487:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B643E4C0>)
2024-04-24 12:46:16,487:INFO:Checking exceptions
2024-04-24 12:46:16,487:INFO:Preloading libraries
2024-04-24 12:46:16,782:INFO:Initializing finalize_model()
2024-04-24 12:46:16,782:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 12:46:16,783:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 12:46:16,787:INFO:Initializing create_model()
2024-04-24 12:46:16,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 12:46:16,788:INFO:Checking exceptions
2024-04-24 12:46:16,789:INFO:Importing libraries
2024-04-24 12:46:16,790:INFO:Copying training dataset
2024-04-24 12:46:16,790:INFO:Defining folds
2024-04-24 12:46:16,790:INFO:Declaring metric variables
2024-04-24 12:46:16,790:INFO:Importing untrained model
2024-04-24 12:46:16,790:INFO:Declaring custom model
2024-04-24 12:46:16,791:INFO:Decision Tree Classifier Imported successfully
2024-04-24 12:46:16,791:INFO:Cross validation set to False
2024-04-24 12:46:16,792:INFO:Fitting Model
2024-04-24 12:46:16,860:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False)
2024-04-24 12:46:16,861:INFO:create_model() successfully completed......................................
2024-04-24 12:46:17,010:INFO:_master_model_container: 4
2024-04-24 12:46:17,010:INFO:_display_container: 6
2024-04-24 12:46:17,015:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False)
2024-04-24 12:46:17,015:INFO:finalize_model() successfully completed......................................
2024-04-24 12:46:17,235:INFO:Initializing save_model()
2024-04-24 12:46:17,235:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 12:46:17,235:INFO:Adding model into prep_pipe
2024-04-24 12:46:17,235:WARNING:Only Model saved as it was a pipeline.
2024-04-24 12:46:17,239:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 12:46:17,243:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False)
2024-04-24 12:46:17,244:INFO:save_model() successfully completed......................................
2024-04-24 12:46:17,406:INFO:Initializing load_model()
2024-04-24 12:46:17,407:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 12:46:17,436:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 12:46:21,828:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\49242193.py:192: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 12:49:22,429:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3323153834.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:49:22,434:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3323153834.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_label'] = Y

2024-04-24 12:49:22,437:INFO:Initializing plot_model()
2024-04-24 12:49:22,437:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:49:22,437:INFO:Checking exceptions
2024-04-24 12:49:22,441:INFO:Preloading libraries
2024-04-24 12:49:22,441:INFO:Copying training dataset
2024-04-24 12:49:22,441:INFO:Plot type: confusion_matrix
2024-04-24 12:49:22,496:INFO:Fitting Model
2024-04-24 12:49:22,496:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:49:22,497:INFO:Scoring test/hold-out set
2024-04-24 12:49:22,554:INFO:Visual Rendered Successfully
2024-04-24 12:49:22,698:INFO:plot_model() successfully completed......................................
2024-04-24 12:49:22,701:INFO:Initializing plot_model()
2024-04-24 12:49:22,701:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:49:22,702:INFO:Checking exceptions
2024-04-24 12:49:22,705:INFO:Preloading libraries
2024-04-24 12:49:22,706:INFO:Copying training dataset
2024-04-24 12:49:22,706:INFO:Plot type: auc
2024-04-24 12:49:22,757:INFO:Fitting Model
2024-04-24 12:49:22,758:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:49:22,758:INFO:Scoring test/hold-out set
2024-04-24 12:49:22,864:INFO:Visual Rendered Successfully
2024-04-24 12:49:23,004:INFO:plot_model() successfully completed......................................
2024-04-24 12:49:23,009:INFO:Initializing evaluate_model()
2024-04-24 12:49:23,009:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 12:49:23,020:INFO:Initializing plot_model()
2024-04-24 12:49:23,020:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:49:23,020:INFO:Checking exceptions
2024-04-24 12:49:23,022:INFO:Preloading libraries
2024-04-24 12:49:23,023:INFO:Copying training dataset
2024-04-24 12:49:23,023:INFO:Plot type: pipeline
2024-04-24 12:49:23,074:INFO:Visual Rendered Successfully
2024-04-24 12:49:23,208:INFO:plot_model() successfully completed......................................
2024-04-24 12:50:32,826:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3916898065.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:50:32,833:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3916898065.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_label'] = Y

2024-04-24 12:50:32,837:INFO:Initializing plot_model()
2024-04-24 12:50:32,837:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:50:32,837:INFO:Checking exceptions
2024-04-24 12:50:32,842:INFO:Preloading libraries
2024-04-24 12:50:32,842:INFO:Copying training dataset
2024-04-24 12:50:32,842:INFO:Plot type: confusion_matrix
2024-04-24 12:50:32,901:INFO:Fitting Model
2024-04-24 12:50:32,901:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:50:32,901:INFO:Scoring test/hold-out set
2024-04-24 12:50:32,962:INFO:Visual Rendered Successfully
2024-04-24 12:50:33,118:INFO:plot_model() successfully completed......................................
2024-04-24 12:50:33,122:INFO:Initializing plot_model()
2024-04-24 12:50:33,122:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:50:33,123:INFO:Checking exceptions
2024-04-24 12:50:33,126:INFO:Preloading libraries
2024-04-24 12:50:33,127:INFO:Copying training dataset
2024-04-24 12:50:33,127:INFO:Plot type: auc
2024-04-24 12:50:33,178:INFO:Fitting Model
2024-04-24 12:50:33,179:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:50:33,179:INFO:Scoring test/hold-out set
2024-04-24 12:50:33,277:INFO:Visual Rendered Successfully
2024-04-24 12:50:33,422:INFO:plot_model() successfully completed......................................
2024-04-24 12:51:55,299:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\2562798719.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 12:51:55,304:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\2562798719.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_label'] = Y

2024-04-24 12:51:55,307:INFO:Initializing plot_model()
2024-04-24 12:51:55,307:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:51:55,307:INFO:Checking exceptions
2024-04-24 12:51:55,310:INFO:Preloading libraries
2024-04-24 12:51:55,311:INFO:Copying training dataset
2024-04-24 12:51:55,311:INFO:Plot type: confusion_matrix
2024-04-24 12:51:55,386:INFO:Fitting Model
2024-04-24 12:51:55,386:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:51:55,387:INFO:Scoring test/hold-out set
2024-04-24 12:51:55,447:INFO:Visual Rendered Successfully
2024-04-24 12:51:55,602:INFO:plot_model() successfully completed......................................
2024-04-24 12:51:55,605:INFO:Initializing plot_model()
2024-04-24 12:51:55,605:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:51:55,606:INFO:Checking exceptions
2024-04-24 12:51:55,610:INFO:Preloading libraries
2024-04-24 12:51:55,610:INFO:Copying training dataset
2024-04-24 12:51:55,610:INFO:Plot type: auc
2024-04-24 12:51:55,666:INFO:Fitting Model
2024-04-24 12:51:55,668:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:51:55,668:INFO:Scoring test/hold-out set
2024-04-24 12:51:55,778:INFO:Visual Rendered Successfully
2024-04-24 12:51:55,929:INFO:plot_model() successfully completed......................................
2024-04-24 12:51:55,932:INFO:Initializing evaluate_model()
2024-04-24 12:51:55,932:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 12:51:55,942:INFO:Initializing plot_model()
2024-04-24 12:51:55,942:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:51:55,942:INFO:Checking exceptions
2024-04-24 12:51:55,944:INFO:Preloading libraries
2024-04-24 12:51:55,944:INFO:Copying training dataset
2024-04-24 12:51:55,944:INFO:Plot type: pipeline
2024-04-24 12:51:55,996:INFO:Visual Rendered Successfully
2024-04-24 12:51:56,138:INFO:plot_model() successfully completed......................................
2024-04-24 12:56:50,146:INFO:Initializing plot_model()
2024-04-24 12:56:50,147:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:56:50,147:INFO:Checking exceptions
2024-04-24 12:57:33,122:INFO:Initializing plot_model()
2024-04-24 12:57:33,122:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 12:57:33,123:INFO:Checking exceptions
2024-04-24 12:57:33,125:INFO:Preloading libraries
2024-04-24 12:57:33,125:INFO:Copying training dataset
2024-04-24 12:57:33,126:INFO:Plot type: auc
2024-04-24 12:57:33,173:INFO:Fitting Model
2024-04-24 12:57:33,174:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 12:57:33,174:INFO:Scoring test/hold-out set
2024-04-24 12:57:33,275:INFO:Visual Rendered Successfully
2024-04-24 12:57:33,433:INFO:plot_model() successfully completed......................................
2024-04-24 13:16:51,452:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\1323274846.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 13:16:51,458:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\1323274846.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 13:16:51,466:INFO:Initializing plot_model()
2024-04-24 13:16:51,466:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:16:51,466:INFO:Checking exceptions
2024-04-24 13:16:51,471:INFO:Preloading libraries
2024-04-24 13:16:51,471:INFO:Copying training dataset
2024-04-24 13:16:51,471:INFO:Plot type: confusion_matrix
2024-04-24 13:16:51,525:INFO:Fitting Model
2024-04-24 13:16:51,526:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 13:16:51,526:INFO:Scoring test/hold-out set
2024-04-24 13:16:51,590:INFO:Visual Rendered Successfully
2024-04-24 13:16:51,758:INFO:plot_model() successfully completed......................................
2024-04-24 13:16:51,761:INFO:Initializing plot_model()
2024-04-24 13:16:51,761:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:16:51,761:INFO:Checking exceptions
2024-04-24 13:16:51,765:INFO:Preloading libraries
2024-04-24 13:16:51,766:INFO:Copying training dataset
2024-04-24 13:16:51,766:INFO:Plot type: auc
2024-04-24 13:16:51,821:INFO:Fitting Model
2024-04-24 13:16:51,821:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 13:16:51,822:INFO:Scoring test/hold-out set
2024-04-24 13:16:51,936:INFO:Visual Rendered Successfully
2024-04-24 13:16:52,082:INFO:plot_model() successfully completed......................................
2024-04-24 13:16:52,086:INFO:Initializing evaluate_model()
2024-04-24 13:16:52,086:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 13:16:52,097:INFO:Initializing plot_model()
2024-04-24 13:16:52,098:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:16:52,098:INFO:Checking exceptions
2024-04-24 13:16:52,100:INFO:Preloading libraries
2024-04-24 13:16:52,101:INFO:Copying training dataset
2024-04-24 13:16:52,101:INFO:Plot type: pipeline
2024-04-24 13:16:52,153:INFO:Visual Rendered Successfully
2024-04-24 13:16:52,296:INFO:plot_model() successfully completed......................................
2024-04-24 13:19:10,544:INFO:Initializing predict_model()
2024-04-24 13:19:10,544:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B6497B80>)
2024-04-24 13:19:10,544:INFO:Checking exceptions
2024-04-24 13:19:10,544:INFO:Preloading libraries
2024-04-24 13:19:28,111:INFO:Initializing predict_model()
2024-04-24 13:19:28,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B2D1FDC0>)
2024-04-24 13:19:28,111:INFO:Checking exceptions
2024-04-24 13:19:28,111:INFO:Preloading libraries
2024-04-24 13:31:39,752:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\742790881.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 13:31:39,759:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\742790881.py:28: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 13:31:39,763:INFO:Initializing plot_model()
2024-04-24 13:31:39,763:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:31:39,763:INFO:Checking exceptions
2024-04-24 13:31:39,767:INFO:Preloading libraries
2024-04-24 13:31:39,768:INFO:Copying training dataset
2024-04-24 13:31:39,768:INFO:Plot type: confusion_matrix
2024-04-24 13:31:39,830:INFO:Fitting Model
2024-04-24 13:31:39,830:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 13:31:39,831:INFO:Scoring test/hold-out set
2024-04-24 13:31:39,893:INFO:Visual Rendered Successfully
2024-04-24 13:31:40,057:INFO:plot_model() successfully completed......................................
2024-04-24 13:31:40,063:INFO:Initializing plot_model()
2024-04-24 13:31:40,063:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:31:40,064:INFO:Checking exceptions
2024-04-24 13:31:40,068:INFO:Preloading libraries
2024-04-24 13:31:40,068:INFO:Copying training dataset
2024-04-24 13:31:40,069:INFO:Plot type: auc
2024-04-24 13:31:40,135:INFO:Fitting Model
2024-04-24 13:31:40,136:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 13:31:40,136:INFO:Scoring test/hold-out set
2024-04-24 13:31:40,246:INFO:Visual Rendered Successfully
2024-04-24 13:31:40,408:INFO:plot_model() successfully completed......................................
2024-04-24 13:31:40,412:INFO:Initializing evaluate_model()
2024-04-24 13:31:40,412:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 13:31:40,423:INFO:Initializing plot_model()
2024-04-24 13:31:40,423:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:31:40,423:INFO:Checking exceptions
2024-04-24 13:31:40,425:INFO:Preloading libraries
2024-04-24 13:31:40,426:INFO:Copying training dataset
2024-04-24 13:31:40,426:INFO:Plot type: pipeline
2024-04-24 13:31:40,498:INFO:Visual Rendered Successfully
2024-04-24 13:31:40,651:INFO:plot_model() successfully completed......................................
2024-04-24 13:33:35,999:INFO:Initializing plot_model()
2024-04-24 13:33:35,999:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=7888, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, system=True)
2024-04-24 13:33:35,999:INFO:Checking exceptions
2024-04-24 13:33:36,003:INFO:Preloading libraries
2024-04-24 13:33:36,003:INFO:Copying training dataset
2024-04-24 13:33:36,004:INFO:Plot type: auc
2024-04-24 13:33:36,056:INFO:Fitting Model
2024-04-24 13:33:36,056:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 13:33:36,057:INFO:Scoring test/hold-out set
2024-04-24 13:33:36,159:INFO:Visual Rendered Successfully
2024-04-24 13:33:36,306:INFO:plot_model() successfully completed......................................
2024-04-24 13:50:40,778:INFO:Initializing tune_model()
2024-04-24 13:50:40,778:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>)
2024-04-24 13:50:40,778:INFO:Checking exceptions
2024-04-24 13:50:40,792:INFO:Copying training dataset
2024-04-24 13:50:40,795:INFO:Checking base model
2024-04-24 13:50:40,795:INFO:Base model : Decision Tree Classifier
2024-04-24 13:50:40,798:INFO:Declaring metric variables
2024-04-24 13:50:40,800:INFO:Defining Hyperparameters
2024-04-24 13:50:40,969:INFO:Tuning with n_jobs=-1
2024-04-24 13:50:40,969:INFO:Initializing RandomizedSearchCV
2024-04-24 13:50:45,849:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'gini'}
2024-04-24 13:50:45,849:INFO:Hyperparameter search completed
2024-04-24 13:50:45,850:INFO:SubProcess create_model() called ==================================
2024-04-24 13:50:45,850:INFO:Initializing create_model()
2024-04-24 13:50:45,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B38C09A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 7, 'criterion': 'gini'})
2024-04-24 13:50:45,850:INFO:Checking exceptions
2024-04-24 13:50:45,850:INFO:Importing libraries
2024-04-24 13:50:45,851:INFO:Copying training dataset
2024-04-24 13:50:45,856:INFO:Defining folds
2024-04-24 13:50:45,856:INFO:Declaring metric variables
2024-04-24 13:50:45,859:INFO:Importing untrained model
2024-04-24 13:50:45,859:INFO:Declaring custom model
2024-04-24 13:50:45,863:INFO:Decision Tree Classifier Imported successfully
2024-04-24 13:50:45,869:INFO:Starting cross validation
2024-04-24 13:50:45,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 13:50:45,943:INFO:Calculating mean and std
2024-04-24 13:50:45,943:INFO:Creating metrics dataframe
2024-04-24 13:50:45,948:INFO:Finalizing model
2024-04-24 13:50:45,967:INFO:Uploading results into container
2024-04-24 13:50:45,968:INFO:Uploading model into container now
2024-04-24 13:50:45,969:INFO:_master_model_container: 5
2024-04-24 13:50:45,969:INFO:_display_container: 9
2024-04-24 13:50:45,969:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 13:50:45,969:INFO:create_model() successfully completed......................................
2024-04-24 13:50:46,121:INFO:SubProcess create_model() end ==================================
2024-04-24 13:50:46,121:INFO:choose_better activated
2024-04-24 13:50:46,124:INFO:SubProcess create_model() called ==================================
2024-04-24 13:50:46,125:INFO:Initializing create_model()
2024-04-24 13:50:46,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 13:50:46,125:INFO:Checking exceptions
2024-04-24 13:50:46,126:INFO:Importing libraries
2024-04-24 13:50:46,126:INFO:Copying training dataset
2024-04-24 13:50:46,131:INFO:Defining folds
2024-04-24 13:50:46,131:INFO:Declaring metric variables
2024-04-24 13:50:46,131:INFO:Importing untrained model
2024-04-24 13:50:46,131:INFO:Declaring custom model
2024-04-24 13:50:46,132:INFO:Decision Tree Classifier Imported successfully
2024-04-24 13:50:46,132:INFO:Starting cross validation
2024-04-24 13:50:46,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 13:50:46,281:INFO:Calculating mean and std
2024-04-24 13:50:46,281:INFO:Creating metrics dataframe
2024-04-24 13:50:46,283:INFO:Finalizing model
2024-04-24 13:50:46,334:INFO:Uploading results into container
2024-04-24 13:50:46,334:INFO:Uploading model into container now
2024-04-24 13:50:46,335:INFO:_master_model_container: 6
2024-04-24 13:50:46,335:INFO:_display_container: 10
2024-04-24 13:50:46,335:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 13:50:46,335:INFO:create_model() successfully completed......................................
2024-04-24 13:50:46,482:INFO:SubProcess create_model() end ==================================
2024-04-24 13:50:46,482:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best') result for F1 is 0.5427
2024-04-24 13:50:46,483:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=4,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best') result for F1 is 0.4569
2024-04-24 13:50:46,483:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best') is best model
2024-04-24 13:50:46,483:INFO:choose_better completed
2024-04-24 13:50:46,483:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 13:50:46,491:INFO:_master_model_container: 6
2024-04-24 13:50:46,491:INFO:_display_container: 9
2024-04-24 13:50:46,492:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best')
2024-04-24 13:50:46,492:INFO:tune_model() successfully completed......................................
2024-04-24 13:50:46,635:INFO:Initializing predict_model()
2024-04-24 13:50:46,635:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B50AB220>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251AE874670>)
2024-04-24 13:50:46,635:INFO:Checking exceptions
2024-04-24 13:50:46,636:INFO:Preloading libraries
2024-04-24 14:02:14,416:INFO:PyCaret ClassificationExperiment
2024-04-24 14:02:14,416:INFO:Logging name: clf-default-name
2024-04-24 14:02:14,416:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 14:02:14,416:INFO:version 3.2.0
2024-04-24 14:02:14,416:INFO:Initializing setup()
2024-04-24 14:02:14,416:INFO:self.USI: fe43
2024-04-24 14:02:14,416:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 14:02:14,416:INFO:Checking environment
2024-04-24 14:02:14,416:INFO:python_version: 3.9.19
2024-04-24 14:02:14,416:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 14:02:14,416:INFO:machine: AMD64
2024-04-24 14:02:14,416:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 14:02:14,416:INFO:Memory: svmem(total=33897811968, available=10599227392, percent=68.7, used=23298584576, free=10599227392)
2024-04-24 14:02:14,416:INFO:Physical Core: 14
2024-04-24 14:02:14,416:INFO:Logical Core: 20
2024-04-24 14:02:14,416:INFO:Checking libraries
2024-04-24 14:02:14,416:INFO:System:
2024-04-24 14:02:14,416:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 14:02:14,416:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 14:02:14,416:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 14:02:14,416:INFO:PyCaret required dependencies:
2024-04-24 14:02:14,416:INFO:                 pip: 23.3.1
2024-04-24 14:02:14,416:INFO:          setuptools: 68.2.2
2024-04-24 14:02:14,416:INFO:             pycaret: 3.2.0
2024-04-24 14:02:14,416:INFO:             IPython: 8.15.0
2024-04-24 14:02:14,416:INFO:          ipywidgets: 8.1.2
2024-04-24 14:02:14,416:INFO:                tqdm: 4.65.0
2024-04-24 14:02:14,416:INFO:               numpy: 1.25.2
2024-04-24 14:02:14,416:INFO:              pandas: 1.5.3
2024-04-24 14:02:14,416:INFO:              jinja2: 3.1.3
2024-04-24 14:02:14,416:INFO:               scipy: 1.11.4
2024-04-24 14:02:14,416:INFO:              joblib: 1.2.0
2024-04-24 14:02:14,417:INFO:             sklearn: 1.2.2
2024-04-24 14:02:14,417:INFO:                pyod: 1.0.9
2024-04-24 14:02:14,417:INFO:            imblearn: 0.11.0
2024-04-24 14:02:14,417:INFO:   category_encoders: 2.6.3
2024-04-24 14:02:14,417:INFO:            lightgbm: 4.1.0
2024-04-24 14:02:14,417:INFO:               numba: 0.59.1
2024-04-24 14:02:14,417:INFO:            requests: 2.31.0
2024-04-24 14:02:14,417:INFO:          matplotlib: 3.8.4
2024-04-24 14:02:14,417:INFO:          scikitplot: 0.3.7
2024-04-24 14:02:14,417:INFO:         yellowbrick: 1.5
2024-04-24 14:02:14,417:INFO:              plotly: 5.19.0
2024-04-24 14:02:14,417:INFO:    plotly-resampler: Not installed
2024-04-24 14:02:14,417:INFO:             kaleido: 0.2.1
2024-04-24 14:02:14,417:INFO:           schemdraw: 0.15
2024-04-24 14:02:14,417:INFO:         statsmodels: 0.14.0
2024-04-24 14:02:14,417:INFO:              sktime: 0.21.1
2024-04-24 14:02:14,417:INFO:               tbats: 1.1.3
2024-04-24 14:02:14,417:INFO:            pmdarima: 2.0.4
2024-04-24 14:02:14,417:INFO:              psutil: 5.9.0
2024-04-24 14:02:14,417:INFO:          markupsafe: 2.1.3
2024-04-24 14:02:14,417:INFO:             pickle5: Not installed
2024-04-24 14:02:14,417:INFO:         cloudpickle: 2.2.1
2024-04-24 14:02:14,417:INFO:         deprecation: 2.1.0
2024-04-24 14:02:14,417:INFO:              xxhash: 2.0.2
2024-04-24 14:02:14,417:INFO:           wurlitzer: 3.0.3
2024-04-24 14:02:14,417:INFO:PyCaret optional dependencies:
2024-04-24 14:02:14,417:INFO:                shap: Not installed
2024-04-24 14:02:14,417:INFO:           interpret: Not installed
2024-04-24 14:02:14,417:INFO:                umap: 0.5.3
2024-04-24 14:02:14,417:INFO:     ydata_profiling: Not installed
2024-04-24 14:02:14,417:INFO:  explainerdashboard: Not installed
2024-04-24 14:02:14,417:INFO:             autoviz: Not installed
2024-04-24 14:02:14,417:INFO:           fairlearn: Not installed
2024-04-24 14:02:14,417:INFO:          deepchecks: Not installed
2024-04-24 14:02:14,417:INFO:             xgboost: 1.7.6
2024-04-24 14:02:14,417:INFO:            catboost: 1.2.3
2024-04-24 14:02:14,417:INFO:              kmodes: 0.12.2
2024-04-24 14:02:14,417:INFO:             mlxtend: 0.23.1
2024-04-24 14:02:14,417:INFO:       statsforecast: Not installed
2024-04-24 14:02:14,417:INFO:        tune_sklearn: Not installed
2024-04-24 14:02:14,417:INFO:                 ray: Not installed
2024-04-24 14:02:14,417:INFO:            hyperopt: Not installed
2024-04-24 14:02:14,417:INFO:              optuna: Not installed
2024-04-24 14:02:14,417:INFO:               skopt: Not installed
2024-04-24 14:02:14,417:INFO:              mlflow: 2.9.2
2024-04-24 14:02:14,417:INFO:              gradio: Not installed
2024-04-24 14:02:14,417:INFO:             fastapi: Not installed
2024-04-24 14:02:14,417:INFO:             uvicorn: Not installed
2024-04-24 14:02:14,417:INFO:              m2cgen: Not installed
2024-04-24 14:02:14,417:INFO:           evidently: Not installed
2024-04-24 14:02:14,417:INFO:               fugue: Not installed
2024-04-24 14:02:14,418:INFO:           streamlit: 1.32.0
2024-04-24 14:02:14,418:INFO:             prophet: Not installed
2024-04-24 14:02:14,418:INFO:None
2024-04-24 14:02:14,418:INFO:Set up data.
2024-04-24 14:02:14,423:INFO:Set up folding strategy.
2024-04-24 14:02:14,424:INFO:Set up train/test split.
2024-04-24 14:02:14,424:INFO:Set up data.
2024-04-24 14:02:14,427:INFO:Set up index.
2024-04-24 14:02:14,427:INFO:Assigning column types.
2024-04-24 14:03:01,000:INFO:PyCaret ClassificationExperiment
2024-04-24 14:03:01,000:INFO:Logging name: clf-default-name
2024-04-24 14:03:01,000:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 14:03:01,000:INFO:version 3.2.0
2024-04-24 14:03:01,000:INFO:Initializing setup()
2024-04-24 14:03:01,000:INFO:self.USI: bb84
2024-04-24 14:03:01,000:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 14:03:01,000:INFO:Checking environment
2024-04-24 14:03:01,000:INFO:python_version: 3.9.19
2024-04-24 14:03:01,000:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 14:03:01,000:INFO:machine: AMD64
2024-04-24 14:03:01,000:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 14:03:01,000:INFO:Memory: svmem(total=33897811968, available=10608500736, percent=68.7, used=23289311232, free=10608500736)
2024-04-24 14:03:01,000:INFO:Physical Core: 14
2024-04-24 14:03:01,000:INFO:Logical Core: 20
2024-04-24 14:03:01,000:INFO:Checking libraries
2024-04-24 14:03:01,000:INFO:System:
2024-04-24 14:03:01,000:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 14:03:01,000:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 14:03:01,000:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 14:03:01,000:INFO:PyCaret required dependencies:
2024-04-24 14:03:01,000:INFO:                 pip: 23.3.1
2024-04-24 14:03:01,001:INFO:          setuptools: 68.2.2
2024-04-24 14:03:01,001:INFO:             pycaret: 3.2.0
2024-04-24 14:03:01,001:INFO:             IPython: 8.15.0
2024-04-24 14:03:01,001:INFO:          ipywidgets: 8.1.2
2024-04-24 14:03:01,001:INFO:                tqdm: 4.65.0
2024-04-24 14:03:01,001:INFO:               numpy: 1.25.2
2024-04-24 14:03:01,001:INFO:              pandas: 1.5.3
2024-04-24 14:03:01,001:INFO:              jinja2: 3.1.3
2024-04-24 14:03:01,001:INFO:               scipy: 1.11.4
2024-04-24 14:03:01,001:INFO:              joblib: 1.2.0
2024-04-24 14:03:01,001:INFO:             sklearn: 1.2.2
2024-04-24 14:03:01,001:INFO:                pyod: 1.0.9
2024-04-24 14:03:01,001:INFO:            imblearn: 0.11.0
2024-04-24 14:03:01,001:INFO:   category_encoders: 2.6.3
2024-04-24 14:03:01,001:INFO:            lightgbm: 4.1.0
2024-04-24 14:03:01,001:INFO:               numba: 0.59.1
2024-04-24 14:03:01,001:INFO:            requests: 2.31.0
2024-04-24 14:03:01,001:INFO:          matplotlib: 3.8.4
2024-04-24 14:03:01,001:INFO:          scikitplot: 0.3.7
2024-04-24 14:03:01,001:INFO:         yellowbrick: 1.5
2024-04-24 14:03:01,001:INFO:              plotly: 5.19.0
2024-04-24 14:03:01,001:INFO:    plotly-resampler: Not installed
2024-04-24 14:03:01,001:INFO:             kaleido: 0.2.1
2024-04-24 14:03:01,001:INFO:           schemdraw: 0.15
2024-04-24 14:03:01,001:INFO:         statsmodels: 0.14.0
2024-04-24 14:03:01,001:INFO:              sktime: 0.21.1
2024-04-24 14:03:01,001:INFO:               tbats: 1.1.3
2024-04-24 14:03:01,001:INFO:            pmdarima: 2.0.4
2024-04-24 14:03:01,001:INFO:              psutil: 5.9.0
2024-04-24 14:03:01,001:INFO:          markupsafe: 2.1.3
2024-04-24 14:03:01,001:INFO:             pickle5: Not installed
2024-04-24 14:03:01,001:INFO:         cloudpickle: 2.2.1
2024-04-24 14:03:01,001:INFO:         deprecation: 2.1.0
2024-04-24 14:03:01,001:INFO:              xxhash: 2.0.2
2024-04-24 14:03:01,001:INFO:           wurlitzer: 3.0.3
2024-04-24 14:03:01,001:INFO:PyCaret optional dependencies:
2024-04-24 14:03:01,001:INFO:                shap: Not installed
2024-04-24 14:03:01,001:INFO:           interpret: Not installed
2024-04-24 14:03:01,001:INFO:                umap: 0.5.3
2024-04-24 14:03:01,001:INFO:     ydata_profiling: Not installed
2024-04-24 14:03:01,001:INFO:  explainerdashboard: Not installed
2024-04-24 14:03:01,001:INFO:             autoviz: Not installed
2024-04-24 14:03:01,001:INFO:           fairlearn: Not installed
2024-04-24 14:03:01,001:INFO:          deepchecks: Not installed
2024-04-24 14:03:01,001:INFO:             xgboost: 1.7.6
2024-04-24 14:03:01,001:INFO:            catboost: 1.2.3
2024-04-24 14:03:01,001:INFO:              kmodes: 0.12.2
2024-04-24 14:03:01,001:INFO:             mlxtend: 0.23.1
2024-04-24 14:03:01,001:INFO:       statsforecast: Not installed
2024-04-24 14:03:01,001:INFO:        tune_sklearn: Not installed
2024-04-24 14:03:01,002:INFO:                 ray: Not installed
2024-04-24 14:03:01,002:INFO:            hyperopt: Not installed
2024-04-24 14:03:01,002:INFO:              optuna: Not installed
2024-04-24 14:03:01,002:INFO:               skopt: Not installed
2024-04-24 14:03:01,002:INFO:              mlflow: 2.9.2
2024-04-24 14:03:01,002:INFO:              gradio: Not installed
2024-04-24 14:03:01,002:INFO:             fastapi: Not installed
2024-04-24 14:03:01,002:INFO:             uvicorn: Not installed
2024-04-24 14:03:01,002:INFO:              m2cgen: Not installed
2024-04-24 14:03:01,002:INFO:           evidently: Not installed
2024-04-24 14:03:01,002:INFO:               fugue: Not installed
2024-04-24 14:03:01,002:INFO:           streamlit: 1.32.0
2024-04-24 14:03:01,002:INFO:             prophet: Not installed
2024-04-24 14:03:01,002:INFO:None
2024-04-24 14:03:01,002:INFO:Set up data.
2024-04-24 14:03:01,006:INFO:Set up folding strategy.
2024-04-24 14:03:01,006:INFO:Set up train/test split.
2024-04-24 14:03:01,006:INFO:Set up data.
2024-04-24 14:03:01,008:INFO:Set up index.
2024-04-24 14:03:01,009:INFO:Assigning column types.
2024-04-24 14:03:01,011:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 14:03:01,035:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 14:03:01,035:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:03:01,050:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,051:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 14:03:01,077:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:03:01,093:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,094:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,095:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 14:03:01,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:03:01,136:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,138:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,164:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:03:01,180:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,181:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,182:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 14:03:01,222:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,224:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,266:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,268:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,269:INFO:Preparing preprocessing pipeline...
2024-04-24 14:03:01,271:INFO:Set up simple imputation.
2024-04-24 14:03:01,273:INFO:Set up encoding of ordinal features.
2024-04-24 14:03:01,274:INFO:Set up encoding of categorical features.
2024-04-24 14:03:01,274:INFO:Set up feature normalization.
2024-04-24 14:03:01,351:INFO:Finished creating preprocessing pipeline.
2024-04-24 14:03:01,366:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 14:03:01,366:INFO:Creating final display dataframe.
2024-04-24 14:03:01,526:INFO:Setup _display_container:                     Description             Value
0                    Session id              1168
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape       (20285, 13)
5   Transformed train set shape       (16228, 13)
6    Transformed test set shape        (4057, 13)
7              Ordinal features                 1
8              Numeric features                 4
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              bb84
2024-04-24 14:03:01,576:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,578:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,620:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:03:01,622:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:03:01,623:INFO:setup() successfully completed in 0.63s...............
2024-04-24 14:03:01,623:INFO:Initializing compare_models()
2024-04-24 14:03:01,623:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 14:03:01,623:INFO:Checking exceptions
2024-04-24 14:03:01,626:INFO:Preparing display monitor
2024-04-24 14:03:01,644:INFO:Initializing Logistic Regression
2024-04-24 14:03:01,644:INFO:Total runtime is 0.0 minutes
2024-04-24 14:03:01,647:INFO:SubProcess create_model() called ==================================
2024-04-24 14:03:01,647:INFO:Initializing create_model()
2024-04-24 14:03:01,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B9185730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:03:01,647:INFO:Checking exceptions
2024-04-24 14:03:01,647:INFO:Importing libraries
2024-04-24 14:03:01,647:INFO:Copying training dataset
2024-04-24 14:03:01,652:INFO:Defining folds
2024-04-24 14:03:01,652:INFO:Declaring metric variables
2024-04-24 14:03:01,654:INFO:Importing untrained model
2024-04-24 14:03:01,656:INFO:Logistic Regression Imported successfully
2024-04-24 14:03:01,660:INFO:Starting cross validation
2024-04-24 14:03:01,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:03:06,077:INFO:Calculating mean and std
2024-04-24 14:03:06,080:INFO:Creating metrics dataframe
2024-04-24 14:03:06,083:INFO:Uploading results into container
2024-04-24 14:03:06,084:INFO:Uploading model into container now
2024-04-24 14:03:06,084:INFO:_master_model_container: 1
2024-04-24 14:03:06,085:INFO:_display_container: 2
2024-04-24 14:03:06,085:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 14:03:06,085:INFO:create_model() successfully completed......................................
2024-04-24 14:03:06,278:INFO:SubProcess create_model() end ==================================
2024-04-24 14:03:06,278:INFO:Creating metrics dataframe
2024-04-24 14:03:06,289:INFO:Initializing Decision Tree Classifier
2024-04-24 14:03:06,289:INFO:Total runtime is 0.07741592725118002 minutes
2024-04-24 14:03:06,292:INFO:SubProcess create_model() called ==================================
2024-04-24 14:03:06,292:INFO:Initializing create_model()
2024-04-24 14:03:06,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B9185730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:03:06,292:INFO:Checking exceptions
2024-04-24 14:03:06,293:INFO:Importing libraries
2024-04-24 14:03:06,293:INFO:Copying training dataset
2024-04-24 14:03:06,299:INFO:Defining folds
2024-04-24 14:03:06,299:INFO:Declaring metric variables
2024-04-24 14:03:06,303:INFO:Importing untrained model
2024-04-24 14:03:06,305:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:03:06,310:INFO:Starting cross validation
2024-04-24 14:03:06,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:03:09,638:INFO:Calculating mean and std
2024-04-24 14:03:09,640:INFO:Creating metrics dataframe
2024-04-24 14:03:09,645:INFO:Uploading results into container
2024-04-24 14:03:09,646:INFO:Uploading model into container now
2024-04-24 14:03:09,646:INFO:_master_model_container: 2
2024-04-24 14:03:09,647:INFO:_display_container: 2
2024-04-24 14:03:09,647:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best')
2024-04-24 14:03:09,648:INFO:create_model() successfully completed......................................
2024-04-24 14:03:09,832:INFO:SubProcess create_model() end ==================================
2024-04-24 14:03:09,832:INFO:Creating metrics dataframe
2024-04-24 14:03:09,849:INFO:Initializing create_model()
2024-04-24 14:03:09,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:03:09,849:INFO:Checking exceptions
2024-04-24 14:03:09,851:INFO:Importing libraries
2024-04-24 14:03:09,851:INFO:Copying training dataset
2024-04-24 14:03:09,855:INFO:Defining folds
2024-04-24 14:03:09,855:INFO:Declaring metric variables
2024-04-24 14:03:09,855:INFO:Importing untrained model
2024-04-24 14:03:09,855:INFO:Declaring custom model
2024-04-24 14:03:09,855:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:03:09,856:INFO:Cross validation set to False
2024-04-24 14:03:09,856:INFO:Fitting Model
2024-04-24 14:03:09,962:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best')
2024-04-24 14:03:09,962:INFO:create_model() successfully completed......................................
2024-04-24 14:03:10,149:INFO:Initializing create_model()
2024-04-24 14:03:10,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:03:10,150:INFO:Checking exceptions
2024-04-24 14:03:10,151:INFO:Importing libraries
2024-04-24 14:03:10,151:INFO:Copying training dataset
2024-04-24 14:03:10,156:INFO:Defining folds
2024-04-24 14:03:10,156:INFO:Declaring metric variables
2024-04-24 14:03:10,156:INFO:Importing untrained model
2024-04-24 14:03:10,156:INFO:Declaring custom model
2024-04-24 14:03:10,157:INFO:Logistic Regression Imported successfully
2024-04-24 14:03:10,158:INFO:Cross validation set to False
2024-04-24 14:03:10,158:INFO:Fitting Model
2024-04-24 14:03:10,226:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 14:03:10,226:INFO:create_model() successfully completed......................................
2024-04-24 14:03:10,443:INFO:_master_model_container: 2
2024-04-24 14:03:10,444:INFO:_display_container: 2
2024-04-24 14:03:10,444:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 14:03:10,444:INFO:compare_models() successfully completed......................................
2024-04-24 14:03:10,444:INFO:Initializing predict_model()
2024-04-24 14:03:10,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B707B670>)
2024-04-24 14:03:10,444:INFO:Checking exceptions
2024-04-24 14:03:10,444:INFO:Preloading libraries
2024-04-24 14:03:11,260:INFO:Initializing plot_model()
2024-04-24 14:03:11,260:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, system=True)
2024-04-24 14:03:11,260:INFO:Checking exceptions
2024-04-24 14:03:11,264:INFO:Preloading libraries
2024-04-24 14:03:11,264:INFO:Copying training dataset
2024-04-24 14:03:11,264:INFO:Plot type: confusion_matrix
2024-04-24 14:03:11,424:INFO:Fitting Model
2024-04-24 14:03:11,425:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 14:03:11,425:INFO:Scoring test/hold-out set
2024-04-24 14:03:11,493:INFO:Visual Rendered Successfully
2024-04-24 14:03:11,651:INFO:plot_model() successfully completed......................................
2024-04-24 14:03:11,651:INFO:Initializing plot_model()
2024-04-24 14:03:11,651:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, system=True)
2024-04-24 14:03:11,651:INFO:Checking exceptions
2024-04-24 14:03:11,656:INFO:Preloading libraries
2024-04-24 14:03:11,657:INFO:Copying training dataset
2024-04-24 14:03:11,657:INFO:Plot type: auc
2024-04-24 14:03:11,823:INFO:Fitting Model
2024-04-24 14:03:11,823:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 14:03:11,824:INFO:Scoring test/hold-out set
2024-04-24 14:03:11,944:INFO:Visual Rendered Successfully
2024-04-24 14:03:12,104:INFO:plot_model() successfully completed......................................
2024-04-24 14:03:12,105:INFO:Initializing evaluate_model()
2024-04-24 14:03:12,105:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 14:03:12,113:INFO:Initializing plot_model()
2024-04-24 14:03:12,113:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, system=True)
2024-04-24 14:03:12,113:INFO:Checking exceptions
2024-04-24 14:03:12,115:INFO:Preloading libraries
2024-04-24 14:03:12,115:INFO:Copying training dataset
2024-04-24 14:03:12,115:INFO:Plot type: pipeline
2024-04-24 14:03:12,203:INFO:Visual Rendered Successfully
2024-04-24 14:03:12,368:INFO:plot_model() successfully completed......................................
2024-04-24 14:03:12,371:INFO:Initializing predict_model()
2024-04-24 14:03:12,371:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B6EB3DC0>)
2024-04-24 14:03:12,372:INFO:Checking exceptions
2024-04-24 14:03:12,372:INFO:Preloading libraries
2024-04-24 14:03:13,401:INFO:Initializing plot_model()
2024-04-24 14:03:13,401:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, system=True)
2024-04-24 14:03:13,402:INFO:Checking exceptions
2024-04-24 14:03:13,405:INFO:Preloading libraries
2024-04-24 14:03:13,406:INFO:Copying training dataset
2024-04-24 14:03:13,406:INFO:Plot type: confusion_matrix
2024-04-24 14:03:13,573:INFO:Fitting Model
2024-04-24 14:03:13,573:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 14:03:13,574:INFO:Scoring test/hold-out set
2024-04-24 14:03:13,640:INFO:Visual Rendered Successfully
2024-04-24 14:03:13,809:INFO:plot_model() successfully completed......................................
2024-04-24 14:03:13,810:INFO:Initializing plot_model()
2024-04-24 14:03:13,810:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, system=True)
2024-04-24 14:03:13,810:INFO:Checking exceptions
2024-04-24 14:03:13,814:INFO:Preloading libraries
2024-04-24 14:03:13,814:INFO:Copying training dataset
2024-04-24 14:03:13,814:INFO:Plot type: auc
2024-04-24 14:03:13,990:INFO:Fitting Model
2024-04-24 14:03:13,990:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 14:03:13,990:INFO:Scoring test/hold-out set
2024-04-24 14:03:14,106:INFO:Visual Rendered Successfully
2024-04-24 14:03:14,264:INFO:plot_model() successfully completed......................................
2024-04-24 14:03:14,264:INFO:Initializing evaluate_model()
2024-04-24 14:03:14,264:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 14:03:14,272:INFO:Initializing plot_model()
2024-04-24 14:03:14,272:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1168, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, system=True)
2024-04-24 14:03:14,272:INFO:Checking exceptions
2024-04-24 14:03:14,274:INFO:Preloading libraries
2024-04-24 14:03:14,274:INFO:Copying training dataset
2024-04-24 14:03:14,274:INFO:Plot type: pipeline
2024-04-24 14:03:14,350:INFO:Visual Rendered Successfully
2024-04-24 14:03:14,520:INFO:plot_model() successfully completed......................................
2024-04-24 14:03:14,523:INFO:Initializing tune_model()
2024-04-24 14:03:14,523:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>)
2024-04-24 14:03:14,523:INFO:Checking exceptions
2024-04-24 14:03:14,534:INFO:Copying training dataset
2024-04-24 14:03:14,537:INFO:Checking base model
2024-04-24 14:03:14,537:INFO:Base model : Decision Tree Classifier
2024-04-24 14:03:14,540:INFO:Declaring metric variables
2024-04-24 14:03:14,542:INFO:Defining Hyperparameters
2024-04-24 14:03:14,710:INFO:Tuning with n_jobs=-1
2024-04-24 14:03:14,710:INFO:Initializing RandomizedSearchCV
2024-04-24 14:03:15,278:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 1, 'actual_estimator__criterion': 'gini'}
2024-04-24 14:03:15,278:INFO:Hyperparameter search completed
2024-04-24 14:03:15,278:INFO:SubProcess create_model() called ==================================
2024-04-24 14:03:15,279:INFO:Initializing create_model()
2024-04-24 14:03:15,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B8EDDB50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 1, 'criterion': 'gini'})
2024-04-24 14:03:15,279:INFO:Checking exceptions
2024-04-24 14:03:15,279:INFO:Importing libraries
2024-04-24 14:03:15,279:INFO:Copying training dataset
2024-04-24 14:03:15,283:INFO:Defining folds
2024-04-24 14:03:15,283:INFO:Declaring metric variables
2024-04-24 14:03:15,286:INFO:Importing untrained model
2024-04-24 14:03:15,286:INFO:Declaring custom model
2024-04-24 14:03:15,289:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:03:15,294:INFO:Starting cross validation
2024-04-24 14:03:15,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:03:15,482:INFO:Calculating mean and std
2024-04-24 14:03:15,482:INFO:Creating metrics dataframe
2024-04-24 14:03:15,486:INFO:Finalizing model
2024-04-24 14:03:15,554:INFO:Uploading results into container
2024-04-24 14:03:15,555:INFO:Uploading model into container now
2024-04-24 14:03:15,556:INFO:_master_model_container: 3
2024-04-24 14:03:15,556:INFO:_display_container: 5
2024-04-24 14:03:15,556:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best')
2024-04-24 14:03:15,556:INFO:create_model() successfully completed......................................
2024-04-24 14:03:15,731:INFO:SubProcess create_model() end ==================================
2024-04-24 14:03:15,731:INFO:choose_better activated
2024-04-24 14:03:15,735:INFO:SubProcess create_model() called ==================================
2024-04-24 14:03:15,735:INFO:Initializing create_model()
2024-04-24 14:03:15,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:03:15,736:INFO:Checking exceptions
2024-04-24 14:03:15,737:INFO:Importing libraries
2024-04-24 14:03:15,737:INFO:Copying training dataset
2024-04-24 14:03:15,741:INFO:Defining folds
2024-04-24 14:03:15,741:INFO:Declaring metric variables
2024-04-24 14:03:15,741:INFO:Importing untrained model
2024-04-24 14:03:15,742:INFO:Declaring custom model
2024-04-24 14:03:15,742:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:03:15,742:INFO:Starting cross validation
2024-04-24 14:03:15,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:03:16,029:INFO:Calculating mean and std
2024-04-24 14:03:16,029:INFO:Creating metrics dataframe
2024-04-24 14:03:16,031:INFO:Finalizing model
2024-04-24 14:03:16,137:INFO:Uploading results into container
2024-04-24 14:03:16,138:INFO:Uploading model into container now
2024-04-24 14:03:16,138:INFO:_master_model_container: 4
2024-04-24 14:03:16,138:INFO:_display_container: 6
2024-04-24 14:03:16,138:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best')
2024-04-24 14:03:16,138:INFO:create_model() successfully completed......................................
2024-04-24 14:03:16,296:INFO:SubProcess create_model() end ==================================
2024-04-24 14:03:16,296:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best') result for F1 is 0.5473
2024-04-24 14:03:16,297:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=1, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best') result for F1 is 0.4569
2024-04-24 14:03:16,297:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best') is best model
2024-04-24 14:03:16,297:INFO:choose_better completed
2024-04-24 14:03:16,297:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 14:03:16,305:INFO:_master_model_container: 4
2024-04-24 14:03:16,305:INFO:_display_container: 5
2024-04-24 14:03:16,305:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best')
2024-04-24 14:03:16,305:INFO:tune_model() successfully completed......................................
2024-04-24 14:03:16,478:INFO:Initializing predict_model()
2024-04-24 14:03:16,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B707B670>)
2024-04-24 14:03:16,478:INFO:Checking exceptions
2024-04-24 14:03:16,478:INFO:Preloading libraries
2024-04-24 14:03:16,802:INFO:Initializing finalize_model()
2024-04-24 14:03:16,803:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 14:03:16,803:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best')
2024-04-24 14:03:16,806:INFO:Initializing create_model()
2024-04-24 14:03:16,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B6907A30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1168, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:03:16,806:INFO:Checking exceptions
2024-04-24 14:03:16,808:INFO:Importing libraries
2024-04-24 14:03:16,808:INFO:Copying training dataset
2024-04-24 14:03:16,808:INFO:Defining folds
2024-04-24 14:03:16,808:INFO:Declaring metric variables
2024-04-24 14:03:16,808:INFO:Importing untrained model
2024-04-24 14:03:16,808:INFO:Declaring custom model
2024-04-24 14:03:16,808:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:03:16,810:INFO:Cross validation set to False
2024-04-24 14:03:16,810:INFO:Fitting Model
2024-04-24 14:03:16,984:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1168, splitter='best'))],
         verbose=False)
2024-04-24 14:03:16,984:INFO:create_model() successfully completed......................................
2024-04-24 14:03:17,174:INFO:_master_model_container: 4
2024-04-24 14:03:17,174:INFO:_display_container: 6
2024-04-24 14:03:17,202:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1168, splitter='best'))],
         verbose=False)
2024-04-24 14:03:17,202:INFO:finalize_model() successfully completed......................................
2024-04-24 14:03:17,401:INFO:Initializing save_model()
2024-04-24 14:03:17,401:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1168, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                 TransformerWrapper(exclude=None, include=['period'],
                                    transformer=OneHotEncoder(cols=['period'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 14:03:17,401:INFO:Adding model into prep_pipe
2024-04-24 14:03:17,401:WARNING:Only Model saved as it was a pipeline.
2024-04-24 14:03:17,406:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 14:03:17,420:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1168, splitter='best'))],
         verbose=False)
2024-04-24 14:03:17,420:INFO:save_model() successfully completed......................................
2024-04-24 14:03:17,596:INFO:Initializing load_model()
2024-04-24 14:03:17,596:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 14:03:17,659:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 14:03:21,622:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\4211555963.py:196: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 14:07:43,750:INFO:PyCaret ClassificationExperiment
2024-04-24 14:07:43,750:INFO:Logging name: clf-default-name
2024-04-24 14:07:43,750:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 14:07:43,750:INFO:version 3.2.0
2024-04-24 14:07:43,750:INFO:Initializing setup()
2024-04-24 14:07:43,750:INFO:self.USI: 718c
2024-04-24 14:07:43,750:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 14:07:43,750:INFO:Checking environment
2024-04-24 14:07:43,751:INFO:python_version: 3.9.19
2024-04-24 14:07:43,751:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 14:07:43,751:INFO:machine: AMD64
2024-04-24 14:07:43,751:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 14:07:43,751:INFO:Memory: svmem(total=33897811968, available=8229752832, percent=75.7, used=25668059136, free=8229752832)
2024-04-24 14:07:43,751:INFO:Physical Core: 14
2024-04-24 14:07:43,751:INFO:Logical Core: 20
2024-04-24 14:07:43,751:INFO:Checking libraries
2024-04-24 14:07:43,751:INFO:System:
2024-04-24 14:07:43,751:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 14:07:43,751:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 14:07:43,751:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 14:07:43,751:INFO:PyCaret required dependencies:
2024-04-24 14:07:43,751:INFO:                 pip: 23.3.1
2024-04-24 14:07:43,751:INFO:          setuptools: 68.2.2
2024-04-24 14:07:43,751:INFO:             pycaret: 3.2.0
2024-04-24 14:07:43,751:INFO:             IPython: 8.15.0
2024-04-24 14:07:43,751:INFO:          ipywidgets: 8.1.2
2024-04-24 14:07:43,751:INFO:                tqdm: 4.65.0
2024-04-24 14:07:43,751:INFO:               numpy: 1.25.2
2024-04-24 14:07:43,751:INFO:              pandas: 1.5.3
2024-04-24 14:07:43,751:INFO:              jinja2: 3.1.3
2024-04-24 14:07:43,751:INFO:               scipy: 1.11.4
2024-04-24 14:07:43,751:INFO:              joblib: 1.2.0
2024-04-24 14:07:43,751:INFO:             sklearn: 1.2.2
2024-04-24 14:07:43,751:INFO:                pyod: 1.0.9
2024-04-24 14:07:43,751:INFO:            imblearn: 0.11.0
2024-04-24 14:07:43,751:INFO:   category_encoders: 2.6.3
2024-04-24 14:07:43,751:INFO:            lightgbm: 4.1.0
2024-04-24 14:07:43,751:INFO:               numba: 0.59.1
2024-04-24 14:07:43,751:INFO:            requests: 2.31.0
2024-04-24 14:07:43,751:INFO:          matplotlib: 3.8.4
2024-04-24 14:07:43,751:INFO:          scikitplot: 0.3.7
2024-04-24 14:07:43,751:INFO:         yellowbrick: 1.5
2024-04-24 14:07:43,751:INFO:              plotly: 5.19.0
2024-04-24 14:07:43,751:INFO:    plotly-resampler: Not installed
2024-04-24 14:07:43,751:INFO:             kaleido: 0.2.1
2024-04-24 14:07:43,751:INFO:           schemdraw: 0.15
2024-04-24 14:07:43,751:INFO:         statsmodels: 0.14.0
2024-04-24 14:07:43,751:INFO:              sktime: 0.21.1
2024-04-24 14:07:43,751:INFO:               tbats: 1.1.3
2024-04-24 14:07:43,751:INFO:            pmdarima: 2.0.4
2024-04-24 14:07:43,751:INFO:              psutil: 5.9.0
2024-04-24 14:07:43,751:INFO:          markupsafe: 2.1.3
2024-04-24 14:07:43,751:INFO:             pickle5: Not installed
2024-04-24 14:07:43,751:INFO:         cloudpickle: 2.2.1
2024-04-24 14:07:43,751:INFO:         deprecation: 2.1.0
2024-04-24 14:07:43,751:INFO:              xxhash: 2.0.2
2024-04-24 14:07:43,751:INFO:           wurlitzer: 3.0.3
2024-04-24 14:07:43,752:INFO:PyCaret optional dependencies:
2024-04-24 14:07:43,752:INFO:                shap: Not installed
2024-04-24 14:07:43,752:INFO:           interpret: Not installed
2024-04-24 14:07:43,752:INFO:                umap: 0.5.3
2024-04-24 14:07:43,752:INFO:     ydata_profiling: Not installed
2024-04-24 14:07:43,752:INFO:  explainerdashboard: Not installed
2024-04-24 14:07:43,752:INFO:             autoviz: Not installed
2024-04-24 14:07:43,752:INFO:           fairlearn: Not installed
2024-04-24 14:07:43,752:INFO:          deepchecks: Not installed
2024-04-24 14:07:43,752:INFO:             xgboost: 1.7.6
2024-04-24 14:07:43,752:INFO:            catboost: 1.2.3
2024-04-24 14:07:43,752:INFO:              kmodes: 0.12.2
2024-04-24 14:07:43,752:INFO:             mlxtend: 0.23.1
2024-04-24 14:07:43,752:INFO:       statsforecast: Not installed
2024-04-24 14:07:43,752:INFO:        tune_sklearn: Not installed
2024-04-24 14:07:43,752:INFO:                 ray: Not installed
2024-04-24 14:07:43,752:INFO:            hyperopt: Not installed
2024-04-24 14:07:43,752:INFO:              optuna: Not installed
2024-04-24 14:07:43,752:INFO:               skopt: Not installed
2024-04-24 14:07:43,752:INFO:              mlflow: 2.9.2
2024-04-24 14:07:43,752:INFO:              gradio: Not installed
2024-04-24 14:07:43,752:INFO:             fastapi: Not installed
2024-04-24 14:07:43,752:INFO:             uvicorn: Not installed
2024-04-24 14:07:43,752:INFO:              m2cgen: Not installed
2024-04-24 14:07:43,752:INFO:           evidently: Not installed
2024-04-24 14:07:43,752:INFO:               fugue: Not installed
2024-04-24 14:07:43,752:INFO:           streamlit: 1.32.0
2024-04-24 14:07:43,752:INFO:             prophet: Not installed
2024-04-24 14:07:43,752:INFO:None
2024-04-24 14:07:43,752:INFO:Set up data.
2024-04-24 14:07:43,757:INFO:Set up folding strategy.
2024-04-24 14:07:43,757:INFO:Set up train/test split.
2024-04-24 14:07:43,757:INFO:Set up data.
2024-04-24 14:07:43,760:INFO:Set up index.
2024-04-24 14:07:43,761:INFO:Assigning column types.
2024-04-24 14:07:43,763:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 14:07:43,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 14:07:43,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:07:43,810:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:43,812:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:43,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 14:07:43,844:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:07:43,861:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:43,863:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:43,864:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 14:07:43,890:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:07:43,907:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:43,908:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:43,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:07:43,952:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:43,954:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:43,954:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 14:07:43,998:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:44,000:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:44,042:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:44,043:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:44,045:INFO:Preparing preprocessing pipeline...
2024-04-24 14:07:44,046:INFO:Set up simple imputation.
2024-04-24 14:07:44,048:INFO:Set up encoding of ordinal features.
2024-04-24 14:07:44,049:INFO:Set up encoding of categorical features.
2024-04-24 14:07:44,049:INFO:Set up feature normalization.
2024-04-24 14:07:44,087:INFO:Finished creating preprocessing pipeline.
2024-04-24 14:07:44,099:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                                    transformer=OrdinalEncoder(cols=['playoffs'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'playoffs',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 14:07:44,099:INFO:Creating final display dataframe.
2024-04-24 14:07:44,202:INFO:Setup _display_container:                     Description             Value
0                    Session id              5104
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7               Ignore features                 1
8              Ordinal features                 1
9              Numeric features                 4
10         Categorical features                 1
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              718c
2024-04-24 14:07:44,249:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:44,251:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:44,294:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:07:44,296:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:07:44,296:INFO:setup() successfully completed in 0.55s...............
2024-04-24 14:07:44,296:INFO:Initializing compare_models()
2024-04-24 14:07:44,296:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 14:07:44,296:INFO:Checking exceptions
2024-04-24 14:07:44,300:INFO:Preparing display monitor
2024-04-24 14:07:44,313:INFO:Initializing Logistic Regression
2024-04-24 14:07:44,313:INFO:Total runtime is 0.0 minutes
2024-04-24 14:07:44,315:INFO:SubProcess create_model() called ==================================
2024-04-24 14:07:44,316:INFO:Initializing create_model()
2024-04-24 14:07:44,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BA3D4820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:07:44,316:INFO:Checking exceptions
2024-04-24 14:07:44,316:INFO:Importing libraries
2024-04-24 14:07:44,316:INFO:Copying training dataset
2024-04-24 14:07:44,319:INFO:Defining folds
2024-04-24 14:07:44,319:INFO:Declaring metric variables
2024-04-24 14:07:44,321:INFO:Importing untrained model
2024-04-24 14:07:44,323:INFO:Logistic Regression Imported successfully
2024-04-24 14:07:44,327:INFO:Starting cross validation
2024-04-24 14:07:44,328:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:07:44,439:INFO:Calculating mean and std
2024-04-24 14:07:44,440:INFO:Creating metrics dataframe
2024-04-24 14:07:44,442:INFO:Uploading results into container
2024-04-24 14:07:44,442:INFO:Uploading model into container now
2024-04-24 14:07:44,443:INFO:_master_model_container: 1
2024-04-24 14:07:44,443:INFO:_display_container: 2
2024-04-24 14:07:44,443:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 14:07:44,443:INFO:create_model() successfully completed......................................
2024-04-24 14:07:44,617:INFO:SubProcess create_model() end ==================================
2024-04-24 14:07:44,617:INFO:Creating metrics dataframe
2024-04-24 14:07:44,624:INFO:Initializing Decision Tree Classifier
2024-04-24 14:07:44,624:INFO:Total runtime is 0.005193062623341878 minutes
2024-04-24 14:07:44,627:INFO:SubProcess create_model() called ==================================
2024-04-24 14:07:44,627:INFO:Initializing create_model()
2024-04-24 14:07:44,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BA3D4820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:07:44,627:INFO:Checking exceptions
2024-04-24 14:07:44,627:INFO:Importing libraries
2024-04-24 14:07:44,627:INFO:Copying training dataset
2024-04-24 14:07:44,631:INFO:Defining folds
2024-04-24 14:07:44,631:INFO:Declaring metric variables
2024-04-24 14:07:44,634:INFO:Importing untrained model
2024-04-24 14:07:44,636:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:07:44,640:INFO:Starting cross validation
2024-04-24 14:07:44,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:07:44,808:INFO:Calculating mean and std
2024-04-24 14:07:44,808:INFO:Creating metrics dataframe
2024-04-24 14:07:44,811:INFO:Uploading results into container
2024-04-24 14:07:44,811:INFO:Uploading model into container now
2024-04-24 14:07:44,811:INFO:_master_model_container: 2
2024-04-24 14:07:44,811:INFO:_display_container: 2
2024-04-24 14:07:44,812:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best')
2024-04-24 14:07:44,812:INFO:create_model() successfully completed......................................
2024-04-24 14:07:44,971:INFO:SubProcess create_model() end ==================================
2024-04-24 14:07:44,971:INFO:Creating metrics dataframe
2024-04-24 14:07:44,984:INFO:Initializing create_model()
2024-04-24 14:07:44,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:07:44,984:INFO:Checking exceptions
2024-04-24 14:07:44,985:INFO:Importing libraries
2024-04-24 14:07:44,985:INFO:Copying training dataset
2024-04-24 14:07:44,989:INFO:Defining folds
2024-04-24 14:07:44,989:INFO:Declaring metric variables
2024-04-24 14:07:44,989:INFO:Importing untrained model
2024-04-24 14:07:44,989:INFO:Declaring custom model
2024-04-24 14:07:44,989:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:07:44,990:INFO:Cross validation set to False
2024-04-24 14:07:44,990:INFO:Fitting Model
2024-04-24 14:07:45,048:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best')
2024-04-24 14:07:45,048:INFO:create_model() successfully completed......................................
2024-04-24 14:07:45,205:INFO:Initializing create_model()
2024-04-24 14:07:45,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:07:45,205:INFO:Checking exceptions
2024-04-24 14:07:45,206:INFO:Importing libraries
2024-04-24 14:07:45,206:INFO:Copying training dataset
2024-04-24 14:07:45,210:INFO:Defining folds
2024-04-24 14:07:45,210:INFO:Declaring metric variables
2024-04-24 14:07:45,210:INFO:Importing untrained model
2024-04-24 14:07:45,210:INFO:Declaring custom model
2024-04-24 14:07:45,211:INFO:Logistic Regression Imported successfully
2024-04-24 14:07:45,211:INFO:Cross validation set to False
2024-04-24 14:07:45,211:INFO:Fitting Model
2024-04-24 14:07:45,251:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 14:07:45,251:INFO:create_model() successfully completed......................................
2024-04-24 14:07:45,420:INFO:_master_model_container: 2
2024-04-24 14:07:45,420:INFO:_display_container: 2
2024-04-24 14:07:45,421:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 14:07:45,421:INFO:compare_models() successfully completed......................................
2024-04-24 14:07:45,421:INFO:Initializing predict_model()
2024-04-24 14:07:45,421:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251ADDC8EE0>)
2024-04-24 14:07:45,421:INFO:Checking exceptions
2024-04-24 14:07:45,421:INFO:Preloading libraries
2024-04-24 14:07:46,106:INFO:Initializing plot_model()
2024-04-24 14:07:46,106:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, system=True)
2024-04-24 14:07:46,106:INFO:Checking exceptions
2024-04-24 14:07:46,109:INFO:Preloading libraries
2024-04-24 14:07:46,110:INFO:Copying training dataset
2024-04-24 14:07:46,110:INFO:Plot type: confusion_matrix
2024-04-24 14:07:46,221:INFO:Fitting Model
2024-04-24 14:07:46,221:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 14:07:46,222:INFO:Scoring test/hold-out set
2024-04-24 14:07:46,287:INFO:Visual Rendered Successfully
2024-04-24 14:07:46,452:INFO:plot_model() successfully completed......................................
2024-04-24 14:07:46,453:INFO:Initializing plot_model()
2024-04-24 14:07:46,453:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, system=True)
2024-04-24 14:07:46,453:INFO:Checking exceptions
2024-04-24 14:07:46,458:INFO:Preloading libraries
2024-04-24 14:07:46,459:INFO:Copying training dataset
2024-04-24 14:07:46,459:INFO:Plot type: auc
2024-04-24 14:07:46,563:INFO:Fitting Model
2024-04-24 14:07:46,563:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 14:07:46,564:INFO:Scoring test/hold-out set
2024-04-24 14:07:46,675:INFO:Visual Rendered Successfully
2024-04-24 14:07:46,846:INFO:plot_model() successfully completed......................................
2024-04-24 14:07:46,847:INFO:Initializing evaluate_model()
2024-04-24 14:07:46,847:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 14:07:46,854:INFO:Initializing plot_model()
2024-04-24 14:07:46,854:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, system=True)
2024-04-24 14:07:46,854:INFO:Checking exceptions
2024-04-24 14:07:46,856:INFO:Preloading libraries
2024-04-24 14:07:46,856:INFO:Copying training dataset
2024-04-24 14:07:46,856:INFO:Plot type: pipeline
2024-04-24 14:07:46,919:INFO:Visual Rendered Successfully
2024-04-24 14:07:47,084:INFO:plot_model() successfully completed......................................
2024-04-24 14:07:47,087:INFO:Initializing predict_model()
2024-04-24 14:07:47,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B8F90700>)
2024-04-24 14:07:47,088:INFO:Checking exceptions
2024-04-24 14:07:47,088:INFO:Preloading libraries
2024-04-24 14:07:47,903:INFO:Initializing plot_model()
2024-04-24 14:07:47,903:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, system=True)
2024-04-24 14:07:47,904:INFO:Checking exceptions
2024-04-24 14:07:47,907:INFO:Preloading libraries
2024-04-24 14:07:47,907:INFO:Copying training dataset
2024-04-24 14:07:47,907:INFO:Plot type: confusion_matrix
2024-04-24 14:07:48,017:INFO:Fitting Model
2024-04-24 14:07:48,018:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 14:07:48,018:INFO:Scoring test/hold-out set
2024-04-24 14:07:48,083:INFO:Visual Rendered Successfully
2024-04-24 14:07:48,256:INFO:plot_model() successfully completed......................................
2024-04-24 14:07:48,257:INFO:Initializing plot_model()
2024-04-24 14:07:48,257:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, system=True)
2024-04-24 14:07:48,257:INFO:Checking exceptions
2024-04-24 14:07:48,261:INFO:Preloading libraries
2024-04-24 14:07:48,261:INFO:Copying training dataset
2024-04-24 14:07:48,261:INFO:Plot type: auc
2024-04-24 14:07:48,374:INFO:Fitting Model
2024-04-24 14:07:48,375:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 14:07:48,375:INFO:Scoring test/hold-out set
2024-04-24 14:07:48,495:INFO:Visual Rendered Successfully
2024-04-24 14:07:48,656:INFO:plot_model() successfully completed......................................
2024-04-24 14:07:48,658:INFO:Initializing evaluate_model()
2024-04-24 14:07:48,658:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 14:07:48,665:INFO:Initializing plot_model()
2024-04-24 14:07:48,665:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5104, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, system=True)
2024-04-24 14:07:48,665:INFO:Checking exceptions
2024-04-24 14:07:48,667:INFO:Preloading libraries
2024-04-24 14:07:48,667:INFO:Copying training dataset
2024-04-24 14:07:48,667:INFO:Plot type: pipeline
2024-04-24 14:07:48,735:INFO:Visual Rendered Successfully
2024-04-24 14:07:48,893:INFO:plot_model() successfully completed......................................
2024-04-24 14:07:48,897:INFO:Initializing tune_model()
2024-04-24 14:07:48,897:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>)
2024-04-24 14:07:48,897:INFO:Checking exceptions
2024-04-24 14:07:48,908:INFO:Copying training dataset
2024-04-24 14:07:48,911:INFO:Checking base model
2024-04-24 14:07:48,912:INFO:Base model : Decision Tree Classifier
2024-04-24 14:07:48,914:INFO:Declaring metric variables
2024-04-24 14:07:48,917:INFO:Defining Hyperparameters
2024-04-24 14:07:49,093:INFO:Tuning with n_jobs=-1
2024-04-24 14:07:49,093:INFO:Initializing RandomizedSearchCV
2024-04-24 14:07:49,387:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'gini'}
2024-04-24 14:07:49,387:INFO:Hyperparameter search completed
2024-04-24 14:07:49,387:INFO:SubProcess create_model() called ==================================
2024-04-24 14:07:49,387:INFO:Initializing create_model()
2024-04-24 14:07:49,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BA503E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'gini'})
2024-04-24 14:07:49,387:INFO:Checking exceptions
2024-04-24 14:07:49,387:INFO:Importing libraries
2024-04-24 14:07:49,387:INFO:Copying training dataset
2024-04-24 14:07:49,391:INFO:Defining folds
2024-04-24 14:07:49,391:INFO:Declaring metric variables
2024-04-24 14:07:49,394:INFO:Importing untrained model
2024-04-24 14:07:49,394:INFO:Declaring custom model
2024-04-24 14:07:49,397:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:07:49,401:INFO:Starting cross validation
2024-04-24 14:07:49,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:07:49,541:INFO:Calculating mean and std
2024-04-24 14:07:49,542:INFO:Creating metrics dataframe
2024-04-24 14:07:49,546:INFO:Finalizing model
2024-04-24 14:07:49,586:INFO:Uploading results into container
2024-04-24 14:07:49,586:INFO:Uploading model into container now
2024-04-24 14:07:49,587:INFO:_master_model_container: 3
2024-04-24 14:07:49,587:INFO:_display_container: 5
2024-04-24 14:07:49,587:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=8, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best')
2024-04-24 14:07:49,587:INFO:create_model() successfully completed......................................
2024-04-24 14:07:49,757:INFO:SubProcess create_model() end ==================================
2024-04-24 14:07:49,757:INFO:choose_better activated
2024-04-24 14:07:49,760:INFO:SubProcess create_model() called ==================================
2024-04-24 14:07:49,761:INFO:Initializing create_model()
2024-04-24 14:07:49,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:07:49,761:INFO:Checking exceptions
2024-04-24 14:07:49,763:INFO:Importing libraries
2024-04-24 14:07:49,763:INFO:Copying training dataset
2024-04-24 14:07:49,767:INFO:Defining folds
2024-04-24 14:07:49,767:INFO:Declaring metric variables
2024-04-24 14:07:49,767:INFO:Importing untrained model
2024-04-24 14:07:49,767:INFO:Declaring custom model
2024-04-24 14:07:49,767:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:07:49,768:INFO:Starting cross validation
2024-04-24 14:07:49,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:07:49,931:INFO:Calculating mean and std
2024-04-24 14:07:49,932:INFO:Creating metrics dataframe
2024-04-24 14:07:49,933:INFO:Finalizing model
2024-04-24 14:07:49,997:INFO:Uploading results into container
2024-04-24 14:07:49,997:INFO:Uploading model into container now
2024-04-24 14:07:49,999:INFO:_master_model_container: 4
2024-04-24 14:07:49,999:INFO:_display_container: 6
2024-04-24 14:07:49,999:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best')
2024-04-24 14:07:49,999:INFO:create_model() successfully completed......................................
2024-04-24 14:07:50,165:INFO:SubProcess create_model() end ==================================
2024-04-24 14:07:50,166:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best') result for F1 is 0.5541
2024-04-24 14:07:50,167:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=8, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best') result for F1 is 0.4569
2024-04-24 14:07:50,168:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best') is best model
2024-04-24 14:07:50,168:INFO:choose_better completed
2024-04-24 14:07:50,168:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 14:07:50,180:INFO:_master_model_container: 4
2024-04-24 14:07:50,180:INFO:_display_container: 5
2024-04-24 14:07:50,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best')
2024-04-24 14:07:50,181:INFO:tune_model() successfully completed......................................
2024-04-24 14:07:50,379:INFO:Initializing predict_model()
2024-04-24 14:07:50,379:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B7FFF550>)
2024-04-24 14:07:50,379:INFO:Checking exceptions
2024-04-24 14:07:50,379:INFO:Preloading libraries
2024-04-24 14:07:50,646:INFO:Initializing finalize_model()
2024-04-24 14:07:50,646:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 14:07:50,646:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best')
2024-04-24 14:07:50,648:INFO:Initializing create_model()
2024-04-24 14:07:50,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B7B7B5E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5104, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:07:50,648:INFO:Checking exceptions
2024-04-24 14:07:50,649:INFO:Importing libraries
2024-04-24 14:07:50,650:INFO:Copying training dataset
2024-04-24 14:07:50,650:INFO:Defining folds
2024-04-24 14:07:50,650:INFO:Declaring metric variables
2024-04-24 14:07:50,650:INFO:Importing untrained model
2024-04-24 14:07:50,650:INFO:Declaring custom model
2024-04-24 14:07:50,650:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:07:50,651:INFO:Cross validation set to False
2024-04-24 14:07:50,651:INFO:Fitting Model
2024-04-24 14:07:50,740:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5104, splitter='best'))],
         verbose=False)
2024-04-24 14:07:50,740:INFO:create_model() successfully completed......................................
2024-04-24 14:07:50,912:INFO:_master_model_container: 4
2024-04-24 14:07:50,912:INFO:_display_container: 6
2024-04-24 14:07:50,928:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5104, splitter='best'))],
         verbose=False)
2024-04-24 14:07:50,928:INFO:finalize_model() successfully completed......................................
2024-04-24 14:07:51,148:INFO:Initializing save_model()
2024-04-24 14:07:51,149:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5104, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')...
                                    transformer=OrdinalEncoder(cols=['playoffs'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'playoffs',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 14:07:51,149:INFO:Adding model into prep_pipe
2024-04-24 14:07:51,149:WARNING:Only Model saved as it was a pipeline.
2024-04-24 14:07:51,152:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 14:07:51,168:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWra...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=5104, splitter='best'))],
         verbose=False)
2024-04-24 14:07:51,168:INFO:save_model() successfully completed......................................
2024-04-24 14:07:51,344:INFO:Initializing load_model()
2024-04-24 14:07:51,344:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 14:14:46,293:INFO:PyCaret ClassificationExperiment
2024-04-24 14:14:46,293:INFO:Logging name: clf-default-name
2024-04-24 14:14:46,293:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 14:14:46,293:INFO:version 3.2.0
2024-04-24 14:14:46,293:INFO:Initializing setup()
2024-04-24 14:14:46,293:INFO:self.USI: 7c6d
2024-04-24 14:14:46,293:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 14:14:46,293:INFO:Checking environment
2024-04-24 14:14:46,293:INFO:python_version: 3.9.19
2024-04-24 14:14:46,293:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 14:14:46,293:INFO:machine: AMD64
2024-04-24 14:14:46,293:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 14:14:46,293:INFO:Memory: svmem(total=33897811968, available=10474917888, percent=69.1, used=23422894080, free=10474917888)
2024-04-24 14:14:46,293:INFO:Physical Core: 14
2024-04-24 14:14:46,293:INFO:Logical Core: 20
2024-04-24 14:14:46,293:INFO:Checking libraries
2024-04-24 14:14:46,293:INFO:System:
2024-04-24 14:14:46,293:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 14:14:46,293:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 14:14:46,293:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 14:14:46,293:INFO:PyCaret required dependencies:
2024-04-24 14:14:46,293:INFO:                 pip: 23.3.1
2024-04-24 14:14:46,293:INFO:          setuptools: 68.2.2
2024-04-24 14:14:46,293:INFO:             pycaret: 3.2.0
2024-04-24 14:14:46,293:INFO:             IPython: 8.15.0
2024-04-24 14:14:46,293:INFO:          ipywidgets: 8.1.2
2024-04-24 14:14:46,293:INFO:                tqdm: 4.65.0
2024-04-24 14:14:46,294:INFO:               numpy: 1.25.2
2024-04-24 14:14:46,294:INFO:              pandas: 1.5.3
2024-04-24 14:14:46,294:INFO:              jinja2: 3.1.3
2024-04-24 14:14:46,294:INFO:               scipy: 1.11.4
2024-04-24 14:14:46,294:INFO:              joblib: 1.2.0
2024-04-24 14:14:46,294:INFO:             sklearn: 1.2.2
2024-04-24 14:14:46,294:INFO:                pyod: 1.0.9
2024-04-24 14:14:46,294:INFO:            imblearn: 0.11.0
2024-04-24 14:14:46,294:INFO:   category_encoders: 2.6.3
2024-04-24 14:14:46,294:INFO:            lightgbm: 4.1.0
2024-04-24 14:14:46,294:INFO:               numba: 0.59.1
2024-04-24 14:14:46,294:INFO:            requests: 2.31.0
2024-04-24 14:14:46,294:INFO:          matplotlib: 3.8.4
2024-04-24 14:14:46,294:INFO:          scikitplot: 0.3.7
2024-04-24 14:14:46,294:INFO:         yellowbrick: 1.5
2024-04-24 14:14:46,294:INFO:              plotly: 5.19.0
2024-04-24 14:14:46,294:INFO:    plotly-resampler: Not installed
2024-04-24 14:14:46,294:INFO:             kaleido: 0.2.1
2024-04-24 14:14:46,294:INFO:           schemdraw: 0.15
2024-04-24 14:14:46,294:INFO:         statsmodels: 0.14.0
2024-04-24 14:14:46,294:INFO:              sktime: 0.21.1
2024-04-24 14:14:46,294:INFO:               tbats: 1.1.3
2024-04-24 14:14:46,294:INFO:            pmdarima: 2.0.4
2024-04-24 14:14:46,294:INFO:              psutil: 5.9.0
2024-04-24 14:14:46,294:INFO:          markupsafe: 2.1.3
2024-04-24 14:14:46,294:INFO:             pickle5: Not installed
2024-04-24 14:14:46,294:INFO:         cloudpickle: 2.2.1
2024-04-24 14:14:46,294:INFO:         deprecation: 2.1.0
2024-04-24 14:14:46,294:INFO:              xxhash: 2.0.2
2024-04-24 14:14:46,294:INFO:           wurlitzer: 3.0.3
2024-04-24 14:14:46,294:INFO:PyCaret optional dependencies:
2024-04-24 14:14:46,294:INFO:                shap: Not installed
2024-04-24 14:14:46,294:INFO:           interpret: Not installed
2024-04-24 14:14:46,294:INFO:                umap: 0.5.3
2024-04-24 14:14:46,294:INFO:     ydata_profiling: Not installed
2024-04-24 14:14:46,294:INFO:  explainerdashboard: Not installed
2024-04-24 14:14:46,294:INFO:             autoviz: Not installed
2024-04-24 14:14:46,294:INFO:           fairlearn: Not installed
2024-04-24 14:14:46,294:INFO:          deepchecks: Not installed
2024-04-24 14:14:46,294:INFO:             xgboost: 1.7.6
2024-04-24 14:14:46,294:INFO:            catboost: 1.2.3
2024-04-24 14:14:46,294:INFO:              kmodes: 0.12.2
2024-04-24 14:14:46,294:INFO:             mlxtend: 0.23.1
2024-04-24 14:14:46,294:INFO:       statsforecast: Not installed
2024-04-24 14:14:46,294:INFO:        tune_sklearn: Not installed
2024-04-24 14:14:46,294:INFO:                 ray: Not installed
2024-04-24 14:14:46,294:INFO:            hyperopt: Not installed
2024-04-24 14:14:46,294:INFO:              optuna: Not installed
2024-04-24 14:14:46,294:INFO:               skopt: Not installed
2024-04-24 14:14:46,294:INFO:              mlflow: 2.9.2
2024-04-24 14:14:46,294:INFO:              gradio: Not installed
2024-04-24 14:14:46,294:INFO:             fastapi: Not installed
2024-04-24 14:14:46,294:INFO:             uvicorn: Not installed
2024-04-24 14:14:46,294:INFO:              m2cgen: Not installed
2024-04-24 14:14:46,294:INFO:           evidently: Not installed
2024-04-24 14:14:46,295:INFO:               fugue: Not installed
2024-04-24 14:14:46,295:INFO:           streamlit: 1.32.0
2024-04-24 14:14:46,295:INFO:             prophet: Not installed
2024-04-24 14:14:46,295:INFO:None
2024-04-24 14:14:46,295:INFO:Set up data.
2024-04-24 14:14:46,299:INFO:Set up folding strategy.
2024-04-24 14:14:46,299:INFO:Set up train/test split.
2024-04-24 14:14:46,299:INFO:Set up data.
2024-04-24 14:14:46,302:INFO:Set up index.
2024-04-24 14:14:46,302:INFO:Assigning column types.
2024-04-24 14:14:46,305:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 14:14:46,331:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 14:14:46,332:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:14:46,348:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,349:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 14:14:46,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:14:46,390:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,391:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,392:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 14:14:46,417:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:14:46,434:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,435:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 14:14:46,479:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,480:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,481:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 14:14:46,524:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,526:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,568:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,570:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,571:INFO:Preparing preprocessing pipeline...
2024-04-24 14:14:46,572:INFO:Set up simple imputation.
2024-04-24 14:14:46,572:INFO:Set up feature normalization.
2024-04-24 14:14:46,589:INFO:Finished creating preprocessing pipeline.
2024-04-24 14:14:46,592:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 14:14:46,592:INFO:Creating final display dataframe.
2024-04-24 14:14:46,644:INFO:Setup _display_container:                     Description             Value
0                    Session id              2618
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7c6d
2024-04-24 14:14:46,690:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,692:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,745:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 14:14:46,746:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 14:14:46,747:INFO:setup() successfully completed in 0.46s...............
2024-04-24 14:14:46,747:INFO:Initializing compare_models()
2024-04-24 14:14:46,747:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 14:14:46,747:INFO:Checking exceptions
2024-04-24 14:14:46,750:INFO:Preparing display monitor
2024-04-24 14:14:46,766:INFO:Initializing Logistic Regression
2024-04-24 14:14:46,766:INFO:Total runtime is 1.548131306966146e-05 minutes
2024-04-24 14:14:46,768:INFO:SubProcess create_model() called ==================================
2024-04-24 14:14:46,768:INFO:Initializing create_model()
2024-04-24 14:14:46,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BAD45DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:14:46,768:INFO:Checking exceptions
2024-04-24 14:14:46,768:INFO:Importing libraries
2024-04-24 14:14:46,768:INFO:Copying training dataset
2024-04-24 14:14:46,773:INFO:Defining folds
2024-04-24 14:14:46,773:INFO:Declaring metric variables
2024-04-24 14:14:46,774:INFO:Importing untrained model
2024-04-24 14:14:46,777:INFO:Logistic Regression Imported successfully
2024-04-24 14:14:46,781:INFO:Starting cross validation
2024-04-24 14:14:46,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:14:50,341:INFO:Calculating mean and std
2024-04-24 14:14:50,343:INFO:Creating metrics dataframe
2024-04-24 14:14:50,349:INFO:Uploading results into container
2024-04-24 14:14:50,351:INFO:Uploading model into container now
2024-04-24 14:14:50,351:INFO:_master_model_container: 1
2024-04-24 14:14:50,351:INFO:_display_container: 2
2024-04-24 14:14:50,352:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 14:14:50,352:INFO:create_model() successfully completed......................................
2024-04-24 14:14:50,625:INFO:SubProcess create_model() end ==================================
2024-04-24 14:14:50,626:INFO:Creating metrics dataframe
2024-04-24 14:14:50,633:INFO:Initializing Decision Tree Classifier
2024-04-24 14:14:50,633:INFO:Total runtime is 0.06445401906967163 minutes
2024-04-24 14:14:50,636:INFO:SubProcess create_model() called ==================================
2024-04-24 14:14:50,636:INFO:Initializing create_model()
2024-04-24 14:14:50,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BAD45DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:14:50,636:INFO:Checking exceptions
2024-04-24 14:14:50,637:INFO:Importing libraries
2024-04-24 14:14:50,637:INFO:Copying training dataset
2024-04-24 14:14:50,642:INFO:Defining folds
2024-04-24 14:14:50,642:INFO:Declaring metric variables
2024-04-24 14:14:50,645:INFO:Importing untrained model
2024-04-24 14:14:50,648:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:14:50,652:INFO:Starting cross validation
2024-04-24 14:14:50,653:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:14:53,396:INFO:Calculating mean and std
2024-04-24 14:14:53,397:INFO:Creating metrics dataframe
2024-04-24 14:14:53,402:INFO:Uploading results into container
2024-04-24 14:14:53,403:INFO:Uploading model into container now
2024-04-24 14:14:53,403:INFO:_master_model_container: 2
2024-04-24 14:14:53,403:INFO:_display_container: 2
2024-04-24 14:14:53,404:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best')
2024-04-24 14:14:53,404:INFO:create_model() successfully completed......................................
2024-04-24 14:14:53,587:INFO:SubProcess create_model() end ==================================
2024-04-24 14:14:53,588:INFO:Creating metrics dataframe
2024-04-24 14:14:53,602:INFO:Initializing create_model()
2024-04-24 14:14:53,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:14:53,602:INFO:Checking exceptions
2024-04-24 14:14:53,604:INFO:Importing libraries
2024-04-24 14:14:53,604:INFO:Copying training dataset
2024-04-24 14:14:53,609:INFO:Defining folds
2024-04-24 14:14:53,609:INFO:Declaring metric variables
2024-04-24 14:14:53,609:INFO:Importing untrained model
2024-04-24 14:14:53,609:INFO:Declaring custom model
2024-04-24 14:14:53,610:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:14:53,610:INFO:Cross validation set to False
2024-04-24 14:14:53,610:INFO:Fitting Model
2024-04-24 14:14:53,663:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best')
2024-04-24 14:14:53,663:INFO:create_model() successfully completed......................................
2024-04-24 14:14:53,827:INFO:Initializing create_model()
2024-04-24 14:14:53,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:14:53,830:INFO:Checking exceptions
2024-04-24 14:14:53,831:INFO:Importing libraries
2024-04-24 14:14:53,831:INFO:Copying training dataset
2024-04-24 14:14:53,835:INFO:Defining folds
2024-04-24 14:14:53,835:INFO:Declaring metric variables
2024-04-24 14:14:53,835:INFO:Importing untrained model
2024-04-24 14:14:53,835:INFO:Declaring custom model
2024-04-24 14:14:53,836:INFO:Logistic Regression Imported successfully
2024-04-24 14:14:53,836:INFO:Cross validation set to False
2024-04-24 14:14:53,836:INFO:Fitting Model
2024-04-24 14:14:53,852:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 14:14:53,852:INFO:create_model() successfully completed......................................
2024-04-24 14:14:54,022:INFO:_master_model_container: 2
2024-04-24 14:14:54,022:INFO:_display_container: 2
2024-04-24 14:14:54,023:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 14:14:54,023:INFO:compare_models() successfully completed......................................
2024-04-24 14:14:54,023:INFO:Initializing predict_model()
2024-04-24 14:14:54,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B35F71F0>)
2024-04-24 14:14:54,023:INFO:Checking exceptions
2024-04-24 14:14:54,023:INFO:Preloading libraries
2024-04-24 14:14:54,738:INFO:Initializing plot_model()
2024-04-24 14:14:54,738:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, system=True)
2024-04-24 14:14:54,738:INFO:Checking exceptions
2024-04-24 14:14:54,741:INFO:Preloading libraries
2024-04-24 14:14:54,742:INFO:Copying training dataset
2024-04-24 14:14:54,742:INFO:Plot type: confusion_matrix
2024-04-24 14:14:54,797:INFO:Fitting Model
2024-04-24 14:14:54,798:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 14:14:54,798:INFO:Scoring test/hold-out set
2024-04-24 14:14:54,866:INFO:Visual Rendered Successfully
2024-04-24 14:14:55,028:INFO:plot_model() successfully completed......................................
2024-04-24 14:14:55,028:INFO:Initializing plot_model()
2024-04-24 14:14:55,028:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, system=True)
2024-04-24 14:14:55,028:INFO:Checking exceptions
2024-04-24 14:14:55,033:INFO:Preloading libraries
2024-04-24 14:14:55,033:INFO:Copying training dataset
2024-04-24 14:14:55,033:INFO:Plot type: auc
2024-04-24 14:14:55,091:INFO:Fitting Model
2024-04-24 14:14:55,092:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 14:14:55,092:INFO:Scoring test/hold-out set
2024-04-24 14:14:55,209:INFO:Visual Rendered Successfully
2024-04-24 14:14:55,372:INFO:plot_model() successfully completed......................................
2024-04-24 14:14:55,372:INFO:Initializing evaluate_model()
2024-04-24 14:14:55,372:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 14:14:55,381:INFO:Initializing plot_model()
2024-04-24 14:14:55,381:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, system=True)
2024-04-24 14:14:55,381:INFO:Checking exceptions
2024-04-24 14:14:55,383:INFO:Preloading libraries
2024-04-24 14:14:55,384:INFO:Copying training dataset
2024-04-24 14:14:55,384:INFO:Plot type: pipeline
2024-04-24 14:14:55,438:INFO:Visual Rendered Successfully
2024-04-24 14:14:55,600:INFO:plot_model() successfully completed......................................
2024-04-24 14:14:55,605:INFO:Initializing predict_model()
2024-04-24 14:14:55,605:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B70C13A0>)
2024-04-24 14:14:55,605:INFO:Checking exceptions
2024-04-24 14:14:55,605:INFO:Preloading libraries
2024-04-24 14:14:56,533:INFO:Initializing plot_model()
2024-04-24 14:14:56,533:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, system=True)
2024-04-24 14:14:56,533:INFO:Checking exceptions
2024-04-24 14:14:56,536:INFO:Preloading libraries
2024-04-24 14:14:56,536:INFO:Copying training dataset
2024-04-24 14:14:56,536:INFO:Plot type: confusion_matrix
2024-04-24 14:14:56,612:INFO:Fitting Model
2024-04-24 14:14:56,613:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 14:14:56,613:INFO:Scoring test/hold-out set
2024-04-24 14:14:56,676:INFO:Visual Rendered Successfully
2024-04-24 14:14:56,872:INFO:plot_model() successfully completed......................................
2024-04-24 14:14:56,873:INFO:Initializing plot_model()
2024-04-24 14:14:56,873:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, system=True)
2024-04-24 14:14:56,873:INFO:Checking exceptions
2024-04-24 14:14:56,882:INFO:Preloading libraries
2024-04-24 14:14:56,882:INFO:Copying training dataset
2024-04-24 14:14:56,883:INFO:Plot type: auc
2024-04-24 14:14:56,949:INFO:Fitting Model
2024-04-24 14:14:56,949:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 14:14:56,950:INFO:Scoring test/hold-out set
2024-04-24 14:14:57,054:INFO:Visual Rendered Successfully
2024-04-24 14:14:57,230:INFO:plot_model() successfully completed......................................
2024-04-24 14:14:57,231:INFO:Initializing evaluate_model()
2024-04-24 14:14:57,231:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 14:14:57,239:INFO:Initializing plot_model()
2024-04-24 14:14:57,240:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, system=True)
2024-04-24 14:14:57,240:INFO:Checking exceptions
2024-04-24 14:14:57,242:INFO:Preloading libraries
2024-04-24 14:14:57,242:INFO:Copying training dataset
2024-04-24 14:14:57,242:INFO:Plot type: pipeline
2024-04-24 14:14:57,296:INFO:Visual Rendered Successfully
2024-04-24 14:14:57,477:INFO:plot_model() successfully completed......................................
2024-04-24 14:14:57,482:INFO:Initializing tune_model()
2024-04-24 14:14:57,482:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>)
2024-04-24 14:14:57,482:INFO:Checking exceptions
2024-04-24 14:14:57,504:INFO:Copying training dataset
2024-04-24 14:14:57,507:INFO:Checking base model
2024-04-24 14:14:57,507:INFO:Base model : Decision Tree Classifier
2024-04-24 14:14:57,510:INFO:Declaring metric variables
2024-04-24 14:14:57,513:INFO:Defining Hyperparameters
2024-04-24 14:14:57,717:INFO:Tuning with n_jobs=-1
2024-04-24 14:14:57,717:INFO:Initializing RandomizedSearchCV
2024-04-24 14:14:57,885:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'entropy'}
2024-04-24 14:14:57,885:INFO:Hyperparameter search completed
2024-04-24 14:14:57,885:INFO:SubProcess create_model() called ==================================
2024-04-24 14:14:57,886:INFO:Initializing create_model()
2024-04-24 14:14:57,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B69F4E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 11, 'criterion': 'entropy'})
2024-04-24 14:14:57,886:INFO:Checking exceptions
2024-04-24 14:14:57,886:INFO:Importing libraries
2024-04-24 14:14:57,886:INFO:Copying training dataset
2024-04-24 14:14:57,890:INFO:Defining folds
2024-04-24 14:14:57,891:INFO:Declaring metric variables
2024-04-24 14:14:57,894:INFO:Importing untrained model
2024-04-24 14:14:57,894:INFO:Declaring custom model
2024-04-24 14:14:57,897:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:14:57,902:INFO:Starting cross validation
2024-04-24 14:14:57,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:14:57,976:INFO:Calculating mean and std
2024-04-24 14:14:57,977:INFO:Creating metrics dataframe
2024-04-24 14:14:57,980:INFO:Finalizing model
2024-04-24 14:14:58,006:INFO:Uploading results into container
2024-04-24 14:14:58,006:INFO:Uploading model into container now
2024-04-24 14:14:58,007:INFO:_master_model_container: 3
2024-04-24 14:14:58,007:INFO:_display_container: 5
2024-04-24 14:14:58,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=11, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best')
2024-04-24 14:14:58,007:INFO:create_model() successfully completed......................................
2024-04-24 14:14:58,178:INFO:SubProcess create_model() end ==================================
2024-04-24 14:14:58,179:INFO:choose_better activated
2024-04-24 14:14:58,182:INFO:SubProcess create_model() called ==================================
2024-04-24 14:14:58,182:INFO:Initializing create_model()
2024-04-24 14:14:58,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:14:58,182:INFO:Checking exceptions
2024-04-24 14:14:58,183:INFO:Importing libraries
2024-04-24 14:14:58,184:INFO:Copying training dataset
2024-04-24 14:14:58,187:INFO:Defining folds
2024-04-24 14:14:58,187:INFO:Declaring metric variables
2024-04-24 14:14:58,188:INFO:Importing untrained model
2024-04-24 14:14:58,188:INFO:Declaring custom model
2024-04-24 14:14:58,188:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:14:58,188:INFO:Starting cross validation
2024-04-24 14:14:58,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 14:14:58,308:INFO:Calculating mean and std
2024-04-24 14:14:58,308:INFO:Creating metrics dataframe
2024-04-24 14:14:58,310:INFO:Finalizing model
2024-04-24 14:14:58,361:INFO:Uploading results into container
2024-04-24 14:14:58,361:INFO:Uploading model into container now
2024-04-24 14:14:58,361:INFO:_master_model_container: 4
2024-04-24 14:14:58,362:INFO:_display_container: 6
2024-04-24 14:14:58,362:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best')
2024-04-24 14:14:58,362:INFO:create_model() successfully completed......................................
2024-04-24 14:14:58,523:INFO:SubProcess create_model() end ==================================
2024-04-24 14:14:58,524:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best') result for F1 is 0.5416
2024-04-24 14:14:58,525:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=11, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best') result for F1 is 0.4869
2024-04-24 14:14:58,526:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best') is best model
2024-04-24 14:14:58,526:INFO:choose_better completed
2024-04-24 14:14:58,526:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 14:14:58,545:INFO:_master_model_container: 4
2024-04-24 14:14:58,545:INFO:_display_container: 5
2024-04-24 14:14:58,546:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best')
2024-04-24 14:14:58,546:INFO:tune_model() successfully completed......................................
2024-04-24 14:14:58,747:INFO:Initializing predict_model()
2024-04-24 14:14:58,747:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251ADDC8EE0>)
2024-04-24 14:14:58,747:INFO:Checking exceptions
2024-04-24 14:14:58,747:INFO:Preloading libraries
2024-04-24 14:14:59,038:INFO:Initializing finalize_model()
2024-04-24 14:14:59,038:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 14:14:59,038:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best')
2024-04-24 14:14:59,042:INFO:Initializing create_model()
2024-04-24 14:14:59,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B706D880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2618, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 14:14:59,042:INFO:Checking exceptions
2024-04-24 14:14:59,043:INFO:Importing libraries
2024-04-24 14:14:59,043:INFO:Copying training dataset
2024-04-24 14:14:59,043:INFO:Defining folds
2024-04-24 14:14:59,043:INFO:Declaring metric variables
2024-04-24 14:14:59,043:INFO:Importing untrained model
2024-04-24 14:14:59,043:INFO:Declaring custom model
2024-04-24 14:14:59,043:INFO:Decision Tree Classifier Imported successfully
2024-04-24 14:14:59,043:INFO:Cross validation set to False
2024-04-24 14:14:59,043:INFO:Fitting Model
2024-04-24 14:14:59,132:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=2618, splitter='best'))],
         verbose=False)
2024-04-24 14:14:59,133:INFO:create_model() successfully completed......................................
2024-04-24 14:14:59,315:INFO:_master_model_container: 4
2024-04-24 14:14:59,315:INFO:_display_container: 6
2024-04-24 14:14:59,320:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=2618, splitter='best'))],
         verbose=False)
2024-04-24 14:14:59,320:INFO:finalize_model() successfully completed......................................
2024-04-24 14:14:59,503:INFO:Initializing save_model()
2024-04-24 14:14:59,503:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=2618, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 14:14:59,503:INFO:Adding model into prep_pipe
2024-04-24 14:14:59,503:WARNING:Only Model saved as it was a pipeline.
2024-04-24 14:14:59,506:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 14:14:59,509:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=2618, splitter='best'))],
         verbose=False)
2024-04-24 14:14:59,509:INFO:save_model() successfully completed......................................
2024-04-24 14:14:59,671:INFO:Initializing load_model()
2024-04-24 14:14:59,671:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 14:14:59,705:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 14:15:03,611:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\2746386614.py:190: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 15:20:20,201:INFO:PyCaret ClassificationExperiment
2024-04-24 15:20:20,202:INFO:Logging name: clf-default-name
2024-04-24 15:20:20,202:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 15:20:20,202:INFO:version 3.2.0
2024-04-24 15:20:20,202:INFO:Initializing setup()
2024-04-24 15:20:20,202:INFO:self.USI: b2c5
2024-04-24 15:20:20,202:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 15:20:20,202:INFO:Checking environment
2024-04-24 15:20:20,202:INFO:python_version: 3.9.19
2024-04-24 15:20:20,202:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 15:20:20,202:INFO:machine: AMD64
2024-04-24 15:20:20,202:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 15:20:20,202:INFO:Memory: svmem(total=33897811968, available=10032283648, percent=70.4, used=23865528320, free=10032283648)
2024-04-24 15:20:20,202:INFO:Physical Core: 14
2024-04-24 15:20:20,202:INFO:Logical Core: 20
2024-04-24 15:20:20,202:INFO:Checking libraries
2024-04-24 15:20:20,202:INFO:System:
2024-04-24 15:20:20,202:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 15:20:20,202:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 15:20:20,202:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 15:20:20,202:INFO:PyCaret required dependencies:
2024-04-24 15:20:20,203:INFO:                 pip: 23.3.1
2024-04-24 15:20:20,203:INFO:          setuptools: 68.2.2
2024-04-24 15:20:20,203:INFO:             pycaret: 3.2.0
2024-04-24 15:20:20,203:INFO:             IPython: 8.15.0
2024-04-24 15:20:20,203:INFO:          ipywidgets: 8.1.2
2024-04-24 15:20:20,203:INFO:                tqdm: 4.65.0
2024-04-24 15:20:20,203:INFO:               numpy: 1.25.2
2024-04-24 15:20:20,203:INFO:              pandas: 1.5.3
2024-04-24 15:20:20,203:INFO:              jinja2: 3.1.3
2024-04-24 15:20:20,203:INFO:               scipy: 1.11.4
2024-04-24 15:20:20,203:INFO:              joblib: 1.2.0
2024-04-24 15:20:20,203:INFO:             sklearn: 1.2.2
2024-04-24 15:20:20,203:INFO:                pyod: 1.0.9
2024-04-24 15:20:20,203:INFO:            imblearn: 0.11.0
2024-04-24 15:20:20,203:INFO:   category_encoders: 2.6.3
2024-04-24 15:20:20,203:INFO:            lightgbm: 4.1.0
2024-04-24 15:20:20,203:INFO:               numba: 0.59.1
2024-04-24 15:20:20,203:INFO:            requests: 2.31.0
2024-04-24 15:20:20,203:INFO:          matplotlib: 3.8.4
2024-04-24 15:20:20,203:INFO:          scikitplot: 0.3.7
2024-04-24 15:20:20,203:INFO:         yellowbrick: 1.5
2024-04-24 15:20:20,203:INFO:              plotly: 5.19.0
2024-04-24 15:20:20,203:INFO:    plotly-resampler: Not installed
2024-04-24 15:20:20,203:INFO:             kaleido: 0.2.1
2024-04-24 15:20:20,203:INFO:           schemdraw: 0.15
2024-04-24 15:20:20,203:INFO:         statsmodels: 0.14.0
2024-04-24 15:20:20,203:INFO:              sktime: 0.21.1
2024-04-24 15:20:20,203:INFO:               tbats: 1.1.3
2024-04-24 15:20:20,203:INFO:            pmdarima: 2.0.4
2024-04-24 15:20:20,203:INFO:              psutil: 5.9.0
2024-04-24 15:20:20,203:INFO:          markupsafe: 2.1.3
2024-04-24 15:20:20,203:INFO:             pickle5: Not installed
2024-04-24 15:20:20,203:INFO:         cloudpickle: 2.2.1
2024-04-24 15:20:20,203:INFO:         deprecation: 2.1.0
2024-04-24 15:20:20,203:INFO:              xxhash: 2.0.2
2024-04-24 15:20:20,203:INFO:           wurlitzer: 3.0.3
2024-04-24 15:20:20,203:INFO:PyCaret optional dependencies:
2024-04-24 15:20:20,203:INFO:                shap: Not installed
2024-04-24 15:20:20,203:INFO:           interpret: Not installed
2024-04-24 15:20:20,203:INFO:                umap: 0.5.3
2024-04-24 15:20:20,203:INFO:     ydata_profiling: Not installed
2024-04-24 15:20:20,203:INFO:  explainerdashboard: Not installed
2024-04-24 15:20:20,203:INFO:             autoviz: Not installed
2024-04-24 15:20:20,203:INFO:           fairlearn: Not installed
2024-04-24 15:20:20,203:INFO:          deepchecks: Not installed
2024-04-24 15:20:20,203:INFO:             xgboost: 1.7.6
2024-04-24 15:20:20,203:INFO:            catboost: 1.2.3
2024-04-24 15:20:20,203:INFO:              kmodes: 0.12.2
2024-04-24 15:20:20,203:INFO:             mlxtend: 0.23.1
2024-04-24 15:20:20,203:INFO:       statsforecast: Not installed
2024-04-24 15:20:20,204:INFO:        tune_sklearn: Not installed
2024-04-24 15:20:20,204:INFO:                 ray: Not installed
2024-04-24 15:20:20,204:INFO:            hyperopt: Not installed
2024-04-24 15:20:20,204:INFO:              optuna: Not installed
2024-04-24 15:20:20,204:INFO:               skopt: Not installed
2024-04-24 15:20:20,204:INFO:              mlflow: 2.9.2
2024-04-24 15:20:20,204:INFO:              gradio: Not installed
2024-04-24 15:20:20,204:INFO:             fastapi: Not installed
2024-04-24 15:20:20,204:INFO:             uvicorn: Not installed
2024-04-24 15:20:20,204:INFO:              m2cgen: Not installed
2024-04-24 15:20:20,204:INFO:           evidently: Not installed
2024-04-24 15:20:20,204:INFO:               fugue: Not installed
2024-04-24 15:20:20,204:INFO:           streamlit: 1.32.0
2024-04-24 15:20:20,204:INFO:             prophet: Not installed
2024-04-24 15:20:20,204:INFO:None
2024-04-24 15:20:20,204:INFO:Set up data.
2024-04-24 15:20:20,218:INFO:Set up folding strategy.
2024-04-24 15:20:20,219:INFO:Set up train/test split.
2024-04-24 15:20:20,219:INFO:Set up data.
2024-04-24 15:20:20,223:INFO:Set up index.
2024-04-24 15:20:20,223:INFO:Assigning column types.
2024-04-24 15:20:20,227:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 15:20:20,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 15:20:20,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:20:20,277:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,280:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 15:20:20,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:20:20,329:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,331:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,331:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 15:20:20,358:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:20:20,374:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,375:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,403:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:20:20,420:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,422:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,423:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 15:20:20,468:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,469:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,513:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,515:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,517:INFO:Preparing preprocessing pipeline...
2024-04-24 15:20:20,518:INFO:Set up simple imputation.
2024-04-24 15:20:20,519:INFO:Set up feature normalization.
2024-04-24 15:20:20,546:INFO:Finished creating preprocessing pipeline.
2024-04-24 15:20:20,551:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 15:20:20,551:INFO:Creating final display dataframe.
2024-04-24 15:20:20,620:INFO:Setup _display_container:                     Description             Value
0                    Session id              2645
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b2c5
2024-04-24 15:20:20,667:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,668:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,709:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:20:20,711:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:20:20,711:INFO:setup() successfully completed in 0.51s...............
2024-04-24 15:20:20,711:INFO:Initializing compare_models()
2024-04-24 15:20:20,711:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 15:20:20,711:INFO:Checking exceptions
2024-04-24 15:20:20,715:INFO:Preparing display monitor
2024-04-24 15:20:20,730:INFO:Initializing Logistic Regression
2024-04-24 15:20:20,730:INFO:Total runtime is 0.0 minutes
2024-04-24 15:20:20,732:INFO:SubProcess create_model() called ==================================
2024-04-24 15:20:20,732:INFO:Initializing create_model()
2024-04-24 15:20:20,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BAA1F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:20:20,732:INFO:Checking exceptions
2024-04-24 15:20:20,732:INFO:Importing libraries
2024-04-24 15:20:20,733:INFO:Copying training dataset
2024-04-24 15:20:20,737:INFO:Defining folds
2024-04-24 15:20:20,737:INFO:Declaring metric variables
2024-04-24 15:20:20,739:INFO:Importing untrained model
2024-04-24 15:20:20,741:INFO:Logistic Regression Imported successfully
2024-04-24 15:20:20,745:INFO:Starting cross validation
2024-04-24 15:20:20,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 15:20:24,452:INFO:Calculating mean and std
2024-04-24 15:20:24,454:INFO:Creating metrics dataframe
2024-04-24 15:20:24,457:INFO:Uploading results into container
2024-04-24 15:20:24,458:INFO:Uploading model into container now
2024-04-24 15:20:24,458:INFO:_master_model_container: 1
2024-04-24 15:20:24,459:INFO:_display_container: 2
2024-04-24 15:20:24,459:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 15:20:24,459:INFO:create_model() successfully completed......................................
2024-04-24 15:20:24,808:INFO:SubProcess create_model() end ==================================
2024-04-24 15:20:24,808:INFO:Creating metrics dataframe
2024-04-24 15:20:24,815:INFO:Initializing Decision Tree Classifier
2024-04-24 15:20:24,815:INFO:Total runtime is 0.06808922290802003 minutes
2024-04-24 15:20:24,817:INFO:SubProcess create_model() called ==================================
2024-04-24 15:20:24,818:INFO:Initializing create_model()
2024-04-24 15:20:24,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BAA1F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:20:24,818:INFO:Checking exceptions
2024-04-24 15:20:24,818:INFO:Importing libraries
2024-04-24 15:20:24,818:INFO:Copying training dataset
2024-04-24 15:20:24,824:INFO:Defining folds
2024-04-24 15:20:24,825:INFO:Declaring metric variables
2024-04-24 15:20:24,827:INFO:Importing untrained model
2024-04-24 15:20:24,830:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:20:24,836:INFO:Starting cross validation
2024-04-24 15:20:24,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 15:20:27,772:INFO:Calculating mean and std
2024-04-24 15:20:27,774:INFO:Creating metrics dataframe
2024-04-24 15:20:27,780:INFO:Uploading results into container
2024-04-24 15:20:27,781:INFO:Uploading model into container now
2024-04-24 15:20:27,782:INFO:_master_model_container: 2
2024-04-24 15:20:27,782:INFO:_display_container: 2
2024-04-24 15:20:27,782:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best')
2024-04-24 15:20:27,783:INFO:create_model() successfully completed......................................
2024-04-24 15:20:27,968:INFO:SubProcess create_model() end ==================================
2024-04-24 15:20:27,968:INFO:Creating metrics dataframe
2024-04-24 15:20:27,982:INFO:Initializing create_model()
2024-04-24 15:20:27,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:20:27,982:INFO:Checking exceptions
2024-04-24 15:20:27,983:INFO:Importing libraries
2024-04-24 15:20:27,983:INFO:Copying training dataset
2024-04-24 15:20:27,987:INFO:Defining folds
2024-04-24 15:20:27,987:INFO:Declaring metric variables
2024-04-24 15:20:27,987:INFO:Importing untrained model
2024-04-24 15:20:27,987:INFO:Declaring custom model
2024-04-24 15:20:27,987:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:20:27,988:INFO:Cross validation set to False
2024-04-24 15:20:27,988:INFO:Fitting Model
2024-04-24 15:20:28,036:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best')
2024-04-24 15:20:28,037:INFO:create_model() successfully completed......................................
2024-04-24 15:20:28,218:INFO:Initializing create_model()
2024-04-24 15:20:28,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:20:28,219:INFO:Checking exceptions
2024-04-24 15:20:28,220:INFO:Importing libraries
2024-04-24 15:20:28,220:INFO:Copying training dataset
2024-04-24 15:20:28,224:INFO:Defining folds
2024-04-24 15:20:28,224:INFO:Declaring metric variables
2024-04-24 15:20:28,225:INFO:Importing untrained model
2024-04-24 15:20:28,225:INFO:Declaring custom model
2024-04-24 15:20:28,225:INFO:Logistic Regression Imported successfully
2024-04-24 15:20:28,226:INFO:Cross validation set to False
2024-04-24 15:20:28,226:INFO:Fitting Model
2024-04-24 15:20:28,244:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 15:20:28,244:INFO:create_model() successfully completed......................................
2024-04-24 15:20:28,424:INFO:_master_model_container: 2
2024-04-24 15:20:28,424:INFO:_display_container: 2
2024-04-24 15:20:28,425:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 15:20:28,425:INFO:compare_models() successfully completed......................................
2024-04-24 15:20:28,425:INFO:Initializing predict_model()
2024-04-24 15:20:28,425:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251BADE0DC0>)
2024-04-24 15:20:28,425:INFO:Checking exceptions
2024-04-24 15:20:28,425:INFO:Preloading libraries
2024-04-24 15:20:29,200:INFO:Initializing plot_model()
2024-04-24 15:20:29,200:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, system=True)
2024-04-24 15:20:29,200:INFO:Checking exceptions
2024-04-24 15:20:29,204:INFO:Preloading libraries
2024-04-24 15:20:29,205:INFO:Copying training dataset
2024-04-24 15:20:29,205:INFO:Plot type: confusion_matrix
2024-04-24 15:20:29,281:INFO:Fitting Model
2024-04-24 15:20:29,281:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 15:20:29,282:INFO:Scoring test/hold-out set
2024-04-24 15:20:29,358:INFO:Visual Rendered Successfully
2024-04-24 15:20:29,528:INFO:plot_model() successfully completed......................................
2024-04-24 15:20:29,529:INFO:Initializing plot_model()
2024-04-24 15:20:29,529:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, system=True)
2024-04-24 15:20:29,529:INFO:Checking exceptions
2024-04-24 15:20:29,532:INFO:Preloading libraries
2024-04-24 15:20:29,532:INFO:Copying training dataset
2024-04-24 15:20:29,532:INFO:Plot type: auc
2024-04-24 15:20:29,624:INFO:Fitting Model
2024-04-24 15:20:29,624:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 15:20:29,625:INFO:Scoring test/hold-out set
2024-04-24 15:20:29,734:INFO:Visual Rendered Successfully
2024-04-24 15:20:29,909:INFO:plot_model() successfully completed......................................
2024-04-24 15:20:29,909:INFO:Initializing evaluate_model()
2024-04-24 15:20:29,909:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 15:20:29,916:INFO:Initializing plot_model()
2024-04-24 15:20:29,916:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, system=True)
2024-04-24 15:20:29,916:INFO:Checking exceptions
2024-04-24 15:20:29,919:INFO:Preloading libraries
2024-04-24 15:20:29,919:INFO:Copying training dataset
2024-04-24 15:20:29,919:INFO:Plot type: pipeline
2024-04-24 15:20:29,982:INFO:Visual Rendered Successfully
2024-04-24 15:20:30,148:INFO:plot_model() successfully completed......................................
2024-04-24 15:20:30,152:INFO:Initializing predict_model()
2024-04-24 15:20:30,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251BAF2F310>)
2024-04-24 15:20:30,152:INFO:Checking exceptions
2024-04-24 15:20:30,152:INFO:Preloading libraries
2024-04-24 15:20:30,984:INFO:Initializing plot_model()
2024-04-24 15:20:30,984:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, system=True)
2024-04-24 15:20:30,984:INFO:Checking exceptions
2024-04-24 15:20:30,988:INFO:Preloading libraries
2024-04-24 15:20:30,988:INFO:Copying training dataset
2024-04-24 15:20:30,988:INFO:Plot type: confusion_matrix
2024-04-24 15:20:31,043:INFO:Fitting Model
2024-04-24 15:20:31,043:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 15:20:31,043:INFO:Scoring test/hold-out set
2024-04-24 15:20:31,107:INFO:Visual Rendered Successfully
2024-04-24 15:20:31,281:INFO:plot_model() successfully completed......................................
2024-04-24 15:20:31,282:INFO:Initializing plot_model()
2024-04-24 15:20:31,282:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, system=True)
2024-04-24 15:20:31,282:INFO:Checking exceptions
2024-04-24 15:20:31,286:INFO:Preloading libraries
2024-04-24 15:20:31,286:INFO:Copying training dataset
2024-04-24 15:20:31,286:INFO:Plot type: auc
2024-04-24 15:20:31,340:INFO:Fitting Model
2024-04-24 15:20:31,340:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 15:20:31,341:INFO:Scoring test/hold-out set
2024-04-24 15:20:31,455:INFO:Visual Rendered Successfully
2024-04-24 15:20:31,623:INFO:plot_model() successfully completed......................................
2024-04-24 15:20:31,625:INFO:Initializing evaluate_model()
2024-04-24 15:20:31,626:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 15:20:31,633:INFO:Initializing plot_model()
2024-04-24 15:20:31,633:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, system=True)
2024-04-24 15:20:31,633:INFO:Checking exceptions
2024-04-24 15:20:31,634:INFO:Preloading libraries
2024-04-24 15:20:31,634:INFO:Copying training dataset
2024-04-24 15:20:31,634:INFO:Plot type: pipeline
2024-04-24 15:20:31,703:INFO:Visual Rendered Successfully
2024-04-24 15:20:31,867:INFO:plot_model() successfully completed......................................
2024-04-24 15:20:31,870:INFO:Initializing predict_model()
2024-04-24 15:20:31,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2645, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B69DB5E0>)
2024-04-24 15:20:31,870:INFO:Checking exceptions
2024-04-24 15:20:31,870:INFO:Preloading libraries
2024-04-24 15:20:32,135:INFO:Initializing predict_model()
2024-04-24 15:20:32,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251B8A31BE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2645, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B7FFF820>)
2024-04-24 15:20:32,136:INFO:Checking exceptions
2024-04-24 15:20:32,136:INFO:Preloading libraries
2024-04-24 15:23:52,877:INFO:PyCaret ClassificationExperiment
2024-04-24 15:23:52,877:INFO:Logging name: clf-default-name
2024-04-24 15:23:52,877:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-24 15:23:52,878:INFO:version 3.2.0
2024-04-24 15:23:52,878:INFO:Initializing setup()
2024-04-24 15:23:52,878:INFO:self.USI: 8f37
2024-04-24 15:23:52,878:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'logging_param', '_available_plots', 'pipeline', 'target_param', 'USI', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'html_param', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'y_train', 'seed', 'fix_imbalance', 'X', 'X_test', 'y', 'exp_id', '_ml_usecase', 'X_train', 'memory', 'log_plots_param', 'exp_name_log'}
2024-04-24 15:23:52,878:INFO:Checking environment
2024-04-24 15:23:52,878:INFO:python_version: 3.9.19
2024-04-24 15:23:52,878:INFO:python_build: ('main', 'Mar 21 2024 17:21:27')
2024-04-24 15:23:52,878:INFO:machine: AMD64
2024-04-24 15:23:52,878:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-24 15:23:52,878:INFO:Memory: svmem(total=33897811968, available=7677280256, percent=77.4, used=26220531712, free=7677280256)
2024-04-24 15:23:52,878:INFO:Physical Core: 14
2024-04-24 15:23:52,878:INFO:Logical Core: 20
2024-04-24 15:23:52,878:INFO:Checking libraries
2024-04-24 15:23:52,878:INFO:System:
2024-04-24 15:23:52,878:INFO:    python: 3.9.19 (main, Mar 21 2024, 17:21:27) [MSC v.1916 64 bit (AMD64)]
2024-04-24 15:23:52,878:INFO:executable: c:\Users\bomyo\Anaconda3\envs\engml\python.exe
2024-04-24 15:23:52,878:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-24 15:23:52,878:INFO:PyCaret required dependencies:
2024-04-24 15:23:52,878:INFO:                 pip: 23.3.1
2024-04-24 15:23:52,878:INFO:          setuptools: 68.2.2
2024-04-24 15:23:52,878:INFO:             pycaret: 3.2.0
2024-04-24 15:23:52,878:INFO:             IPython: 8.15.0
2024-04-24 15:23:52,878:INFO:          ipywidgets: 8.1.2
2024-04-24 15:23:52,878:INFO:                tqdm: 4.65.0
2024-04-24 15:23:52,878:INFO:               numpy: 1.25.2
2024-04-24 15:23:52,878:INFO:              pandas: 1.5.3
2024-04-24 15:23:52,878:INFO:              jinja2: 3.1.3
2024-04-24 15:23:52,878:INFO:               scipy: 1.11.4
2024-04-24 15:23:52,878:INFO:              joblib: 1.2.0
2024-04-24 15:23:52,878:INFO:             sklearn: 1.2.2
2024-04-24 15:23:52,879:INFO:                pyod: 1.0.9
2024-04-24 15:23:52,879:INFO:            imblearn: 0.11.0
2024-04-24 15:23:52,879:INFO:   category_encoders: 2.6.3
2024-04-24 15:23:52,879:INFO:            lightgbm: 4.1.0
2024-04-24 15:23:52,879:INFO:               numba: 0.59.1
2024-04-24 15:23:52,879:INFO:            requests: 2.31.0
2024-04-24 15:23:52,879:INFO:          matplotlib: 3.8.4
2024-04-24 15:23:52,879:INFO:          scikitplot: 0.3.7
2024-04-24 15:23:52,879:INFO:         yellowbrick: 1.5
2024-04-24 15:23:52,879:INFO:              plotly: 5.19.0
2024-04-24 15:23:52,879:INFO:    plotly-resampler: Not installed
2024-04-24 15:23:52,879:INFO:             kaleido: 0.2.1
2024-04-24 15:23:52,879:INFO:           schemdraw: 0.15
2024-04-24 15:23:52,879:INFO:         statsmodels: 0.14.0
2024-04-24 15:23:52,879:INFO:              sktime: 0.21.1
2024-04-24 15:23:52,879:INFO:               tbats: 1.1.3
2024-04-24 15:23:52,879:INFO:            pmdarima: 2.0.4
2024-04-24 15:23:52,879:INFO:              psutil: 5.9.0
2024-04-24 15:23:52,879:INFO:          markupsafe: 2.1.3
2024-04-24 15:23:52,879:INFO:             pickle5: Not installed
2024-04-24 15:23:52,879:INFO:         cloudpickle: 2.2.1
2024-04-24 15:23:52,879:INFO:         deprecation: 2.1.0
2024-04-24 15:23:52,879:INFO:              xxhash: 2.0.2
2024-04-24 15:23:52,879:INFO:           wurlitzer: 3.0.3
2024-04-24 15:23:52,879:INFO:PyCaret optional dependencies:
2024-04-24 15:23:52,879:INFO:                shap: Not installed
2024-04-24 15:23:52,879:INFO:           interpret: Not installed
2024-04-24 15:23:52,879:INFO:                umap: 0.5.3
2024-04-24 15:23:52,879:INFO:     ydata_profiling: Not installed
2024-04-24 15:23:52,879:INFO:  explainerdashboard: Not installed
2024-04-24 15:23:52,879:INFO:             autoviz: Not installed
2024-04-24 15:23:52,879:INFO:           fairlearn: Not installed
2024-04-24 15:23:52,879:INFO:          deepchecks: Not installed
2024-04-24 15:23:52,879:INFO:             xgboost: 1.7.6
2024-04-24 15:23:52,879:INFO:            catboost: 1.2.3
2024-04-24 15:23:52,879:INFO:              kmodes: 0.12.2
2024-04-24 15:23:52,879:INFO:             mlxtend: 0.23.1
2024-04-24 15:23:52,880:INFO:       statsforecast: Not installed
2024-04-24 15:23:52,880:INFO:        tune_sklearn: Not installed
2024-04-24 15:23:52,880:INFO:                 ray: Not installed
2024-04-24 15:23:52,880:INFO:            hyperopt: Not installed
2024-04-24 15:23:52,880:INFO:              optuna: Not installed
2024-04-24 15:23:52,880:INFO:               skopt: Not installed
2024-04-24 15:23:52,880:INFO:              mlflow: 2.9.2
2024-04-24 15:23:52,880:INFO:              gradio: Not installed
2024-04-24 15:23:52,880:INFO:             fastapi: Not installed
2024-04-24 15:23:52,880:INFO:             uvicorn: Not installed
2024-04-24 15:23:52,880:INFO:              m2cgen: Not installed
2024-04-24 15:23:52,880:INFO:           evidently: Not installed
2024-04-24 15:23:52,880:INFO:               fugue: Not installed
2024-04-24 15:23:52,880:INFO:           streamlit: 1.32.0
2024-04-24 15:23:52,880:INFO:             prophet: Not installed
2024-04-24 15:23:52,880:INFO:None
2024-04-24 15:23:52,880:INFO:Set up data.
2024-04-24 15:23:52,885:INFO:Set up folding strategy.
2024-04-24 15:23:52,885:INFO:Set up train/test split.
2024-04-24 15:23:52,885:INFO:Set up data.
2024-04-24 15:23:52,889:INFO:Set up index.
2024-04-24 15:23:52,889:INFO:Assigning column types.
2024-04-24 15:23:52,892:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-24 15:23:52,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 15:23:52,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:23:52,939:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:52,941:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:52,968:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-24 15:23:52,968:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:23:52,987:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:52,989:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:52,989:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-24 15:23:53,013:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:23:53,030:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:53,032:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:53,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-24 15:23:53,081:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:53,082:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:53,083:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-24 15:23:53,127:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:53,129:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:53,172:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:53,173:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:53,175:INFO:Preparing preprocessing pipeline...
2024-04-24 15:23:53,176:INFO:Set up simple imputation.
2024-04-24 15:23:53,176:INFO:Set up feature normalization.
2024-04-24 15:23:53,193:INFO:Finished creating preprocessing pipeline.
2024-04-24 15:23:53,196:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-24 15:23:53,196:INFO:Creating final display dataframe.
2024-04-24 15:23:53,250:INFO:Setup _display_container:                     Description             Value
0                    Session id              4227
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8f37
2024-04-24 15:23:53,298:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:53,300:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:53,343:INFO:Soft dependency imported: xgboost: 1.7.6
2024-04-24 15:23:53,345:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-24 15:23:53,346:INFO:setup() successfully completed in 0.47s...............
2024-04-24 15:23:53,346:INFO:Initializing compare_models()
2024-04-24 15:23:53,346:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-24 15:23:53,346:INFO:Checking exceptions
2024-04-24 15:23:53,350:INFO:Preparing display monitor
2024-04-24 15:23:53,365:INFO:Initializing Logistic Regression
2024-04-24 15:23:53,365:INFO:Total runtime is 0.0 minutes
2024-04-24 15:23:53,368:INFO:SubProcess create_model() called ==================================
2024-04-24 15:23:53,368:INFO:Initializing create_model()
2024-04-24 15:23:53,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BA9FEF70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:23:53,368:INFO:Checking exceptions
2024-04-24 15:23:53,368:INFO:Importing libraries
2024-04-24 15:23:53,368:INFO:Copying training dataset
2024-04-24 15:23:53,372:INFO:Defining folds
2024-04-24 15:23:53,372:INFO:Declaring metric variables
2024-04-24 15:23:53,374:INFO:Importing untrained model
2024-04-24 15:23:53,377:INFO:Logistic Regression Imported successfully
2024-04-24 15:23:53,382:INFO:Starting cross validation
2024-04-24 15:23:53,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 15:23:53,451:INFO:Calculating mean and std
2024-04-24 15:23:53,451:INFO:Creating metrics dataframe
2024-04-24 15:23:53,454:INFO:Uploading results into container
2024-04-24 15:23:53,454:INFO:Uploading model into container now
2024-04-24 15:23:53,455:INFO:_master_model_container: 1
2024-04-24 15:23:53,455:INFO:_display_container: 2
2024-04-24 15:23:53,455:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 15:23:53,455:INFO:create_model() successfully completed......................................
2024-04-24 15:23:53,638:INFO:SubProcess create_model() end ==================================
2024-04-24 15:23:53,638:INFO:Creating metrics dataframe
2024-04-24 15:23:53,645:INFO:Initializing Decision Tree Classifier
2024-04-24 15:23:53,645:INFO:Total runtime is 0.00465384324391683 minutes
2024-04-24 15:23:53,648:INFO:SubProcess create_model() called ==================================
2024-04-24 15:23:53,648:INFO:Initializing create_model()
2024-04-24 15:23:53,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251BA9FEF70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:23:53,648:INFO:Checking exceptions
2024-04-24 15:23:53,648:INFO:Importing libraries
2024-04-24 15:23:53,648:INFO:Copying training dataset
2024-04-24 15:23:53,653:INFO:Defining folds
2024-04-24 15:23:53,653:INFO:Declaring metric variables
2024-04-24 15:23:53,656:INFO:Importing untrained model
2024-04-24 15:23:53,658:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:23:53,663:INFO:Starting cross validation
2024-04-24 15:23:53,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 15:23:53,778:INFO:Calculating mean and std
2024-04-24 15:23:53,778:INFO:Creating metrics dataframe
2024-04-24 15:23:53,781:INFO:Uploading results into container
2024-04-24 15:23:53,782:INFO:Uploading model into container now
2024-04-24 15:23:53,782:INFO:_master_model_container: 2
2024-04-24 15:23:53,782:INFO:_display_container: 2
2024-04-24 15:23:53,782:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best')
2024-04-24 15:23:53,782:INFO:create_model() successfully completed......................................
2024-04-24 15:23:53,953:INFO:SubProcess create_model() end ==================================
2024-04-24 15:23:53,953:INFO:Creating metrics dataframe
2024-04-24 15:23:53,967:INFO:Initializing create_model()
2024-04-24 15:23:53,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:23:53,968:INFO:Checking exceptions
2024-04-24 15:23:53,969:INFO:Importing libraries
2024-04-24 15:23:53,969:INFO:Copying training dataset
2024-04-24 15:23:53,973:INFO:Defining folds
2024-04-24 15:23:53,973:INFO:Declaring metric variables
2024-04-24 15:23:53,973:INFO:Importing untrained model
2024-04-24 15:23:53,973:INFO:Declaring custom model
2024-04-24 15:23:53,974:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:23:53,974:INFO:Cross validation set to False
2024-04-24 15:23:53,974:INFO:Fitting Model
2024-04-24 15:23:54,024:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best')
2024-04-24 15:23:54,024:INFO:create_model() successfully completed......................................
2024-04-24 15:23:54,197:INFO:Initializing create_model()
2024-04-24 15:23:54,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:23:54,197:INFO:Checking exceptions
2024-04-24 15:23:54,199:INFO:Importing libraries
2024-04-24 15:23:54,199:INFO:Copying training dataset
2024-04-24 15:23:54,206:INFO:Defining folds
2024-04-24 15:23:54,206:INFO:Declaring metric variables
2024-04-24 15:23:54,206:INFO:Importing untrained model
2024-04-24 15:23:54,206:INFO:Declaring custom model
2024-04-24 15:23:54,207:INFO:Logistic Regression Imported successfully
2024-04-24 15:23:54,207:INFO:Cross validation set to False
2024-04-24 15:23:54,207:INFO:Fitting Model
2024-04-24 15:23:54,227:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-24 15:23:54,228:INFO:create_model() successfully completed......................................
2024-04-24 15:23:54,418:INFO:_master_model_container: 2
2024-04-24 15:23:54,418:INFO:_display_container: 2
2024-04-24 15:23:54,418:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-24 15:23:54,418:INFO:compare_models() successfully completed......................................
2024-04-24 15:23:54,419:INFO:Initializing predict_model()
2024-04-24 15:23:54,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251BB122D30>)
2024-04-24 15:23:54,419:INFO:Checking exceptions
2024-04-24 15:23:54,419:INFO:Preloading libraries
2024-04-24 15:23:55,063:INFO:Initializing plot_model()
2024-04-24 15:23:55,063:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:23:55,063:INFO:Checking exceptions
2024-04-24 15:23:55,067:INFO:Preloading libraries
2024-04-24 15:23:55,067:INFO:Copying training dataset
2024-04-24 15:23:55,067:INFO:Plot type: confusion_matrix
2024-04-24 15:23:55,117:INFO:Fitting Model
2024-04-24 15:23:55,117:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 15:23:55,117:INFO:Scoring test/hold-out set
2024-04-24 15:23:55,177:INFO:Visual Rendered Successfully
2024-04-24 15:23:55,346:INFO:plot_model() successfully completed......................................
2024-04-24 15:23:55,346:INFO:Initializing plot_model()
2024-04-24 15:23:55,347:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:23:55,347:INFO:Checking exceptions
2024-04-24 15:23:55,351:INFO:Preloading libraries
2024-04-24 15:23:55,352:INFO:Copying training dataset
2024-04-24 15:23:55,352:INFO:Plot type: auc
2024-04-24 15:23:55,406:INFO:Fitting Model
2024-04-24 15:23:55,406:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 15:23:55,407:INFO:Scoring test/hold-out set
2024-04-24 15:23:55,516:INFO:Visual Rendered Successfully
2024-04-24 15:23:55,706:INFO:plot_model() successfully completed......................................
2024-04-24 15:23:55,706:INFO:Initializing evaluate_model()
2024-04-24 15:23:55,706:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 15:23:55,715:INFO:Initializing plot_model()
2024-04-24 15:23:55,715:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:23:55,715:INFO:Checking exceptions
2024-04-24 15:23:55,717:INFO:Preloading libraries
2024-04-24 15:23:55,718:INFO:Copying training dataset
2024-04-24 15:23:55,718:INFO:Plot type: pipeline
2024-04-24 15:23:55,779:INFO:Visual Rendered Successfully
2024-04-24 15:23:55,955:INFO:plot_model() successfully completed......................................
2024-04-24 15:23:55,958:INFO:Initializing predict_model()
2024-04-24 15:23:55,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B6497B80>)
2024-04-24 15:23:55,958:INFO:Checking exceptions
2024-04-24 15:23:55,958:INFO:Preloading libraries
2024-04-24 15:23:56,763:INFO:Initializing plot_model()
2024-04-24 15:23:56,763:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:23:56,763:INFO:Checking exceptions
2024-04-24 15:23:56,766:INFO:Preloading libraries
2024-04-24 15:23:56,766:INFO:Copying training dataset
2024-04-24 15:23:56,767:INFO:Plot type: confusion_matrix
2024-04-24 15:23:56,813:INFO:Fitting Model
2024-04-24 15:23:56,813:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 15:23:56,814:INFO:Scoring test/hold-out set
2024-04-24 15:23:56,871:INFO:Visual Rendered Successfully
2024-04-24 15:23:57,092:INFO:plot_model() successfully completed......................................
2024-04-24 15:23:57,094:INFO:Initializing plot_model()
2024-04-24 15:23:57,094:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:23:57,094:INFO:Checking exceptions
2024-04-24 15:23:57,102:INFO:Preloading libraries
2024-04-24 15:23:57,103:INFO:Copying training dataset
2024-04-24 15:23:57,104:INFO:Plot type: auc
2024-04-24 15:23:57,190:INFO:Fitting Model
2024-04-24 15:23:57,191:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-24 15:23:57,191:INFO:Scoring test/hold-out set
2024-04-24 15:23:57,299:INFO:Visual Rendered Successfully
2024-04-24 15:23:57,466:INFO:plot_model() successfully completed......................................
2024-04-24 15:23:57,466:INFO:Initializing evaluate_model()
2024-04-24 15:23:57,466:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 15:23:57,473:INFO:Initializing plot_model()
2024-04-24 15:23:57,473:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:23:57,474:INFO:Checking exceptions
2024-04-24 15:23:57,475:INFO:Preloading libraries
2024-04-24 15:23:57,475:INFO:Copying training dataset
2024-04-24 15:23:57,475:INFO:Plot type: pipeline
2024-04-24 15:23:57,524:INFO:Visual Rendered Successfully
2024-04-24 15:23:57,695:INFO:plot_model() successfully completed......................................
2024-04-24 15:23:57,698:INFO:Initializing predict_model()
2024-04-24 15:23:57,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251BAF33E50>)
2024-04-24 15:23:57,699:INFO:Checking exceptions
2024-04-24 15:23:57,699:INFO:Preloading libraries
2024-04-24 15:23:57,932:INFO:Initializing predict_model()
2024-04-24 15:23:57,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4227, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251BAAE4940>)
2024-04-24 15:23:57,932:INFO:Checking exceptions
2024-04-24 15:23:57,932:INFO:Preloading libraries
2024-04-24 15:23:58,252:INFO:Initializing tune_model()
2024-04-24 15:23:58,252:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>)
2024-04-24 15:23:58,252:INFO:Checking exceptions
2024-04-24 15:23:58,263:INFO:Copying training dataset
2024-04-24 15:23:58,265:INFO:Checking base model
2024-04-24 15:23:58,266:INFO:Base model : Decision Tree Classifier
2024-04-24 15:23:58,268:INFO:Declaring metric variables
2024-04-24 15:23:58,270:INFO:Defining Hyperparameters
2024-04-24 15:23:58,477:INFO:Tuning with n_jobs=-1
2024-04-24 15:23:58,477:INFO:Initializing RandomizedSearchCV
2024-04-24 15:23:58,601:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy'}
2024-04-24 15:23:58,601:INFO:Hyperparameter search completed
2024-04-24 15:23:58,601:INFO:SubProcess create_model() called ==================================
2024-04-24 15:23:58,601:INFO:Initializing create_model()
2024-04-24 15:23:58,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000251B7E278B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.002, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'entropy'})
2024-04-24 15:23:58,602:INFO:Checking exceptions
2024-04-24 15:23:58,602:INFO:Importing libraries
2024-04-24 15:23:58,602:INFO:Copying training dataset
2024-04-24 15:23:58,605:INFO:Defining folds
2024-04-24 15:23:58,606:INFO:Declaring metric variables
2024-04-24 15:23:58,608:INFO:Importing untrained model
2024-04-24 15:23:58,608:INFO:Declaring custom model
2024-04-24 15:23:58,611:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:23:58,615:INFO:Starting cross validation
2024-04-24 15:23:58,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 15:23:58,682:INFO:Calculating mean and std
2024-04-24 15:23:58,682:INFO:Creating metrics dataframe
2024-04-24 15:23:58,687:INFO:Finalizing model
2024-04-24 15:23:58,701:INFO:Uploading results into container
2024-04-24 15:23:58,702:INFO:Uploading model into container now
2024-04-24 15:23:58,702:INFO:_master_model_container: 3
2024-04-24 15:23:58,702:INFO:_display_container: 7
2024-04-24 15:23:58,703:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best')
2024-04-24 15:23:58,703:INFO:create_model() successfully completed......................................
2024-04-24 15:23:58,882:INFO:SubProcess create_model() end ==================================
2024-04-24 15:23:58,882:INFO:choose_better activated
2024-04-24 15:23:58,887:INFO:SubProcess create_model() called ==================================
2024-04-24 15:23:58,887:INFO:Initializing create_model()
2024-04-24 15:23:58,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:23:58,887:INFO:Checking exceptions
2024-04-24 15:23:58,888:INFO:Importing libraries
2024-04-24 15:23:58,889:INFO:Copying training dataset
2024-04-24 15:23:58,892:INFO:Defining folds
2024-04-24 15:23:58,892:INFO:Declaring metric variables
2024-04-24 15:23:58,892:INFO:Importing untrained model
2024-04-24 15:23:58,892:INFO:Declaring custom model
2024-04-24 15:23:58,893:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:23:58,893:INFO:Starting cross validation
2024-04-24 15:23:58,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-24 15:23:59,002:INFO:Calculating mean and std
2024-04-24 15:23:59,002:INFO:Creating metrics dataframe
2024-04-24 15:23:59,004:INFO:Finalizing model
2024-04-24 15:23:59,054:INFO:Uploading results into container
2024-04-24 15:23:59,055:INFO:Uploading model into container now
2024-04-24 15:23:59,055:INFO:_master_model_container: 4
2024-04-24 15:23:59,055:INFO:_display_container: 8
2024-04-24 15:23:59,056:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best')
2024-04-24 15:23:59,056:INFO:create_model() successfully completed......................................
2024-04-24 15:23:59,224:INFO:SubProcess create_model() end ==================================
2024-04-24 15:23:59,224:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best') result for F1 is 0.5456
2024-04-24 15:23:59,225:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best') result for F1 is 0.4569
2024-04-24 15:23:59,225:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best') is best model
2024-04-24 15:23:59,225:INFO:choose_better completed
2024-04-24 15:23:59,225:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-24 15:23:59,234:INFO:_master_model_container: 4
2024-04-24 15:23:59,234:INFO:_display_container: 7
2024-04-24 15:23:59,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best')
2024-04-24 15:23:59,234:INFO:tune_model() successfully completed......................................
2024-04-24 15:23:59,409:INFO:Initializing predict_model()
2024-04-24 15:23:59,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251B91BE430>)
2024-04-24 15:23:59,409:INFO:Checking exceptions
2024-04-24 15:23:59,409:INFO:Preloading libraries
2024-04-24 15:23:59,675:INFO:Initializing finalize_model()
2024-04-24 15:23:59,675:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-24 15:23:59,676:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best')
2024-04-24 15:23:59,678:INFO:Initializing create_model()
2024-04-24 15:23:59,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4227, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-24 15:23:59,678:INFO:Checking exceptions
2024-04-24 15:23:59,679:INFO:Importing libraries
2024-04-24 15:23:59,679:INFO:Copying training dataset
2024-04-24 15:23:59,679:INFO:Defining folds
2024-04-24 15:23:59,680:INFO:Declaring metric variables
2024-04-24 15:23:59,680:INFO:Importing untrained model
2024-04-24 15:23:59,680:INFO:Declaring custom model
2024-04-24 15:23:59,680:INFO:Decision Tree Classifier Imported successfully
2024-04-24 15:23:59,680:INFO:Cross validation set to False
2024-04-24 15:23:59,680:INFO:Fitting Model
2024-04-24 15:23:59,738:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False)
2024-04-24 15:23:59,739:INFO:create_model() successfully completed......................................
2024-04-24 15:23:59,911:INFO:_master_model_container: 4
2024-04-24 15:23:59,911:INFO:_display_container: 8
2024-04-24 15:23:59,915:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False)
2024-04-24 15:23:59,915:INFO:finalize_model() successfully completed......................................
2024-04-24 15:24:00,092:INFO:Initializing save_model()
2024-04-24 15:24:00,092:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False), model_name=modelo_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\bomyo\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-24 15:24:00,092:INFO:Adding model into prep_pipe
2024-04-24 15:24:00,092:WARNING:Only Model saved as it was a pipeline.
2024-04-24 15:24:00,095:INFO:modelo_kobe.pkl saved in current working directory
2024-04-24 15:24:00,098:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False)
2024-04-24 15:24:00,098:INFO:save_model() successfully completed......................................
2024-04-24 15:24:00,265:INFO:Initializing load_model()
2024-04-24 15:24:00,265:INFO:load_model(model_name=modelo_kobe, platform=None, authentication=None, verbose=True)
2024-04-24 15:24:00,321:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\mlflow\models\signature.py:212: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input) if model_input is not None else None

2024-04-24 15:24:04,227:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\1871125504.py:213: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.9.2/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(FILE_REGISTERED_MODEL)[-1].version

2024-04-24 15:45:38,854:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3518166401.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 15:46:19,698:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\2899135567.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 15:54:13,048:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\1888092713.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 15:55:10,971:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3216060778.py:23: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod.dropna(axis=0, inplace=True)

2024-04-24 15:55:10,979:WARNING:C:\Users\bomyo\AppData\Local\Temp\ipykernel_56664\3216060778.py:29: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_prod['predict_score'] = Y

2024-04-24 15:55:10,983:INFO:Initializing plot_model()
2024-04-24 15:55:10,983:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:55:10,983:INFO:Checking exceptions
2024-04-24 15:55:10,987:INFO:Preloading libraries
2024-04-24 15:55:10,988:INFO:Copying training dataset
2024-04-24 15:55:10,988:INFO:Plot type: confusion_matrix
2024-04-24 15:55:11,068:INFO:Fitting Model
2024-04-24 15:55:11,068:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 15:55:11,068:INFO:Scoring test/hold-out set
2024-04-24 15:55:11,126:INFO:Visual Rendered Successfully
2024-04-24 15:55:11,324:INFO:plot_model() successfully completed......................................
2024-04-24 15:55:11,327:INFO:Initializing plot_model()
2024-04-24 15:55:11,327:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:55:11,328:INFO:Checking exceptions
2024-04-24 15:55:11,331:INFO:Preloading libraries
2024-04-24 15:55:11,332:INFO:Copying training dataset
2024-04-24 15:55:11,332:INFO:Plot type: auc
2024-04-24 15:55:11,384:INFO:Fitting Model
2024-04-24 15:55:11,384:WARNING:c:\Users\bomyo\Anaconda3\envs\engml\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-24 15:55:11,385:INFO:Scoring test/hold-out set
2024-04-24 15:55:11,498:INFO:Visual Rendered Successfully
2024-04-24 15:55:11,696:INFO:plot_model() successfully completed......................................
2024-04-24 15:55:11,700:INFO:Initializing evaluate_model()
2024-04-24 15:55:11,700:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-24 15:55:11,711:INFO:Initializing plot_model()
2024-04-24 15:55:11,711:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=4227, splitter='best'))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000251BAA079D0>, system=True)
2024-04-24 15:55:11,711:INFO:Checking exceptions
2024-04-24 15:55:11,713:INFO:Preloading libraries
2024-04-24 15:55:11,714:INFO:Copying training dataset
2024-04-24 15:55:11,714:INFO:Plot type: pipeline
2024-04-24 15:55:11,763:INFO:Visual Rendered Successfully
2024-04-24 15:55:11,970:INFO:plot_model() successfully completed......................................
